<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计组 Chapter2 数据的表示与运算</title>
    <link href="/posts/a3943bb.html"/>
    <url>/posts/a3943bb.html</url>
    
    <content type="html"><![CDATA[<h1 id="第二章-数据的表示与运算"><a href="#第二章-数据的表示与运算" class="headerlink" title="第二章 数据的表示与运算"></a>第二章 数据的表示与运算</h1><p><a name="DMhmG"></a></p><h1 id="2-1-数位转换"><a href="#2-1-数位转换" class="headerlink" title="2.1 数位转换"></a>2.1 数位转换</h1><p>略<br><a name="F0R6A"></a></p><h1 id="2-1-2🦐BCD码"><a href="#2-1-2🦐BCD码" class="headerlink" title="2.1.2🦐BCD码"></a>2.1.2🦐BCD码</h1><p>BCD_ Binary-Coded Decimal 二进制编码的十进制<br><a name="25iWS"></a></p><h2 id="8421码"><a href="#8421码" class="headerlink" title="8421码"></a>8421码</h2><blockquote><p>主要是加法</p></blockquote><p>4bit表示一组十进制位<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600924373627-7003c4bf-aa12-420f-befc-479aacd6b532.png#align=left&display=inline&height=49&margin=%5Bobject%20Object%5D&name=image.png&originHeight=98&originWidth=620&size=58711&status=done&style=none&width=310" srcset="/img/loading.gif" alt="image.png"><br>如果储存95 就是 1001 0101<br><strong>注意！1010-1111没有定义（10-15）</strong></p><p><strong>加法：</strong></p><ul><li><strong>手算，可以先用十进制得出结果再转为2进制</strong></li><li><strong>机算，假如遇到非法区域，加6进一位  (指10+6 = 16 ，0001 1111) ; 如果合法则不用管</strong></li></ul><p>举例：5+8 = 13<br>机算：0101+1000 = 1101（普通的13） -&gt; 0001 0011  <strong>正好是13 in 8421</strong><br>**</p><p>其他：<br>余三码<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600925046833-90679b9d-6e70-4b7a-88b0-7ad5cda3b735.png#align=left&display=inline&height=48&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=642&size=68824&status=done&style=none&width=321" srcset="/img/loading.gif" alt="image.png"><br>2421码<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600925115886-a947c31e-8742-4fe9-add1-cb823f8a16ea.png#align=left&display=inline&height=50&margin=%5Bobject%20Object%5D&name=image.png&originHeight=100&originWidth=630&size=83594&status=done&style=none&width=315" srcset="/img/loading.gif" alt="image.png"></p><p><a name="sheqo"></a></p><h2 id="有权码"><a href="#有权码" class="headerlink" title="有权码"></a>有权码</h2><p>8421 指 对应位数上的*<em>权重 *</em>2^3-2^0 -&gt; 8421<br>2421 则是改变权值定义的码<br>都是有权码</p><p>但是余三码不存在权重，被称为<strong>无权码</strong></p><p><a name="Drxv4"></a></p><h1 id="⛓2-2-字符串表示方法"><a href="#⛓2-2-字符串表示方法" class="headerlink" title="⛓2.2 字符串表示方法"></a>⛓2.2 字符串表示方法</h1><p><a name="biqYJ"></a></p><h2 id="🎫ASCII码"><a href="#🎫ASCII码" class="headerlink" title="🎫ASCII码"></a>🎫ASCII码</h2><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600925437442-c99007d7-aa2c-46ae-9c0c-0466b19f2c36.png#align=left&display=inline&height=199&margin=%5Bobject%20Object%5D&name=image.png&originHeight=397&originWidth=726&size=285055&status=done&style=none&width=363" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600925536527-c6cad443-cde4-4c58-bcc1-3736305ab1f6.png#align=left&display=inline&height=16&margin=%5Bobject%20Object%5D&name=image.png&originHeight=31&originWidth=274&size=12518&status=done&style=none&width=137" srcset="/img/loading.gif" alt="image.png"> <strong>前四位刚好是8421</strong><br><strong>eg:</strong><br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600925712729-a9300fbe-c561-472b-9a21-d4b2dc7ba7d7.png#align=left&display=inline&height=97&margin=%5Bobject%20Object%5D&name=image.png&originHeight=194&originWidth=690&size=71755&status=done&style=none&width=345" srcset="/img/loading.gif" alt="image.png"></strong><br><a name="SK71M"></a></p><h2 id="✍汉字表示"><a href="#✍汉字表示" class="headerlink" title="✍汉字表示"></a>✍汉字表示</h2><p>GB2312，用区位（坐标）来确定汉字<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600926034667-6082083f-8334-4f52-aa23-b1a69e50a2f3.png#align=left&display=inline&height=152&margin=%5Bobject%20Object%5D&name=image.png&originHeight=240&originWidth=402&size=87220&status=done&style=none&width=255" srcset="/img/loading.gif" alt="image.png"><br>+十六进制20H -&gt; +二进制32<strong>国标码 *<em>—&gt; +80H  +1000 0000 二进制  128十进制 -&gt; 彻底跃出ASCII的位数(区分) *</em>汉字内码</strong></p><p><strong>输入编码——</strong>把输入法的拼音+数字 字符串 变为 国标码，再由软件变为汉字内码 存储<br><strong>汉字字形码——</strong>汉字内码转换为字模信息</p><p><a name="3zK7O"></a></p><h2 id="🎭奇偶校验"><a href="#🎭奇偶校验" class="headerlink" title="🎭奇偶校验"></a>🎭奇偶校验</h2><p><a name="pygRQ"></a></p><h3 id="校验原理"><a href="#校验原理" class="headerlink" title="校验原理"></a>校验原理</h3><blockquote><p>补充概念<br>由若干个代码组成（表示）的字 ——码字<br>将2个码字逐位对比，具有<strong>不同位的个数</strong>称为<strong>两个码字间的距离</strong><br>if一种编码方案有多个合法码字，他们的最小距离称为<strong>码距——</strong>d</p></blockquote><p><strong>一种编码方案的码距和检错能力是有关系的</strong><br>eg：<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601017944193-21795d22-6e69-4bd0-a9a2-2d4b4ee06818.png#align=left&display=inline&height=69&margin=%5Bobject%20Object%5D&name=image.png&originHeight=138&originWidth=769&size=104111&status=done&style=none&width=384.5" srcset="/img/loading.gif" alt="image.png"><br>第一种编码方式：2bit 4种方案均为合法 码距为1<br>假如出现（一）位错误，接受方无法判断错误</p><p>第二种编码方式： 3bit 4个合法 4个非法  码距为2<br>当出现一位错误时， 接受方可以发现并报错。<br><a name="aQyE2"></a></p><h3 id="奇偶校验"><a href="#奇偶校验" class="headerlink" title="奇偶校验"></a>奇偶校验</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601018236758-ae6de6ba-f47d-49b9-8662-311982a88967.png#align=left&display=inline&height=109&margin=%5Bobject%20Object%5D&name=image.png&originHeight=218&originWidth=607&size=44123&status=done&style=none&width=303.5" srcset="/img/loading.gif" alt="image.png"><br>eg:<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601018255904-d9940f66-a50c-4bb3-9fdb-adb3efbbff54.png#align=left&display=inline&height=16&margin=%5Bobject%20Object%5D&name=image.png&originHeight=32&originWidth=541&size=12857&status=done&style=none&width=270.5" srcset="/img/loading.gif" alt="image.png"><br>手算：1001101      奇 1 1001101  偶 0 1001101<br>机算：<strong>偶校验：</strong>对各信息进行异或运算，得到的结果为偶校验位<br>                  对所有位进行异或，若结果为1则wrong<br>eg：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601018531483-fa90de8c-c99a-4160-ae7c-30e8c64f949d.png#align=left&display=inline&height=11&margin=%5Bobject%20Object%5D&name=image.png&originHeight=21&originWidth=241&size=10115&status=done&style=none&width=120.5" srcset="/img/loading.gif" alt="image.png"> 偶数位为0；<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601018610970-f3d5ba9b-5018-411b-af77-afeba54d85fe.png#align=left&display=inline&height=9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=18&originWidth=276&size=10608&status=done&style=none&width=138" srcset="/img/loading.gif" alt="image.png"> 对；</p><blockquote><p>局限性：只能发现奇数位错误，且无法知道哪出错。</p></blockquote><p><a name="LoKOf"></a></p><h2 id="🦍Hamming校验码"><a href="#🦍Hamming校验码" class="headerlink" title="🦍Hamming校验码"></a>🦍Hamming校验码</h2><p><a name="AstAL"></a></p><h3 id="思路简介"><a href="#思路简介" class="headerlink" title="思路简介"></a>思路简介</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601971480103-4402a78f-cfd8-45ee-9e2d-0bef98f8d06f.png#align=left&display=inline&height=156&margin=%5Bobject%20Object%5D&name=image.png&originHeight=156&originWidth=968&size=81681&status=done&style=none&width=968" srcset="/img/loading.gif" alt="image.png"><br>！！注意，海明码是一种可以纠正<strong>一位差错</strong>的编码<br><a name="2PNQU"></a></p><h3 id="需要几个校验位"><a href="#需要几个校验位" class="headerlink" title="需要几个校验位"></a>需要几个校验位</h3><blockquote><p>标识，Hi为海明码位，Di为信息位，Pi为校验位</p></blockquote><p><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601972692040-1311483e-35e7-4213-b4e9-e6e84dc68c64.png#align=left&display=inline&height=200&margin=%5Bobject%20Object%5D&name=image.png&originHeight=200&originWidth=813&size=116088&status=done&style=none&width=813" srcset="/img/loading.gif" alt="image.png"></strong><br>** <strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601971682307-3348c52a-2f47-497a-935b-da7aa570a17b.png#align=left&display=inline&height=288&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=1247&size=192993&status=done&style=none&width=1247" srcset="/img/loading.gif" alt="image.png"><br>其中，</strong>码元一共有n+k个比特位，共包含2^k个校验状态，其中只有一种状态是“对”，n+k个码一位出错的情况有“n+k”种，故总信息数要大于等于错误+正确的情况**<br><strong>即 2^k&gt;=n+k+1</strong><br>**<br><a name="kE6Db"></a></p><h3 id="校验位放到哪"><a href="#校验位放到哪" class="headerlink" title="校验位放到哪"></a>校验位放到哪</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601972175386-da3f459e-a149-42bc-91da-144e40afb8d8.png#align=left&display=inline&height=94&margin=%5Bobject%20Object%5D&name=image.png&originHeight=94&originWidth=624&size=43316&status=done&style=none&width=624" srcset="/img/loading.gif" alt="image.png"><br>eg: 4位信息，3位校验<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601972225315-729a297c-a39d-4e39-8bd4-02a2e429a6d6.png#align=left&display=inline&height=180&margin=%5Bobject%20Object%5D&name=image.png&originHeight=180&originWidth=814&size=93319&status=done&style=none&width=814" srcset="/img/loading.gif" alt="image.png"><br>规则，3个组每个进行偶校验<br><a name="7kH7X"></a></p><h3 id="分组如何校验"><a href="#分组如何校验" class="headerlink" title="分组如何校验"></a>分组如何校验</h3><p>校验位的“地址”刚好代表的<strong>二进制的权重，即124…，</strong>对于3，5，6，7这四个地址都可以用二进制表示，刚好是 三位 ——》校验码的个数<br>然后按照二进制位数进行校验<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601972628307-3db12773-8b85-4951-b3aa-7bd3c1f37d53.png#align=left&display=inline&height=586&margin=%5Bobject%20Object%5D&name=image.png&originHeight=586&originWidth=802&size=313473&status=done&style=none&width=802" srcset="/img/loading.gif" alt="image.png"><br>如图，对于第一个校验位P1，对应二进制位数为第一位，校验的组为 H3 H6 H7（D1 D2 D4），对此这三个数的值进行校验 结果为 校验位P1的值，其余同理。<br><a name="ueXxI"></a></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p><a name="f8bYE"></a></p><h3 id="如何找错"><a href="#如何找错" class="headerlink" title="如何找错"></a>如何找错</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601973084038-6b43d46d-6509-4398-bd83-b4b6910f3666.png#align=left&display=inline&height=590&margin=%5Bobject%20Object%5D&name=image.png&originHeight=590&originWidth=745&size=366428&status=done&style=none&width=745" srcset="/img/loading.gif" alt="image.png">)<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601973108235-ccb3a08e-a5bc-48c6-b706-41f4bbc0b2c3.png#align=left&display=inline&height=277&margin=%5Bobject%20Object%5D&name=image.png&originHeight=277&originWidth=293&size=95683&status=done&style=none&width=293" srcset="/img/loading.gif" alt="image.png"><br><strong>补充：一般还有一位“全校验码”来填补偶校验的“单位检错”问题，即可以检错最多2位，但纠错（0-&gt;1&amp;1-&gt;0）最多1位</strong><br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601973626690-2eafeb80-6e86-4b09-80e4-8b83c27f2c0c.png#align=left&display=inline&height=134&margin=%5Bobject%20Object%5D&name=image.png&originHeight=134&originWidth=828&size=92148&status=done&style=none&width=828" srcset="/img/loading.gif" alt="image.png"></strong><br><strong>解释:<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601973620524-5021888a-5033-42c4-b66c-44a950035e74.png#align=left&display=inline&height=342&margin=%5Bobject%20Object%5D&name=image.png&originHeight=342&originWidth=1396&size=281516&status=done&style=none&width=1396" srcset="/img/loading.gif" alt="image.png"></strong><br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601973713261-be983f71-9f7e-41e9-998e-6cc36396a898.png#align=left&display=inline&height=226&margin=%5Bobject%20Object%5D&name=image.png&originHeight=226&originWidth=1172&size=188045&status=done&style=none&width=1172" srcset="/img/loading.gif" alt="image.png"></strong><br>**<br><a name="MmrhH"></a></p><h3 id="🎂循环冗余校验码"><a href="#🎂循环冗余校验码" class="headerlink" title="🎂循环冗余校验码"></a>🎂循环冗余校验码</h3><blockquote><p>会算就行</p></blockquote><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601983890840-9d3444cc-25fb-4198-95ed-5c8d1e55be63.png#align=left&display=inline&height=191&margin=%5Bobject%20Object%5D&name=image.png&originHeight=368&originWidth=754&size=220942&status=done&style=none&width=392" srcset="/img/loading.gif" alt="image.png"><br><strong>步骤：</strong><br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601984012828-ccb19550-c84b-4551-94bb-a4cd1f63ba09.png#align=left&display=inline&height=291&margin=%5Bobject%20Object%5D&name=image.png&originHeight=654&originWidth=1634&size=326666&status=done&style=none&width=727" srcset="/img/loading.gif" alt="image.png"></strong><br>Q：模二除&amp;模二减计算？<br>A：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601984286633-676cabd7-9689-49f4-a9d2-31fe2034ffc1.png#align=left&display=inline&height=355&margin=%5Bobject%20Object%5D&name=image.png&originHeight=590&originWidth=381&size=52379&status=done&style=none&width=229" srcset="/img/loading.gif" alt="image.png"><br><strong>检错和纠错</strong><br>有检错能力，<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601984452575-683ab1ca-9f92-4a13-b8b4-10609301c433.png#align=left&display=inline&height=154&margin=%5Bobject%20Object%5D&name=image.png&originHeight=191&originWidth=906&size=156962&status=done&style=none&width=729" srcset="/img/loading.gif" alt="image.png"><br>但纠错有限制（因为有时候出错位数会高于2^校验码位数）<br>当<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601984422892-b7889f07-bb7d-4957-9cd8-83820f67d155.png#align=left&display=inline&height=34&margin=%5Bobject%20Object%5D&name=image.png&originHeight=57&originWidth=1350&size=61708&status=done&style=none&width=796" srcset="/img/loading.gif" alt="image.png"><br>Q：不太懂检错特点&amp;<strong>生成多项式</strong>的原理？？<br>A：好像了解下就行。</p>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>计网 Chapter2 物理层</title>
    <link href="/posts/5b15c8d0.html"/>
    <url>/posts/5b15c8d0.html</url>
    
    <content type="html"><![CDATA[<h1 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a>第二章 物理层</h1><blockquote><p>多在选择题</p></blockquote><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600343864371-339ccc03-5891-47f4-8158-0a06308cff5c.png#align=left&display=inline&height=292&margin=%5Bobject%20Object%5D&name=image.png&originHeight=583&originWidth=907&size=184899&status=done&style=none&width=453.5" srcset="/img/loading.gif" alt="image.png"><br><a name="WO2a4"></a></p><h1 id="物理层接口特性"><a href="#物理层接口特性" class="headerlink" title="物理层接口特性"></a>物理层接口特性</h1><p>解决如何在连接各种主机的传输媒体上<strong>传输数据比特流</strong>，而不是考虑传输媒体。<br>主要任务——确认与传输媒体<strong>接口</strong>有关的特性（标准）   </p><ul><li><p>机械特性，定义物理连接采用的规格，接口形状，引线/引脚数目</p></li><li><p>电气特性，线路上信号的<strong>电压范围</strong>，阻抗匹配，传输<strong>速率</strong>，<strong>距离</strong>限制</p><blockquote><p>eg:某网络规定，信号电平+10-+15v为二进制0，-10V - -15V表示1，电线长度为15m内</p></blockquote></li><li><p>功能特性，表面某条线<strong>某一电平表示何种意义</strong>，接口信号线用途</p><blockquote><p>eg:描述一个物理层接口引脚处与高电平是的含义</p></blockquote></li><li><p>规格(过程)特性，定义物理线路的工作规程，时序</p></li></ul><p><a name="ejfor"></a></p><h1 id="🐌数据通信基础"><a href="#🐌数据通信基础" class="headerlink" title="🐌数据通信基础"></a>🐌数据通信基础</h1><p><a name="6KnoG"></a></p><h2 id="典型数据通信模型"><a href="#典型数据通信模型" class="headerlink" title="典型数据通信模型"></a>典型数据通信模型</h2><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600344496903-bb78c20f-3efc-4c54-bc40-888f7901f40b.png#align=left&display=inline&height=179&margin=%5Bobject%20Object%5D&name=image.png&originHeight=358&originWidth=899&size=226791&status=done&style=none&width=449.5" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>注意下面的几个专有名词</p></blockquote><p>Q；广域网和模拟信道什么意思？为什么要变为模拟信号？<br>A：<br><a name="fjSsO"></a></p><h2 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h2><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600344687890-416cf64b-8bf0-4a6d-acbf-6a8d9b952ac1.png#align=left&display=inline&height=181&margin=%5Bobject%20Object%5D&name=image.png&originHeight=362&originWidth=804&size=261959&status=done&style=shadow&width=402" srcset="/img/loading.gif" alt="image.png"><br><a name="BOuxF"></a></p><h2 id="🐱‍👤三种通信方式"><a href="#🐱‍👤三种通信方式" class="headerlink" title="🐱‍👤三种通信方式"></a>🐱‍👤三种通信方式</h2><p><a name="paQOF"></a></p><h3 id="单工通信"><a href="#单工通信" class="headerlink" title="单工通信"></a>单工通信</h3><p>只有一个方向的通信，无反方向交互，只需要<strong>一条信道</strong> eg：广播<br><a name="BXveT"></a></p><h3 id="半双工通信-双向交替通信"><a href="#半双工通信-双向交替通信" class="headerlink" title="半双工通信/双向交替通信"></a>半双工通信/双向交替通信</h3><p>通信双方都可以发送接收信息，但任何一方不能同时发送&amp;接受，需要<strong>两条信道</strong> eg:对讲机<br><a name="4FlqY"></a></p><h3 id="全双工"><a href="#全双工" class="headerlink" title="全双工"></a>全双工</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600344954228-4089f6de-3d6d-4236-8c4c-52b3a720d1b1.png#align=left&display=inline&height=11&margin=%5Bobject%20Object%5D&name=image.png&originHeight=22&originWidth=411&size=11907&status=done&style=none&width=205.5" srcset="/img/loading.gif" alt="image.png"></p><p><a name="ABNuD"></a></p><h2 id="两种传输方式"><a href="#两种传输方式" class="headerlink" title="两种传输方式"></a>两种传输方式</h2><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600345395859-a5d53372-0072-4672-b114-1338b23cc325.png#align=left&display=inline&height=201&margin=%5Bobject%20Object%5D&name=image.png&originHeight=401&originWidth=744&size=183001&status=done&style=none&width=372" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>一般计算机内部都是并行传输</p></blockquote><p><a name="1Gdis"></a></p><h2 id="实现同步传输"><a href="#实现同步传输" class="headerlink" title="实现同步传输"></a>实现同步传输</h2><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600345353877-33db8abb-abef-4f79-83c8-0943917b8e36.png#align=left&display=inline&height=207&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=901&size=176765&status=done&style=none&width=450.5" srcset="/img/loading.gif" alt="image.png"><br>Q：同步字符什么作用？<br>A：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600345485980-d83a5f6e-1e46-40d8-bb8f-52e8036dde37.png#align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&name=image.png&originHeight=120&originWidth=741&size=16977&status=done&style=none&width=370.5" srcset="/img/loading.gif" alt="image.png"><br>相比起始位终止位的好处是开销会小一点，同时速度会快。</p><p>Q：如何选择用同步还是异步<br>A：</p><p><a name="TSVQH"></a></p><h2 id="🎏数据传输速率术语"><a href="#🎏数据传输速率术语" class="headerlink" title="🎏数据传输速率术语"></a>🎏数据传输速率术语</h2><p><a name="rbFhC"></a></p><h3 id="码元-Symbol"><a href="#码元-Symbol" class="headerlink" title="码元 Symbol"></a>码元 Symbol</h3><p><strong>固定时长</strong>的<strong>信号波形（数字脉冲）</strong>，代表不同离散数值的基本波形，数字通信中的计量单位。其中固定时长称为<strong>码元宽度</strong>。<br>如果码元离散状态M&gt;2，则为M进制码元<br><strong>一码元可以携带多个比特的信息量。</strong><br>eg:<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600396444402-7d298e38-6601-47b5-9d98-f72ec6b495c3.png#align=left&display=inline&height=207&margin=%5Bobject%20Object%5D&name=image.png&originHeight=207&originWidth=371&size=48194&status=done&style=none&width=371" srcset="/img/loading.gif" alt="image.png"><br>其中 0101010101数据转化为数字信号传给B，二进制且为固定时长，码元有两种，高电平的1和低电平的0，<strong>携带1比特信息量。</strong></p><p>假如为4进制码元，则码元就有4种状态（信号波形），离散数值为00 01 10 11，<strong>携带2比特信息量。</strong></p><p><a name="vLUoH"></a></p><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p>也叫数据率，指数据的传输速率，可用<strong>码元传输速率</strong> 和 <strong>信息传输速率</strong> 表示。</p><ul><li>码元传输速率</li></ul><p>单位时间内数字通信系统传输的码元个数； 单位Baud B</p><blockquote><p>码元速率和进制无关，只和宽度有关</p></blockquote><ul><li>信息传输速率，比特率</li></ul><p>单位时间内<strong>二进制码元(即比特数）</strong>个数。单位b/s</p><blockquote><p>通常比较系统传输速率用的是 信息V</p></blockquote><p><a name="iOVYC"></a></p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600398104759-0dd8c8f7-5db8-43c4-b2f2-33c3d739d44e.png#align=left&display=inline&height=184&margin=%5Bobject%20Object%5D&name=image.png&originHeight=184&originWidth=1416&size=207021&status=done&style=none&width=1416" srcset="/img/loading.gif" alt="image.png"></p><p><a name="NzIcX"></a></p><h2 id="🤖奈式准则-amp-香农定理"><a href="#🤖奈式准则-amp-香农定理" class="headerlink" title="🤖奈式准则&amp;香农定理"></a>🤖奈式准则&amp;香农定理</h2><p><a name="9uwaD"></a></p><h3 id="失真"><a href="#失真" class="headerlink" title="失真"></a>失真</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601133958776-8105db93-e92f-46be-984a-1db9a35247a8.png#align=left&display=inline&height=160&margin=%5Bobject%20Object%5D&name=image.png&originHeight=320&originWidth=961&size=179075&status=done&style=none&width=480.5" srcset="/img/loading.gif" alt="image.png"><br>因素：<br>**<br>eg: 码间串扰<br>接收端收到的信号波形<strong>失去了码元之间清晰界限</strong>的现象（太快了导致高低电平分不清楚）<br><a name="PfE3f"></a></p><h3 id="奈式准则"><a href="#奈式准则" class="headerlink" title="奈式准则"></a>奈式准则</h3><p>在<strong>理想低通</strong>（无噪声&amp;带宽受限）下，避免码间串扰，极限码元传播速率为2W Baud W为信道带宽（单位HZ）</p><blockquote><p>只有这两个公式才用HZ</p></blockquote><p>补：<strong>极限数据传输率：2Wlog2 V(b/s)——比特率，其中V为码元的离散电平类型数 说白就是码元传播速率转换为信息。。。</strong><br><strong>eg：假如为2进制码元，极限数据传输率 就是 2W*log2 4 = 4W</strong></p><hr><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601195862570-f81bf104-8838-453c-88c9-88e6488e5e4a.png#align=left&display=inline&height=63&margin=%5Bobject%20Object%5D&name=image.png&originHeight=125&originWidth=393&size=35423&status=done&style=none&width=196.5" srcset="/img/loading.gif" alt="image.png"><br>V=4<em>4=16； 2</em>3K<em>log2 16 = 24 24Kb/s<br>Q：这个4</em>4怎么得出的？<br>A：朝向&amp;调幅结合在一起</p><p><a name="JI4gM"></a></p><h3 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h3><p>在<strong>带宽受限且有噪声的信道</strong>中，为了不产生误差，信息的数据传输速率有上限值<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601196244004-71367adb-7dc0-4d3c-b9b8-1a7d03fb3a92.png#align=left&display=inline&height=22&margin=%5Bobject%20Object%5D&name=image.png&originHeight=44&originWidth=543&size=22096&status=done&style=none&width=271.5" srcset="/img/loading.gif" alt="image.png"> <img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601196426759-ad9a4a48-3614-4170-90d9-20ee8f155adc.png#align=left&display=inline&height=19&margin=%5Bobject%20Object%5D&name=image.png&originHeight=38&originWidth=227&size=15644&status=done&style=none&width=113.5" srcset="/img/loading.gif" alt="image.png"><br>其中，S/N为*<em>信噪比： 信号的平均功率/噪声的平均功率； *</em>W单位也为Hz</p><p><strong>只要信息的传输速率低于信道极限传输速率，理论上就能实现无差别传输</strong><br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601196442377-cda92a47-d56f-4a7d-9df0-55050f4aef19.png#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&name=image.png&originHeight=83&originWidth=370&size=23842&status=done&style=none&width=185" srcset="/img/loading.gif" alt="image.png">)<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601196508313-79ce5497-cb3b-481f-8327-7bc4f2dccce7.png#align=left&display=inline&height=38&margin=%5Bobject%20Object%5D&name=image.png&originHeight=76&originWidth=564&size=27914&status=done&style=none&width=282" srcset="/img/loading.gif" alt="image.png"></strong><br>**<br><a name="zDY7Y"></a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601196578578-35aa1df9-fa4c-40b8-8976-8a933568529d.png#align=left&display=inline&height=97&margin=%5Bobject%20Object%5D&name=image.png&originHeight=194&originWidth=875&size=143927&status=done&style=none&width=437.5" srcset="/img/loading.gif" alt="image.png"><br><strong>假如题目给了 S/N &amp; V，就应该将两个公式的结果取最小值作为极限数据传输率</strong></p><p><a name="B1t5v"></a></p><h2 id="👩‍💻编码-amp-调制"><a href="#👩‍💻编码-amp-调制" class="headerlink" title="👩‍💻编码&amp;调制"></a>👩‍💻编码&amp;调制</h2><p><a name="4Jun4"></a></p><h3 id="基带信号-宽带信号"><a href="#基带信号-宽带信号" class="headerlink" title="基带信号 宽带信号"></a>基带信号 宽带信号</h3><p><strong>基带信号</strong><br><strong>*<em>来自信源的信号 *</em></strong>将数字信号用电压表示，再送到<strong>数字信道</strong>传输<br><strong>宽带信号</strong><br>将基带信号<strong>调制</strong>后再传输到<strong>模拟信道</strong>传输<br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601276719340-4d6cc449-5523-4df7-93ee-07094d99dd08.png#align=left&display=inline&height=30&margin=%5Bobject%20Object%5D&name=image.png&originHeight=60&originWidth=940&size=58646&status=done&style=none&width=470" srcset="/img/loading.gif" alt="image.png"></strong><br>**<br><a name="w1Zai"></a></p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601276894741-55e618f2-e606-4ac8-aa25-32d35f2256bd.png#align=left&display=inline&height=43&margin=%5Bobject%20Object%5D&name=image.png&originHeight=85&originWidth=317&size=27090&status=done&style=none&width=158.5" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601276913746-8a8210d0-d23e-4fc8-8260-60ee0bd3ba51.png#align=left&display=inline&height=57&margin=%5Bobject%20Object%5D&name=image.png&originHeight=113&originWidth=739&size=80428&status=done&style=none&width=369.5" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601277557346-63d60862-a61e-487e-a669-762d80c65e15.png#align=left&display=inline&height=48&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=507&size=31502&status=done&style=none&width=253.5" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601278129757-e1fbbe0b-5283-4251-be51-957516f3684a.png#align=left&display=inline&height=154&margin=%5Bobject%20Object%5D&name=image.png&originHeight=308&originWidth=673&size=61669&status=done&style=none&width=336.5" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601278227383-878e21de-9b67-44a7-911f-8dcc7e8424f0.png#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&name=image.png&originHeight=83&originWidth=634&size=13700&status=done&style=none&width=317" srcset="/img/loading.gif" alt="image.png"></p><ul><li>非归零 NRZ—— 1为高电平 0为低电平 <strong>难以保持同步</strong></li><li>归零 RZ ——<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601278217644-ac148583-ae91-47de-9d7c-451a75d8ffd9.png#align=left&display=inline&height=28&margin=%5Bobject%20Object%5D&name=image.png&originHeight=57&originWidth=282&size=13882&status=done&style=none&width=141" srcset="/img/loading.gif" alt="image.png"></li><li>反向不归零 NRZI——电平反转表示0，电平不变表示1</li><li>曼彻斯特—— 将一个码元分成2个相等的间隔，前高后低or前低后高 对应 01</li></ul><p><strong>每个码元中间都会出现电平跳变</strong>——用于CLK同步或数据信号，但<strong>频带宽度</strong>是原始基带宽度2倍<br><strong>数据传输速率为调制速率1/2</strong></p><blockquote><p>CLK同步的理解：出现一次跳变就知道要接受一个码元的信息了</p></blockquote><ul><li>差分曼彻斯特——若码元为1，则半个码元与上一个码元后半段相同，0则相反。同样中间有次跳变</li></ul><p>抗干扰性强于曼彻斯特。</p><ul><li>4B/5B编码——<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601278024533-18a14b6a-4f6a-4b55-8aa2-eadf16809028.png#align=left&display=inline&height=139&margin=%5Bobject%20Object%5D&name=image.png&originHeight=278&originWidth=583&size=130796&status=done&style=none&width=291.5" srcset="/img/loading.gif" alt="image.png"></li></ul><p><a name="qnPlq"></a></p><h3 id="数字数据调制为模拟信号"><a href="#数字数据调制为模拟信号" class="headerlink" title="数字数据调制为模拟信号"></a>数字数据调制为模拟信号</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601278480203-cee891f7-82db-44e7-be9f-94e322f8cf0b.png#align=left&display=inline&height=146&margin=%5Bobject%20Object%5D&name=image.png&originHeight=291&originWidth=578&size=88405&status=done&style=none&width=289" srcset="/img/loading.gif" alt="image.png"><br>Q：调频和调相是什么意思？<br>A：<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601900247408-5f0b6156-46c6-438f-9ed8-8ab443123a42.png#align=left&display=inline&height=287&margin=%5Bobject%20Object%5D&name=image.png&originHeight=556&originWidth=1013&size=109987&status=done&style=none&width=522" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601900407306-d7a5be2e-1021-4014-ba9f-2f1035d0ef5a.png#align=left&display=inline&height=260&margin=%5Bobject%20Object%5D&name=image.png&originHeight=547&originWidth=1079&size=262075&status=done&style=none&width=512" srcset="/img/loading.gif" alt="image.png"><br>QAM:<strong>调幅+调相</strong><br>**<br>例题<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601278691930-797d7f53-357e-4aa2-99e9-ea5050b5eeda.png#align=left&display=inline&height=39&margin=%5Bobject%20Object%5D&name=image.png&originHeight=69&originWidth=415&size=35912&status=done&style=none&width=232" srcset="/img/loading.gif" alt="image.png"><br>形状：4*4 = 16（种）——<br>log2 16 = 4—— 一码元的比特数</p><p>波特率<em>log2V——极限数据传输速率（信息传输速率）= 1200</em>4 = 4800bit/s</p><p><a name="W9I2A"></a></p><h3 id="模拟信号编码为数字信号"><a href="#模拟信号编码为数字信号" class="headerlink" title="模拟信号编码为数字信号"></a>模拟信号编码为数字信号</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601901342385-f16b8c0d-189b-4f8a-8d44-7cc93576ffa4.png#align=left&display=inline&height=893&margin=%5Bobject%20Object%5D&name=image.png&originHeight=893&originWidth=1879&size=1206768&status=done&style=none&width=1879" srcset="/img/loading.gif" alt="image.png"></p><p>f<strong>采 &gt; *<em>2f信号最高解释 *</em>见红图</strong><br><strong>a频率是2hz，b是1hz，假如采样频率是2hz，可以得到b的采样，但是a波一定失真</strong><br><strong>假如采样是4hz，则ab波都能被正常采上。</strong></p><p><a name="aqA1i"></a></p><h2 id="👨‍🏭数据交换方式"><a href="#👨‍🏭数据交换方式" class="headerlink" title="👨‍🏭数据交换方式"></a>👨‍🏭数据交换方式</h2><p><a name="NObK8"></a></p><h3 id="电路交换-Cricuit-Exchanging"><a href="#电路交换-Cricuit-Exchanging" class="headerlink" title="电路交换 Cricuit Exchanging"></a>电路交换 Cricuit Exchanging</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601901709486-b9989591-8548-4f63-98d8-8feb2485f386.png#align=left&display=inline&height=223&margin=%5Bobject%20Object%5D&name=image.png&originHeight=302&originWidth=972&size=266090&status=done&style=none&width=719" srcset="/img/loading.gif" alt="image.png"></p><ul><li>呼叫</li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902042689-17167020-66ef-4057-9586-dde2939f6648.png#align=left&display=inline&height=218&margin=%5Bobject%20Object%5D&name=image.png&originHeight=395&originWidth=1482&size=671140&status=done&style=none&width=818" srcset="/img/loading.gif" alt="image.png"><br>B收到请求后，会按照DCBA的顺序返回<strong>呼叫应答</strong></p><ul><li>通信——数据传输  <strong>是全双工通信方式，双方都可以传接</strong></li><li>释放连接</li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902096712-9eef5191-c8bb-496e-a2bb-c5caf89470a0.png#align=left&display=inline&height=229&margin=%5Bobject%20Object%5D&name=image.png&originHeight=426&originWidth=1470&size=611635&status=done&style=none&width=790" srcset="/img/loading.gif" alt="image.png"><br>当B收到释放请求后，会<strong>返回应答</strong>，交换机按DCBA的顺序释放。</p><p>原理：<strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902218594-4ee81f69-e5aa-4ec5-8baa-2ad874c03e3a.png#align=left&display=inline&height=166&margin=%5Bobject%20Object%5D&name=image.png&originHeight=201&originWidth=632&size=98792&status=done&style=none&width=523" srcset="/img/loading.gif" alt="image.png"></strong><br><strong><strong>特点：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902266560-55098ac9-6471-4bb5-a1ef-75be47ab96ab.png#align=left&display=inline&height=100&margin=%5Bobject%20Object%5D&name=image.png&originHeight=100&originWidth=1101&size=100971&status=done&style=none&width=1101" srcset="/img/loading.gif" alt="image.png"></strong></strong></p><blockquote><p>独占资源：该链路开始交换时无法被其他主机占用</p></blockquote><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902322782-be2b5627-e203-48bf-8160-fa87919ad565.png#align=left&display=inline&height=756&margin=%5Bobject%20Object%5D&name=image.png&originHeight=756&originWidth=1743&size=1124041&status=done&style=none&width=1743" srcset="/img/loading.gif" alt="image.png"><br>Q：交换机都有什么功能？<br>A：<br><a name="ikVRu"></a></p><h3 id="报文交换-Message-Exchanging"><a href="#报文交换-Message-Exchanging" class="headerlink" title="报文交换 Message Exchanging"></a>报文交换 Message Exchanging</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902439379-53afd042-0ce6-414c-bd15-59df9e06b284.png#align=left&display=inline&height=97&margin=%5Bobject%20Object%5D&name=image.png&originHeight=97&originWidth=1793&size=130710&status=done&style=none&width=1793" srcset="/img/loading.gif" alt="image.png"><br><strong>单次发送的数据块</strong><br>**<br><strong>原理：存储转发，无需建立专用通路</strong><br><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902586111-c266e33a-5323-48d9-8dbc-b4066dff4247.png#align=left&display=inline&height=274&margin=%5Bobject%20Object%5D&name=image.png&originHeight=458&originWidth=1730&size=717884&status=done&style=none&width=1035" srcset="/img/loading.gif" alt="image.png"></strong></p><blockquote><p>路由信息——计算报文怎样传输到目的地距离最短的 线路段<br>这图种ACB距离大于AB，所以走AB</p></blockquote><p>Q：如何检查有无错误？<br>A：每个结点收到后会从<strong>分组数据</strong>来源的<strong>副本</strong>进行对比，若一致正确，则向来源发送确认信息，来源节点丢弃副本。</p><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902748385-fc40ed5f-9d36-4961-8a8d-a8d5bee505dd.png#align=left&display=inline&height=463&margin=%5Bobject%20Object%5D&name=image.png&originHeight=859&originWidth=1817&size=1642255&status=done&style=none&width=980" srcset="/img/loading.gif" alt="image.png"><br><a name="crHWL"></a></p><h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902937225-6d83871a-e298-4b5b-abff-d8ede5d8798b.png#align=left&display=inline&height=124&margin=%5Bobject%20Object%5D&name=image.png&originHeight=124&originWidth=1715&size=131716&status=done&style=none&width=1715" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902909780-823a009f-8383-4218-b248-98e446537a1b.png#align=left&display=inline&height=328&margin=%5Bobject%20Object%5D&name=image.png&originHeight=328&originWidth=1682&size=258388&status=done&style=none&width=1682" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601902998363-a05a7d5e-1070-400f-b8c3-41940adc7e9e.png#align=left&display=inline&height=266&margin=%5Bobject%20Object%5D&name=image.png&originHeight=266&originWidth=1706&size=275890&status=done&style=none&width=1706" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601910348155-50981c82-4082-416b-bb69-35890b441627.png#align=left&display=inline&height=858&margin=%5Bobject%20Object%5D&name=image.png&originHeight=858&originWidth=1781&size=1681031&status=done&style=none&width=1781" srcset="/img/loading.gif" alt="image.png"><br><a name="ftH6x"></a></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><p><a name="3cHgk"></a></p><h4 id="数据报"><a href="#数据报" class="headerlink" title="数据报"></a>数据报</h4><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601910995159-66feafc1-21af-4ed4-a35f-df64fed1636b.png#align=left&display=inline&height=828&margin=%5Bobject%20Object%5D&name=image.png&originHeight=828&originWidth=1810&size=494301&status=done&style=none&width=1810" srcset="/img/loading.gif" alt="image.png"><br><strong>特点：</strong><br><strong><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601911080925-dd3e365b-32e7-4b83-8ba7-9d42a270db02.png#align=left&display=inline&height=771&margin=%5Bobject%20Object%5D&name=image.png&originHeight=771&originWidth=1788&size=1076115&status=done&style=none&width=1788" srcset="/img/loading.gif" alt="image.png"></strong></strong><br><a name="vhWGP"></a></p><h4 id="🌟虚电路"><a href="#🌟虚电路" class="headerlink" title="🌟虚电路"></a>🌟虚电路</h4><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601911423235-70d261fb-e5d8-4bfc-8a83-736babdc0994.png#align=left&display=inline&height=830&margin=%5Bobject%20Object%5D&name=image.png&originHeight=830&originWidth=1842&size=1058602&status=done&style=none&width=1842" srcset="/img/loading.gif" alt="image.png"><br><strong>特点</strong><br><strong><strong><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601911466978-13bd1f26-8eed-4401-b5fc-2929440084f8.png#align=left&display=inline&height=822&margin=%5Bobject%20Object%5D&name=image.png&originHeight=822&originWidth=1863&size=1186530&status=done&style=none&width=1863" srcset="/img/loading.gif" alt="image.png"></strong></strong><br><a name="wWfFX"></a></p><h3 id="如何选择"><a href="#如何选择" class="headerlink" title="如何选择"></a>如何选择</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601910509056-b5355a46-509b-4aaf-964f-79577a34962b.png#align=left&display=inline&height=803&margin=%5Bobject%20Object%5D&name=image.png&originHeight=803&originWidth=1870&size=707134&status=done&style=none&width=1870" srcset="/img/loading.gif" alt="image.png"><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1601911520420-cc798e87-22c3-47b9-800c-af17903d878a.png#align=left&display=inline&height=723&margin=%5Bobject%20Object%5D&name=image.png&originHeight=723&originWidth=1781&size=474012&status=done&style=none&width=1781" srcset="/img/loading.gif" alt="image.png"><br><a name="6ac23978"></a></p><h1 id="②物理层传输介质"><a href="#②物理层传输介质" class="headerlink" title="②物理层传输介质"></a>②物理层传输介质</h1><p>略，见书本</p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hololive事件之我见</title>
    <link href="/posts/cbf972d8.html"/>
    <url>/posts/cbf972d8.html</url>
    
    <content type="html"><![CDATA[<p>假期前这几天，被蛆皇这事整的每天郁闷地不行，消极怠工，写篇文章发泄一下后准备彻底脱离箱推，逐渐退坑～</p><h1 id="事件回顾"><a href="#事件回顾" class="headerlink" title="事件回顾"></a>事件回顾</h1><p>懒得复述，想了解的自己去nga看置顶帖介绍</p><blockquote><p><a href="https://bbs.nga.cn/read.php?tid=23508046" target="_blank" rel="noopener">https://bbs.nga.cn/read.php?tid=23508046</a></p></blockquote><h1 id="hololive的决策"><a href="#hololive的决策" class="headerlink" title="hololive的决策"></a>hololive的决策</h1><p>说实话，我认为最大的问题在于hololive管理&amp;运营部门，任何全球化的大企业在不同国家开启业务的时候，会有很多关于<strong>当地风俗政策红线的培训</strong>，而很明显cover是没做到这点的。</p><p>全球化时代，人们不可避免的会接触和自己政治思想有差异的人，这是无解的，想要和平共处就只能不去聊这个话题。</p><p>政治范畴的讨论和娱乐不该扯上关系。对任何有良知的、不是历史虚无主义的中国人来说，我们经历了地狱难度的国家复兴…..</p><p>待续</p><iframe src="//player.bilibili.com/player.html?aid=754799290&bvid=BV1uk4y1C73a&cid=240966842&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p><strong>小羊真的好温柔啊。。。。。</strong></p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vtubers</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计组 Chapter1 计算机系统概述</title>
    <link href="/posts/31c36041.html"/>
    <url>/posts/31c36041.html</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-计算机系统概述"><a href="#第一章-计算机系统概述" class="headerlink" title="第一章 计算机系统概述"></a>第一章 计算机系统概述</h1><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>计算机系统=硬件（主机，外设）+软件</p><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li>系统软件——管理整个计算机系统 eg:语言处理/DBMS/操作系统</li><li>应用软件——按任务编制成的程序</li></ul><h3 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h3><p>机器语言/汇编语言(<strong>需要考虑电脑本身特性</strong>) -&gt; FORTRAN -&gt; PASCAL -&gt;…..</p><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>逻辑元件——处理电信号最小的单元 eg:电子管</p><h3 id="发展-1"><a href="#发展-1" class="headerlink" title="发展"></a>发展</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600844434742-d343e2bf-c7a9-4a28-ab12-a2803857a70a.png#align=left&display=inline&height=135&margin=%5Bobject%20Object%5D&name=image.png&originHeight=181&originWidth=717&size=179879&status=done&style=none&width=536" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>第一代用的是机器语言，即0101010….<br>第二代出现了面向过程的语言，且有了操作系统的原型。晶体管为手动焊接<br>第三代有了集成电路，不是手动焊接更加稳定<br>第四代开始出现微处理机，微型计算机，PC萌芽，出现操作系统</p></blockquote><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600844783596-583558b8-e72a-443c-91eb-0cbeba23ece2.png#align=left&display=inline&height=80&margin=%5Bobject%20Object%5D&name=image.png&originHeight=160&originWidth=522&size=73164&status=done&style=none&width=261" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>摩尔定律：集成电路每隔18个月会double，整体性能double</p></blockquote><h3 id="基本组成"><a href="#基本组成" class="headerlink" title="基本组成"></a>基本组成</h3><h4 id="冯诺依曼机-EDVAC"><a href="#冯诺依曼机-EDVAC" class="headerlink" title="冯诺依曼机 EDVAC"></a>冯诺依曼机 EDVAC</h4><blockquote><p>程序指令的解析 经过存储器和控制器的<strong>控制线</strong> 由控制器完成</p></blockquote><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600845404425-c6c92d17-2f51-4fae-9d90-a8a135f1267c.png#align=left&display=inline&height=221&margin=%5Bobject%20Object%5D&name=image.png&originHeight=324&originWidth=796&size=151264&status=done&style=none&width=543" srcset="/img/loading.gif" alt="image.png"><br>Tip: 软件和硬件在逻辑上是等价的<br>A：硬件可以用电路实现，软件可以用多次加法实现。</p><p>特点：</p><ul><li>由五大部件</li><li>指令&amp; 数据以同等地位(地址)在储存器</li><li>指令&amp; 数据 二进制表示</li><li>指令由*<em>操作码 地址码 *</em>组成</li><li>存储程序</li><li><strong>以运算器为中心</strong></li></ul><p><strong>解释：</strong>数据通过输入设备先经过<strong>运算器</strong>为中转进存储器，存储器收到命令再把数据传给运算器（对应那个数据线双箭头）<br>效率有点差</p><h4 id="现代计算机"><a href="#现代计算机" class="headerlink" title="现代计算机"></a>现代计算机</h4><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600845772367-e6c4b80d-383b-4fb6-9e15-6fc6ceafe96f.png#align=left&display=inline&height=151&margin=%5Bobject%20Object%5D&name=image.png&originHeight=218&originWidth=459&size=62321&status=done&style=none&width=318" srcset="/img/loading.gif" alt="image.png"><br><strong>以存储器为中心！</strong><br>补充，存储器有主存&amp;辅存<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600845851720-92a8f1b3-a287-4e6f-905f-577bab26cdd9.png#align=left&display=inline&height=98&margin=%5Bobject%20Object%5D&name=image.png&originHeight=195&originWidth=340&size=39112&status=done&style=none&width=170" srcset="/img/loading.gif" alt="image.png"><br>Q：辅存啥意思？<br>A：</p><h3 id="硬件部件-工作原理"><a href="#硬件部件-工作原理" class="headerlink" title="硬件部件 工作原理"></a>硬件部件 工作原理</h3><h4 id="主存储器"><a href="#主存储器" class="headerlink" title="主存储器"></a>主存储器</h4><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600846028422-75e08bb7-4568-4078-8a83-f69a541b2932.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=317&originWidth=191&size=44616&status=done&style=none&width=143" srcset="/img/loading.gif" alt="image.png"><br><strong>存储体</strong>——数据在存储体内按地址存储<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600846251601-38f93a21-b454-4fe7-83d1-3a0bd5c11c35.png#align=left&display=inline&height=176&margin=%5Bobject%20Object%5D&name=image.png&originHeight=352&originWidth=419&size=89388&status=done&style=none&width=209.5" srcset="/img/loading.gif" alt="image.png"><br>举例：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600846452065-702513fc-a09e-4bfc-b63c-0885024440c9.png#align=left&display=inline&height=57&margin=%5Bobject%20Object%5D&name=image.png&originHeight=114&originWidth=285&size=31238&status=done&style=none&width=142.5" srcset="/img/loading.gif" alt="image.png"></p><h4 id="运算器——实现算术运算，逻辑运算"><a href="#运算器——实现算术运算，逻辑运算" class="headerlink" title="运算器——实现算术运算，逻辑运算"></a>运算器——实现算术运算，逻辑运算</h4><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600846576520-b2d8bbde-b10c-419e-ae84-20dc275c63d5.png#align=left&display=inline&height=250&margin=%5Bobject%20Object%5D&name=image.png&originHeight=381&originWidth=780&size=169549&status=done&style=none&width=512" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>操作码6位 地址码10位，总共16位，计算机会自动拆分</p></blockquote><h4 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h4><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600846758973-956de346-7d05-4fcc-8841-e9853bfaaa83.png#align=left&display=inline&height=166&margin=%5Bobject%20Object%5D&name=image.png&originHeight=331&originWidth=709&size=153111&status=done&style=none&width=354.5" srcset="/img/loading.gif" alt="image.png"></p><h4 id="🌀举例"><a href="#🌀举例" class="headerlink" title="🌀举例"></a>🌀举例</h4><p>eg: “取数”操作 int a = 2<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600847433775-b99052ac-7f65-4b9c-bd8a-336994cf541a.png#align=left&display=inline&height=200&margin=%5Bobject%20Object%5D&name=image.png&originHeight=373&originWidth=823&size=271540&status=done&style=none&width=441" srcset="/img/loading.gif" alt="image.png"><br>其中，(部件) 表示硬件内存储的数据， OP(IR)表示指令集的操作码，M( )表示地址码<br>101 -&gt; 5（引用到主存5地址的指令）       000001-&gt;取数操作           10-&gt; 2（无地址存放的是Data:int类型的2）<br><strong>补充：a=2存放到ACC后，PC计数器+1</strong><br>**<br>eg2:” a<em>b”<br>*</em><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600848048658-90835b05-963c-4644-a365-721aee360bbb.png#align=left&display=inline&height=210&margin=%5Bobject%20Object%5D&name=image.png&originHeight=370&originWidth=800&size=269088&status=done&style=none&width=453" srcset="/img/loading.gif" alt="image.png">**<br><strong>比</strong>上面多了个运算器的逻辑</p><p>eg3 停机<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600848400788-80b13e91-07ae-49c1-b8c9-734c9e2c5689.png#align=left&display=inline&height=230&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=809&size=274523&status=done&style=none&width=450" srcset="/img/loading.gif" alt="image.png"><br>总结：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600848498479-98c3bde0-a924-4503-aaa7-80cc970f0de7.png#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&name=image.png&originHeight=51&originWidth=552&size=21300&status=done&style=none&width=276" srcset="/img/loading.gif" alt="image.png"></p><p>Q：x不是操作数寄存器么？为什么存a=2, “<strong>操作数</strong>怎么理解”<br>A：X准确应该是<strong>通用寄存器，</strong>既可以传输&amp;存数据，也可以参与逻辑运算，在存数据那块可以看之前那个表格，在算术运算中它储存的是加数，ACC存储的是被加数</p><h2 id="计算机系统的五层结构"><a href="#计算机系统的五层结构" class="headerlink" title="计算机系统的五层结构"></a>计算机系统的五层结构</h2><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600863347407-2f418133-87db-4d77-8606-e7b257306a58.png#align=left&display=inline&height=893&margin=%5Bobject%20Object%5D&name=image.png&originHeight=893&originWidth=1577&size=624147&status=done&style=none&width=1577" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>虚拟机器——以为能和计算机对话。。。。</p></blockquote><h3 id="三种级别的语言"><a href="#三种级别的语言" class="headerlink" title="三种级别的语言"></a>三种级别的语言</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600863561204-0a6a11a1-1706-44c1-b172-54768851a7d3.png#align=left&display=inline&height=860&margin=%5Bobject%20Object%5D&name=image.png&originHeight=860&originWidth=1324&size=862138&status=done&style=none&width=1324" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>load 助记符就是 CU ACC理解的取数</p></blockquote><ul><li>编译程序——将高级语言编写的源程序一次性翻译为机器语言程序&amp;执行</li><li>解释程序——翻译一句执行一句</li></ul><h2 id="计算机性能"><a href="#计算机性能" class="headerlink" title="计算机性能"></a>计算机性能</h2><h3 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h3><p>总容量——存储单元个数<em>存储字长（bit）<br>MAD位数反应*</em>存储单元个数（2的对数）<strong>，MDR位数反映</strong>每个存储单元的大小（bit）**<br>eg: MAD为32位,MDR为8位              总容量 2^32 * 8bit = 2^32 Byte = 4GB<br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600863840033-62989457-2c32-4d49-89e2-bc0518c1c08e.png#align=left&display=inline&height=96&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=581&size=87808&status=done&style=none&width=581" srcset="/img/loading.gif" alt="image.png"></p><h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><p><strong>CPU主频——CPU内脉冲信号震荡频率</strong><br><strong>** <img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600864030205-1d4b8ebe-6e80-4d33-a501-e94cc9adeca3.png#align=left&display=inline&height=261&margin=%5Bobject%20Object%5D&name=image.png&originHeight=261&originWidth=674&size=99527&status=done&style=none&width=674" srcset="/img/loading.gif" alt="image.png">**</strong><br><strong><strong>CPI——执行一条指令所需的时钟周期数</strong></strong><br><strong><strong>执行一条指令的耗时——CPI*时钟周期</strong></strong><br>eg:<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600864171067-99e23c33-6266-4ecc-ae1e-796228e9cf5c.png#align=left&display=inline&height=247&margin=%5Bobject%20Object%5D&name=image.png&originHeight=247&originWidth=1310&size=159330&status=done&style=none&width=1310" srcset="/img/loading.gif" alt="image.png"></p><p><strong>IPS(Instructions Per Second):每秒执行多少指令</strong><br><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600864245903-cce3e9a5-d51a-41d7-a7f4-a2240606dab1.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=266&size=35369&status=done&style=none&width=266" srcset="/img/loading.gif" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>计网 Chapter1 网络体系结构</title>
    <link href="/posts/439d623b.html"/>
    <url>/posts/439d623b.html</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-网络体系结构"><a href="#第一章-网络体系结构" class="headerlink" title="第一章 网络体系结构"></a>第一章 网络体系结构</h1><p><a name="iEz6E"></a></p><h1 id="导图"><a href="#导图" class="headerlink" title="导图"></a>导图</h1><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598925697902-7caf23bd-c872-460b-a164-dc5e2c6579b7.png#align=left&display=inline&height=254&margin=%5Bobject%20Object%5D&name=image.png&originHeight=508&originWidth=1126&size=205190&status=done&style=none&width=563" srcset="/img/loading.gif" alt="image.png"><br><a name="LTGpS"></a></p><h1 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h1><p><a name="hYMj4"></a></p><h2 id="概念，组成，功能，分类"><a href="#概念，组成，功能，分类" class="headerlink" title="概念，组成，功能，分类"></a>概念，组成，功能，分类</h2><p><a name="VHXgs"></a></p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>计算机网络：将分散独立的<strong>计算机系统</strong>，通过<strong>通信设备</strong>和<strong>线路</strong>连接起来（有线或无线的方式），由功能完善的软件实现资源共享和信息传递的系统<br /><br><br /></p><p><a name="LKzIB"></a></p><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><p><br />组成部分：<br />硬件、软件、协议（一系列规则和约定的集合）<br /><br><br />工作部分：</p><ul><li>边缘部分（由端系统、主机组成） 用来通信（传输数据音频视频等），资源共享</li></ul><p>C/S方式 client/server<br />P2P方式 peer to peer ——对等连接</p><ul><li>核心部分 （由网络和连接的路由器组成） 为边缘部分提供服务。</li></ul><br /><br />功能组成：<ul><li>通信子网——数据通信</li><li>资源子网——资源共享/数据处理</li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598944645096-a9371afc-22fe-43f1-ba01-7be010894fe8.png#align=left&display=inline&height=182&margin=%5Bobject%20Object%5D&name=image.png&originHeight=363&originWidth=741&size=203590&status=done&style=none&width=370.5" srcset="/img/loading.gif" alt="image.png"><br><a name="GcPZ1"></a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>数据通信，资源共享<br /></p><p><a name="d0771a42"></a></p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>见课本<br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598945189427-d1824686-8b73-403b-8b4c-af66d354eea8.png#align=left&display=inline&height=295&margin=%5Bobject%20Object%5D&name=image.png&originHeight=589&originWidth=1339&size=366675&status=done&style=none&width=669.5" srcset="/img/loading.gif" alt="image.png"><br /><br><br /></p><p><a name="6o5wU"></a></p><h2 id="标准化工作"><a href="#标准化工作" class="headerlink" title="标准化工作"></a>标准化工作</h2><p><a name="MlJpv"></a></p><h3 id="标准分类"><a href="#标准分类" class="headerlink" title="标准分类"></a>标准分类</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598945508758-939c1c7e-8368-42ee-b323-4707c5ad3545.png#align=left&display=inline&height=134&margin=%5Bobject%20Object%5D&name=image.png&originHeight=267&originWidth=1057&size=143333&status=done&style=none&width=528.5" srcset="/img/loading.gif" alt="image.png"><br /><br><br /></p><p><a name="91eC7"></a></p><h3 id="标准制定流程"><a href="#标准制定流程" class="headerlink" title="标准制定流程"></a>标准制定流程</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598945548050-ae34938b-1ca1-4d86-af90-d3642e17f06b.png#align=left&display=inline&height=286&margin=%5Bobject%20Object%5D&name=image.png&originHeight=571&originWidth=1233&size=348968&status=done&style=none&width=616.5" srcset="/img/loading.gif" alt="image.png"><br /><br><br />Q：因特网和计算机网络的区别？<br />A：<br><a name="Ouzap"></a></p><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><ul><li>Speed 速率——连接到计算机主机网络上的主机在数字信道上传送数据的速率 单位 b/s kb/s ….</li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598945733042-15a5628a-59a2-4116-bf54-69c854b325db.png#align=left&display=inline&height=63&margin=%5Bobject%20Object%5D&name=image.png&originHeight=126&originWidth=1190&size=98035&status=done&style=none&width=595" srcset="/img/loading.gif" alt="image.png"></p><ul><li>Bandwidth 带宽——网络通信线路所能传送数据1能力（网络设备所支持的最高数据率）</li><li>Thoughput 吞吐量——单位时间通过某个网络（信道，接口）的数据量<blockquote><p>网络不同于主机，一个网络可能有几个链路集成，即使该网络的带宽是100mb/s，网络接受的链路最高有30mb/s的话，那最后主机的吞吐量只有30mb/s</p></blockquote></li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1598946363589-796e9f1b-eb64-48ac-a365-48b21de45f3c.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=474&originWidth=1302&size=319449&status=done&style=none&width=651" srcset="/img/loading.gif" alt="image.png"><br /></p><blockquote><p>补：信道——信号传输的媒介，通信的通道</p></blockquote><ul><li><p>Delay 时延——指数据从网络（链路）的一端传送到另一端所需的总时间，由4部分构成</p><pre><code>- 发送(传输时延)时延 ![image.png](https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1599098514336-e0018125-9e88-4b2f-b281-93504fd8bcc7.png#align=left&amp;display=inline&amp;height=68&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=68&amp;originWidth=162&amp;size=8992&amp;status=done&amp;style=none&amp;width=162)- 传播时延 ![image.png](https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1599098608845-a80ea19d-5879-484f-91f2-481460063637.png#align=left&amp;display=inline&amp;height=77&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=77&amp;originWidth=158&amp;size=9778&amp;status=done&amp;style=none&amp;width=158)- 处理时延 &lt;br /&gt;检错，找出口的时间- 排队时延&lt;br /&gt; (在路由器排队等待转发的时延) 等待 **输出/入** 链路可用</code></pre><blockquote><p>高速链路提高的只是发送速率-&gt;减少发送时延</p></blockquote></li><li><p>时延带宽积 ——某段链路现在有多少比特<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1599098892472-db63e942-823e-4fc5-8d44-2f3516c402eb.png#align=left&display=inline&height=255&margin=%5Bobject%20Object%5D&name=image.png&originHeight=255&originWidth=509&size=69675&status=done&style=none&width=509" srcset="/img/loading.gif" alt="image.png"></p></li><li><p>往返时延 RTT——从发送方发送数据开始，到发送方收到接收方确认总共经历的时延<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1599099055968-021df4bb-1b57-4e66-b2c4-cc1e4a7dc3a0.png#align=left&display=inline&height=147&margin=%5Bobject%20Object%5D&name=image.png&originHeight=147&originWidth=352&size=23831&status=done&style=none&width=352" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>不包括发送时延</p></blockquote></li></ul><ul><li>信道利用率——有数据通过时间/（有+无）数据通过时间</li></ul><p><br />Q: 网络利用率的概念<br /></p><p><a name="SuFHr"></a></p><h1 id="体系结构-amp-参考模型"><a href="#体系结构-amp-参考模型" class="headerlink" title="体系结构&amp;参考模型"></a>体系结构&amp;参考模型</h1><p>计算机网络体系结构：计算机网络的各层及协议的集合<br /></p><p><a name="r3LgL"></a></p><h2 id="分层结构"><a href="#分层结构" class="headerlink" title="分层结构"></a>分层结构</h2><ul><li>实体；第n层的活动元素称为n层实体</li><li>协议：为进行网络中对等实体数据交换建立的规则、标准<br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1599100055959-b308f811-256c-4000-89a4-993e3d123d47.png#align=left&display=inline&height=77&margin=%5Bobject%20Object%5D&name=image.png&originHeight=77&originWidth=231&size=17113&status=done&style=none&width=231" srcset="/img/loading.gif" alt="image.png"></li><li>接口(访问服务点SAP)：上层使用下层提供的服务的入口</li><li>服务：下层为相邻上层提供的服务调用</li></ul><br /><br /><p><br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1599100129431-17d057d6-e5ab-40bc-bb7e-2f5c965ab2bc.png#align=left&display=inline&height=154&margin=%5Bobject%20Object%5D&name=image.png&originHeight=154&originWidth=775&size=64306&status=done&style=none&width=775" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>4层的PDU为3层的SDU，PDU可以笼统理解为含金量高的数据(对服务而言)</p></blockquote><p><br />Q：这个H和T是什么意思<br />A：H-head，控制信息 T-tail 尾部信息<br /><br><br /></p><p><a name="fnfpy"></a></p><h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><blockquote><p>法定标准</p></blockquote><pre><code>![image.png](https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600053013677-996d4320-0930-4216-930b-266ed95a5766.png#align=left&amp;display=inline&amp;height=221&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=442&amp;originWidth=489&amp;size=178859&amp;status=done&amp;style=none&amp;width=244.5)&lt;br /&gt;    ![image.png](https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600053418301-df988f1b-23a6-4e62-aa0a-a90a317b82ab.png#align=left&amp;display=inline&amp;height=369&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=738&amp;originWidth=1375&amp;size=579403&amp;status=done&amp;style=none&amp;width=687.5)&lt;br /&gt;</code></pre><p><a name="xTr6P"></a></p><h4 id="功能讲解"><a href="#功能讲解" class="headerlink" title="功能讲解"></a>功能讲解</h4><ul><li><strong>应用层</strong>——所有能和用户交互产生网络流量的服务 </li></ul><p>典型应用层服务<br />FTP  file transfer protocol —— 文件传输协议<br />HTTP hyper text transfer protocol  —— 万维网<br /><br><br /></p><ul><li><strong>表示层</strong>——用于处理在两个通信系统中交换信息的表达方式（语法和语义）</li></ul><p>功能：数据格式变换；数据加密解密，数据压缩恢复<br /><br><br /></p><ul><li>会话层——向表示层实体进程提供<strong>建立连接</strong>并在连接上<strong>有序传输数据</strong>,即建立同步（SYN）<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600073500751-f04cb152-3818-4c23-a4a5-20a4d34d0c2c.png#align=left&display=inline&height=117&margin=%5Bobject%20Object%5D&name=image.png&originHeight=233&originWidth=707&size=49967&status=done&style=none&width=353.5" srcset="/img/loading.gif" alt="image.png"></li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600073137964-b4253f00-7bde-4d45-8779-d438e3d73904.png#align=left&display=inline&height=34&margin=%5Bobject%20Object%5D&name=image.png&originHeight=68&originWidth=306&size=17717&status=done&style=none&width=153" srcset="/img/loading.gif" alt="image.png"><br /> 功能：建立管理会话<br />    使用<strong>校验点</strong>让会话通信失效时从该点继续<strong>恢复通信，数据同步</strong>（比如steam）<br /><br><br /></p><ul><li><strong>传输层</strong></li></ul><p>负责主机中两个进程的通信（即是端到端的通信。传输单位是报文段/用户数据报）<br />      功能：<br />1）可靠/不可靠传输<br />可靠传输：把传输数据分成一个又一个的报文段，用链路传给接收端，接收端会返回一个“确认”给传输段，如果传输段没收到就要再发一次对应报文段，直到收到该确认为止，才会发送下一段<br />不可靠传输：一个数据报就能解决，不需要确认</p><blockquote><p>还有点没懂</p></blockquote><p><br />2）差错控制<br />传输层修复有问题的数据报<br /><br><br />3）流量控制<br />协调发送端和接收端的速度问题<br />Q：这个速度具体指的是？<br />4）复用&amp;分用<br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600257225931-0566e7cc-1c5c-437d-98bf-cb93d0a82d3a.png#align=left&display=inline&height=50&margin=%5Bobject%20Object%5D&name=image.png&originHeight=50&originWidth=482&size=22128&status=done&style=none&width=482" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>传输层章节会系统讲</p></blockquote><ul><li><p><strong>网络层</strong></p><p>把<strong>分组</strong>从源端传到目的端，为分组交换网上的不同主机提供通信服务，传输单位是数据报<br />功能：<br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600257576473-6580c1be-2062-4222-aeac-f3321cf35dd0.png#align=left&display=inline&height=236&margin=%5Bobject%20Object%5D&name=image.png&originHeight=236&originWidth=219&size=48982&status=done&style=none&width=219" srcset="/img/loading.gif" alt="image.png"></p></li><li><p><strong>数据链路层</strong></p></li></ul><p>把网络层传下的数据包<strong>组装成帧</strong><br />传输单位是帧<br /><br><br />功能：<br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600257717212-219384d7-a568-41fc-9870-6c68338ca506.png#align=left&display=inline&height=136&margin=%5Bobject%20Object%5D&name=image.png&originHeight=136&originWidth=503&size=55368&status=done&style=none&width=503" srcset="/img/loading.gif" alt="image.png"><br /></p><ul><li>物理层</li></ul><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600257736349-9cca816e-e1f0-4c28-a7fb-0e1360919287.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=568&size=61063&status=done&style=none&width=568" srcset="/img/loading.gif" alt="image.png"><br /><br><br /><br><br /><br><br /><br><br /><br><br />Q:进程的理解？<br />A：进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础。在早期面向进程设计的计算机结构中，进程是程序的基本执行实体；在当代面向线程设计的计算机结构中，进程是线程的容器。</p><p>Q：端口的理解？<br />A：<br /><br><br />Q:报文段的理解？<br />A：细节见tcp/ip<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600256832005-29113a29-4a57-4e06-9a0a-c906e5ba2a79.png#align=left&display=inline&height=164&margin=%5Bobject%20Object%5D&name=image.png&originHeight=164&originWidth=823&size=12403&status=done&style=none&width=823" srcset="/img/loading.gif" alt="image.png"><br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600258383559-4490206b-1dc3-4a8a-8c7c-a89935d843ec.png#align=left&display=inline&height=189&margin=%5Bobject%20Object%5D&name=image.png&originHeight=189&originWidth=798&size=17963&status=done&style=none&width=798" srcset="/img/loading.gif" alt="image.png"><br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600258530205-fa950167-4f6d-4dd4-966e-f2d4f572684e.png#align=left&display=inline&height=179&margin=%5Bobject%20Object%5D&name=image.png&originHeight=179&originWidth=816&size=19140&status=done&style=none&width=816" srcset="/img/loading.gif" alt="image.png"><br /></p><p><a name="tBa24"></a></p><h3 id="TCP-IP参考模型"><a href="#TCP-IP参考模型" class="headerlink" title="TCP/IP参考模型"></a>TCP/IP参考模型</h3><blockquote><p>通用，事实标准</p></blockquote><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600257798890-03833cda-046f-44fb-86ec-da332aeec399.png#align=left&display=inline&height=283&margin=%5Bobject%20Object%5D&name=image.png&originHeight=283&originWidth=535&size=98186&status=done&style=none&width=535" srcset="/img/loading.gif" alt="image.png"><br />Q：协议栈的理解？<br />A：网络中各层协议的总和<br /><br><br />Q：异构网互联的理解？<br />A：异构网络(Heterogeneous Network）是一种类型的网络，其是由不同制造商生产的计算机，<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/7667828" target="_blank" rel="noopener">网络设备</a>和系统组成的，大部分情况下运行在不同的协议上支持不同的功能或应用。<br /><br><br />Q：面向连接&amp;&amp;无连接？<br />A：面向连接：三阶段<br />1.建立连接——发出一个建立连接请求，成功建立后才能2.传数据 3.当数据传输完毕，必须释放连接<br /><br><br />无连接——直接进行数据传输<br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600258097325-15c565af-d7cd-427f-913c-a10c1ff739da.png#align=left&display=inline&height=200&margin=%5Bobject%20Object%5D&name=image.png&originHeight=200&originWidth=399&size=57090&status=done&style=none&width=399" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>为什么无连接啊？<br>——IP协议强调无连接</p></blockquote><p>Q：IP的理解<br />A：<img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600258631612-4dbb9075-b4b3-4c05-8ec9-bd9aa94e8d00.png#align=left&display=inline&height=96&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=809&size=17182&status=done&style=none&width=809" srcset="/img/loading.gif" alt="image.png"><br><a name="6jhOC"></a></p><h3 id="五层参考模型"><a href="#五层参考模型" class="headerlink" title="五层参考模型"></a>五层参考模型</h3><p><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600258211566-18ba0458-a8bd-4634-bda1-60600ea11485.png#align=left&display=inline&height=318&margin=%5Bobject%20Object%5D&name=image.png&originHeight=318&originWidth=754&size=142800&status=done&style=none&width=754" srcset="/img/loading.gif" alt="image.png"><br /><img src="https://fluid-1259766423.cos.ap-nanjing.myqcloud.com/yuque/0/2020/png/756532/1600258306557-4421307a-7f5c-4329-a580-bfe49795fab7.png#align=left&display=inline&height=325&margin=%5Bobject%20Object%5D&name=image.png&originHeight=325&originWidth=810&size=168409&status=done&style=none&width=810" srcset="/img/loading.gif" alt="image.png"><br /><br><br /><br><br />Q：端到端和点到点的理解？<br />A：<br />端到端通信是针对<strong>传输层</strong>来说的，它是一个网络连接，指的是在数据传输之前，在发送端与接收端之间（忽略中间有多少设备）为数据的传输建立一条链路，链路建立以后，发送端就可以发送数据，知道数据发送完毕，接收端确认接收成功。 也就是说在数据传输之前，先为数据的传输开辟一条通道，然后在进行传输。从发送端发出数据到接收端接收完毕，结束。<br />点到点通信是针对数据链路层或网络层来说的，点对点是基于MAC地址和或者IP地址，是指一个设备发数据给与该这边直接连接的其他设备，这台设备又在合适的时候将数据传递给与它相连的下一个设备，通过一台一台直接相连的设备把数据传递到接收端。发送端设备送出数据后，它的任务已经完成，不需要参与整个传输过程，这样不会浪费发送端设备的资源，但是不确定接收端能否收到<br />补：点到点一般采用<strong>存储转发</strong>进行缓存，这样可以减少长距离下发送端的浪费</p><p>Q：ip的不可靠性怎么解决的？<br />A：</p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>LSTM -Pytorch实现&amp;解构</title>
    <link href="/posts/cb6a52c.html"/>
    <url>/posts/cb6a52c.html</url>
    
    <content type="html"><![CDATA[<blockquote><p>部分源码和思路来源于 《Dive-into-DL-PyTorch》，很好的一本进阶书籍，推荐学习！</p></blockquote><p>本文适合对pytorch.nn，python-generator有一定基础的人观看，若对DL感兴趣想入门的朋友，推荐去看李宏毅2020的网课。</p><h1 id="LSTM介绍"><a href="#LSTM介绍" class="headerlink" title="LSTM介绍"></a>LSTM介绍</h1><p>LSTM 中引入了3个门，即输入门（input gate）、遗忘门（forget gate）和输出门（output gate），以及与隐藏状态形状相同的记忆细胞（某些文献把记忆细胞当成一种特殊的隐藏状态），从而记录额外的信息。<br>下图是一层lstm的图示，很好的展示了lstm的“记忆”过程：<br><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/1.png" srcset="/img/loading.gif" alt=""></p><p>本次模型目标为：</p><ul><li>记忆周杰伦的歌词习惯</li><li>给出一个歌词集里出现过的字，输出下一个字，迭代50次生成一句歌词，同时预设歌词开头为”分开”</li></ul><h1 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h1><p>数据介绍：运用的周杰伦歌词集的text。因lyric数据具有很强的时序性，因此用lstm。同时为了突出时序，在小批量训练时我们用 *<em>相邻采样 *</em>而非一般的随机采样，后面会有介绍。</p><h2 id="标注"><a href="#标注" class="headerlink" title="标注"></a>标注</h2><ul><li>读取某文本的前10000个字符，需要将字符转码为独热编码</li><li>独热编码前，需要对每种字符进行”编号”，这里用了python的set和enumerate来生成不重复序列对象作为字典标识char</li><li>用字典(char_to_idx)来对每个char标注，再以字典进行独热编码，作为训练数据<pre><code class="hljs python"><span class="hljs-comment"># 设定学习所需的基本参数，后面会详细解释</span>vocab_size: <span class="hljs-number">1027</span> —— 就是len(char_to_idx)num_input &amp; num_output:<span class="hljs-number">1027</span>, num_hidden: <span class="hljs-number">256</span> <span class="hljs-comment"># 规定LSTM的基本参数</span>num_epochs, num_steps, batch_size, lr, clipping_theta = <span class="hljs-number">160</span>, <span class="hljs-number">35</span>, <span class="hljs-number">32</span>, <span class="hljs-number">1e2</span>, <span class="hljs-number">1e-2</span><span class="hljs-comment"># 对read的字符进行处理</span>corpus_chars = corpus_chars.replace(<span class="hljs-string">'\n'</span>, <span class="hljs-string">' '</span>).replace(<span class="hljs-string">'\r'</span>, <span class="hljs-string">' '</span>)corpus_chars = corpus_chars[<span class="hljs-number">0</span>:<span class="hljs-number">10000</span>]idx_to_char = list(set(corpus_chars))char_to_idx = dict([(char, i) <span class="hljs-keyword">for</span> i, char <span class="hljs-keyword">in</span> enumerate(idx_to_char)]) <span class="hljs-comment"># 列表解析，后面将多次用到</span>vocab_size = len(char_to_idx)corpus_indices = [char_to_idx[char] <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> corpus_chars]<span class="hljs-comment"># one-hot步骤忽略，比较简单</span></code></pre><h2 id="生成器构造"><a href="#生成器构造" class="headerlink" title="生成器构造"></a>生成器构造</h2>如果想要自定义每次迭代时的过程，我们需要使用生成器</li></ul><h3 id="生成迭代对象"><a href="#生成迭代对象" class="headerlink" title="生成迭代对象"></a>生成迭代对象</h3><h4 id="相邻取样"><a href="#相邻取样" class="headerlink" title="相邻取样"></a>相邻取样</h4><blockquote><p>引自D2L原文</p></blockquote><p>令相邻的两个随机小批量在原始序列上的位置相毗邻。这时候，我们就可以用一个小批量最终时间步的隐藏状态来初始化下一个小批量的隐藏状态，从而使下一个小批量的输出也取决于当前小批量的输入，并如此循环下去。这对实现循环神经网络造成了两方面影响：一方面， 在训练模型时，我们只需在每一个迭代周期开始时初始化隐藏状态；另一方面，当多个相邻小批量通过传递隐藏状态串联起来时，模型参数的梯度计算将依赖所有串联起来的小批量序列。同一迭代周期中，随着迭代次数的增加，梯度的计算开销会越来越大。 为了使模型参数的梯度计算只依赖一次迭代读取的小批量序列，我们可以在每次读取小批量前将隐藏状态从计算图中分离出来。</p><pre><code class="hljs python"><span class="hljs-comment"># 生成迭代对象</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">data_iter_consecutive</span><span class="hljs-params">(corpus_indices, batch_size, num_steps, device=None)</span>:</span>    <span class="hljs-keyword">if</span> device <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:        device = torch.device(<span class="hljs-string">'cuda'</span> <span class="hljs-keyword">if</span> torch.cuda.is_available() <span class="hljs-keyword">else</span> <span class="hljs-string">'cpu'</span>) <span class="hljs-comment"># 深度学习计算量较大，推荐用cuda</span>    corpus_indices = torch.tensor(corpus_indices, dtype=torch.float32, device=device)    data_len = len(corpus_indices)    batch_len = data_len // batch_size    indices = corpus_indices[<span class="hljs-number">0</span>: batch_size*batch_len].view(batch_size, batch_len)    epoch_size = (batch_len - <span class="hljs-number">1</span>) // num_steps    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(epoch_size):        i = i * num_steps        X = indices[:, i: i + num_steps]        Y = indices[:, i + <span class="hljs-number">1</span>: i + num_steps + <span class="hljs-number">1</span>]        <span class="hljs-keyword">yield</span> X, Y</code></pre><p>这里可视化一下相邻取样的逻辑<br><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/2.png" srcset="/img/loading.gif" alt=""></p><h1 id="搭建模型"><a href="#搭建模型" class="headerlink" title="搭建模型"></a>搭建模型</h1><p>这里我们搭建一个 input_size = 1027, num_hidden = 256, output_size =1027， 一层lstm+一层全连接层的模型</p><pre><code class="hljs python">lstm_layer = nn.LSTM(input_size=vocab_size, hidden_size=num_hiddens)<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RNNModel</span><span class="hljs-params">(nn.Module)</span>:</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(self, rnn_layer, vocab_size)</span>:</span>        super(RNNModel, self).__init__()        self.rnn = rnn_layer        self.hidden_size = rnn_layer.hidden_size * (<span class="hljs-number">2</span> <span class="hljs-keyword">if</span> rnn_layer.bidirectional <span class="hljs-keyword">else</span> <span class="hljs-number">1</span>)         self.vocab_size = vocab_size        self.dense = nn.Linear(self.hidden_size, vocab_size)        self.state = <span class="hljs-literal">None</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">forward</span><span class="hljs-params">(self, inputs, state)</span>:</span> <span class="hljs-comment"># inputs: (batch, seq_len)</span>        <span class="hljs-comment"># 获取one-hot向量表示</span>        X = to_onehot(inputs, self.vocab_size) <span class="hljs-comment"># X是个list</span>        Y, self.state = self.rnn(torch.stack(X), state)        <span class="hljs-comment"># 全连接层会首先将Y的形状变成(num_steps * batch_size, num_hiddens)，它的输出</span>        <span class="hljs-comment"># 形状为(num_steps * batch_size, vocab_size)</span>        output = self.dense(Y.view(<span class="hljs-number">-1</span>, Y.shape[<span class="hljs-number">-1</span>]))        <span class="hljs-keyword">return</span> output, self.state    model = RNNModel(lstm_layer)</code></pre><p>损失函数为交叉熵，小批量梯度下降的优化器为Adam，学习率见上，忽略。</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">train_and_predict_rnn_pytorch</span><span class="hljs-params">(model, num_hiddens, vocab_size, device,</span></span><span class="hljs-function"><span class="hljs-params">                                corpus_indices, idx_to_char, char_to_idx,</span></span><span class="hljs-function"><span class="hljs-params">                                num_epochs, num_steps, lr, clipping_theta,</span></span><span class="hljs-function"><span class="hljs-params">                                batch_size, pred_period, pred_len, prefixes)</span>:</span>    loss = nn.CrossEntropyLoss()    optimizer = torch.optim.Adam(model.parameters(), lr=lr)    model.to(device)    state = <span class="hljs-literal">None</span>    <span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> range(num_epochs):        l_sum, n, start = <span class="hljs-number">0.0</span>, <span class="hljs-number">0</span>, time.time()        data_iter = data_iter_consecutive(corpus_indices, batch_size, num_steps, device) <span class="hljs-comment"># 相邻采样</span>        <span class="hljs-keyword">for</span> X, Y <span class="hljs-keyword">in</span> data_iter:            <span class="hljs-keyword">if</span> state <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:                <span class="hljs-comment"># 使用detach函数从计算图分离隐藏状态, 这是为了</span>                <span class="hljs-comment"># 使模型参数的梯度计算只依赖一次迭代读取的小批量序列(防止梯度计算开销太大)</span>                <span class="hljs-keyword">if</span> isinstance (state, tuple): <span class="hljs-comment"># LSTM, state:(h, c)  </span>                    state = (state[<span class="hljs-number">0</span>].detach(), state[<span class="hljs-number">1</span>].detach())                <span class="hljs-keyword">else</span>:                       state = state.detach()                (output, state) = model(X, state) <span class="hljs-comment"># output: 形状为(num_steps * batch_size, vocab_size)</span>                        <span class="hljs-comment"># Y的形状是(batch_size, num_steps)，转置后再变成长度为</span>            <span class="hljs-comment"># batch * num_steps 的向量，这样跟输出的行一一对应</span>            y = torch.transpose(Y, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>).contiguous().view(<span class="hljs-number">-1</span>)            l = loss(output, y.long())                        optimizer.zero_grad()            l.backward()            <span class="hljs-comment"># 梯度裁剪</span>            grad_clipping(model.parameters(), clipping_theta, device)            optimizer.step()            l_sum += l.item() * y.shape[<span class="hljs-number">0</span>]            n += y.shape[<span class="hljs-number">0</span>]                <span class="hljs-keyword">try</span>:            perplexity = math.exp(l_sum / n)        <span class="hljs-keyword">except</span> OverflowError:            perplexity = float(<span class="hljs-string">'inf'</span>)        <span class="hljs-keyword">if</span> (epoch + <span class="hljs-number">1</span>) % pred_period == <span class="hljs-number">0</span>:            print(<span class="hljs-string">'epoch %d, perplexity %f, time %.2f sec'</span> % (                epoch + <span class="hljs-number">1</span>, perplexity, time.time() - start))            <span class="hljs-keyword">for</span> prefix <span class="hljs-keyword">in</span> prefixes:                print(<span class="hljs-string">' -'</span>, predict_rnn_pytorch(                    prefix, pred_len, model, vocab_size, device, idx_to_char,                    char_to_idx))</code></pre>]]></content>
    
    
    <categories>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>torch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java week3-41</title>
    <link href="/posts/8a630470.html"/>
    <url>/posts/8a630470.html</url>
    
    <content type="html"><![CDATA[<h1 id="Java-week3-4-总结"><a href="#Java-week3-4-总结" class="headerlink" title="Java week3-4 总结"></a>Java week3-4 总结</h1><h2 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h2><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/image-20200603111200391.png" srcset="/img/loading.gif" alt="image-20200603111200391"></p><h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><p>一个需求表明,接口中有的方法必须被掉用类的覆盖了才可以用implement</p><p>不需要有方法，但可以有（默认方法）</p><p>实现该接口的类的实例可以用：接口名 xx = 类名(args);</p><p>可能的冲突：</p><ul><li>超类冲突，如果超类提供了一个具体方法，同名而且有相同参数类型的默认方法会<br>被忽略。  </li><li>接口冲突。 如果一个超接口提供了一个默认方法，另一个接口提供了一个同名而且<br>参数类型 （不论是否是默认参数）相同的方法， 必须覆盖这个方法来解决冲突。  </li></ul><blockquote><p>复习一下覆盖，同名方法+super关键字(不加super可能无法访问超类的域)</p></blockquote><h1 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h1><p><strong>堆</strong></p><p>放实例，方法区引用</p><p><strong>方法区</strong></p><p>class文件信息，运行时常量池，以及编译器编译后的代码堆：存储对象，对象包含类的信息，指向方法区</p><p><strong>栈</strong></p><p>虚拟机栈：表示<strong>Java方法执行的内存模型</strong>，每调用一个方法就会为每个方法生成一个栈帧（Stack Frame），用来存储<strong>局部变量</strong>表、<strong>操作数</strong>栈、动态链接、方法出口，线程等信息。</p><p>程序计数器：程序计数器用来记录当前正在执行的指令</p><p>用一个十分简单的代码段模拟一下Java堆栈的运行过程：</p><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppTest</span> </span>&#123;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;    Person person = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"张三"</span>);    person.sayHello();    &#125;    &#125;    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>&#123;    String name;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">(String name)</span> </span>&#123;     <span class="hljs-keyword">this</span>.name = name;    &#125;     <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">sayHello</span><span class="hljs-params">()</span> </span><span class="hljs-function">    </span>&#123;    System.out.println(<span class="hljs-string">"hello "</span> + name);    &#125;    &#125;</code></pre><p>新建一个main线程的一个栈</p><p>jvm在方法区寻找是否存在Person类的信息</p><p>如果没找到类加载器加载Person类信息到方法区，然后在堆中创建Person对象，并持有方法区的引用</p><p>把person添加到main主线程栈中，并指向堆上的Person实例。</p><p>执行person的sayhello方法，找到堆上的Person实例。</p><p>根据堆上Person的方法区引用，找到方法区上sayhello的字节码，然后执行完成。</p><h2 id="回收方式"><a href="#回收方式" class="headerlink" title="回收方式"></a>回收方式</h2><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/image-20200603171520932.png" srcset="/img/loading.gif" alt="image-20200603171520932"></p><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/20200604094623.png" srcset="/img/loading.gif" alt="image-20200603171512678"></p><p>变量回收小结：</p><ul><li>静态成员变量在类装载的时候就进行了创建，在整个程序结束时按序销毁。</li><li>实例变量在类实例化对象时候创建，在对象销毁的时候销毁。</li><li>局部变量在局部范围使用时创建，跳出局部范围销毁。</li></ul><p>JVM中判断是否回收一个对象使用的是可达性分析算法，GC ROOT不可到达的节点都将会被标记上，<strong>一个对象如果被标记了两次就会被回收掉</strong>。</p><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> </span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Test TEST= <span class="hljs-keyword">null</span>;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span> </span>&#123;        TEST = <span class="hljs-keyword">new</span> Test();        TEST = <span class="hljs-keyword">null</span>;        System.gc();        <span class="hljs-keyword">try</span> &#123;            Thread.sleep(<span class="hljs-number">500</span>);        &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;            e.printStackTrace();        &#125;        System.out.println(TEST);    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">finalize</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Throwable </span>&#123;        System.out.println(<span class="hljs-string">"要死了要死了要死了!"</span>);    &#125; &#125;output:<span class="hljs-string">"要死了要死了要死了!"</span>NULL</code></pre><h1 id="工具类-Math-string"><a href="#工具类-Math-string" class="headerlink" title="工具类(Math,string)"></a>工具类(Math,string)</h1><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p>字符串是常量；它们的值在创建之后不能更改。字符串缓冲区支持可变的字符串。因为 String 对象是不可变的，所以可以共享。例如：</p><blockquote><pre><code class="hljs armasm"><span class="hljs-keyword">String </span><span class="hljs-keyword">str </span>= <span class="hljs-string">"abc"</span><span class="hljs-comment">;</span> </code></pre></blockquote><p>等效于：</p><blockquote><pre><code class="hljs processing"><span class="hljs-built_in">char</span> data[] = &#123;<span class="hljs-string">'a'</span>, <span class="hljs-string">'b'</span>, <span class="hljs-string">'c'</span>&#125;;<span class="hljs-keyword">String</span> <span class="hljs-built_in">str</span> = <span class="hljs-keyword">new</span> <span class="hljs-keyword">String</span>(data);</code></pre></blockquote><p>常用方法：</p><p>string.length();</p><p>string1.concat(string2); //连接两个字符串</p><p>Java charAt() 方法 //返回指定索引处的字符</p><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/20200604094630.png" srcset="/img/loading.gif" alt="image-20200603104917493"></p><p>string.append()</p><p>string.insert()</p><p>string.setCharAt(index,string);</p><p>string.substring(index,index+2)  /左闭右开！</p><p>eg:</p><p>![image-20200603164324214](D:\Thunder Download\java课件\image-20200603164324214.png)</p><p>output:swear oft.</p><p><a href="https://www.runoob.com/java/java-string.html" target="_blank" rel="noopener">string类api</a></p><h2 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h2><p>Java 的 Math 包含了用于执行基本数学运算的属性和方法，如初等指数、对数、平方根和三角函数。</p><p>Math 的方法都被定义为 <strong>static 形式</strong>，通过 Math 类可以在主函数中直接调用。</p><p>public class Test {      </p><p>​    public static void main (String []args) {          </p><p>​            System.out.println(“90 度的正弦值：” + Math.sin(Math.PI/2));</p><p>​          System.out.println(“0度的余弦值：” + Math.cos(0));</p><p>​          System.out.println(“60度的正切值：” + Math.tan(Math.PI/3));</p><p>​          System.out.println(“1的反正切值： “ + Math.atan(1));</p><p>​          System.out.println(“π/2的角度值：” + Math.toDegrees(Math.PI/2));</p><p>​          System.out.println(Math.PI);</p><p>​      } </p><p>  }</p><p>以上实例编译运行结果如下：</p><pre><code class="hljs angelscript"><span class="hljs-number">90</span> 度的正弦值：<span class="hljs-number">1.0</span><span class="hljs-number">0</span>度的余弦值：<span class="hljs-number">1.0</span><span class="hljs-number">60</span>度的正切值：<span class="hljs-number">1.7320508075688767</span><span class="hljs-number">1</span>的反正切值： <span class="hljs-number">0.7853981633974483</span>π/<span class="hljs-number">2</span>的角度值：<span class="hljs-number">90.0</span><span class="hljs-number">3.141592653589793</span></code></pre><h2 id="Number类"><a href="#Number类" class="headerlink" title="Number类"></a>Number类</h2><p>然而，在实际开发过程中，我们经常会遇到需要使用对象，而不是内置数据类型的情形。为了解决这个问题，Java 语言为每一个内置数据类型提供了对应的包装类。</p><p>所有的包装wrapper类<strong>（Integer、Long、Byte、Double、Float、Short）</strong>都是抽象类 Number 的子类。</p><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/20200604094637.png" srcset="/img/loading.gif" alt="image-20200603105234111"></p><blockquote><p>回顾一下装箱和自动拆箱。。</p></blockquote><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/20200604094641.png" srcset="/img/loading.gif" alt="image-20200603105317150"></p><p>需要把5(int 内置类型)装箱为integer，然后为了加运算，再自动拆箱为int</p><p>Numbers类的一个重大用处是用在泛型，<strong>&lt;&gt;内必须是对象而非基本类型</strong></p><h1 id="Swing"><a href="#Swing" class="headerlink" title="Swing"></a>Swing</h1><p>没啥复习的，buttom action那块再看看</p><p>布局</p><h1 id="EXCEPTION"><a href="#EXCEPTION" class="headerlink" title="EXCEPTION"></a>EXCEPTION</h1><h2 id="基本定义"><a href="#基本定义" class="headerlink" title="基本定义"></a>基本定义</h2><p><img src="https://www-1259766423.cos.ap-beijing-fsi.myqcloud.com/PicGo/image-20200602102721746.png" srcset="/img/loading.gif" alt="image-20200602102721746"></p><p>IO为input output错误；Runtime 为运行时错误</p><p>派生于 RuntimeException 的异常包含下面几种情况：<br>• 错误的类型转换。<br>• 数组访问越界 i<br>• 访问 null 指针</p><p>不是派生于 RuntimeException 的异常包括：<br>•试图在文件尾部后面读取数据。<br>•试图打开一个不存在的文件。<br>•试图根据给定的字符串查找 Class 对象， 而这个字符串表示的类并不存在</p><blockquote><p>派生于RuntimeException和ERROR的为非受查(uncheck)异常,即不需要写throw，系统会自动考虑。其他都是受查异常，根据需要写(告诉编译器可能有什么错误发生)</p></blockquote><p>throws：抛出异常</p><h2 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h2><p>JAVA的错误返回的是一个异常类对象，可以用一些方法来读取错误信息。</p><p>一般步骤：</p><ul><li>找到合适的异常类</li><li>创建这个对象</li><li>将对象抛出</li></ul><p>eg：</p><pre><code class="hljs java">EOFException e = <span class="hljs-function">nw <span class="hljs-title">EOFException</span><span class="hljs-params">()</span></span>;<span class="hljs-keyword">throw</span> e;或者<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> EOPException(匿名)</code></pre><h3 id="创建异常类"><a href="#创建异常类" class="headerlink" title="创建异常类"></a>创建异常类</h3><p>一般要继承</p><p>例如， 定义一个派生于 IOException 的类。<br>习惯上， 定义的类应该包含两个构造器， 一个是默认的构造器；另一个是带有详细描述信息<br>的构造器（<strong>超类 Throwable 的 toString 方法将会打印出这些详细信息， 这在调试中非常有用)。</strong>  </p><p>eg：</p><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileFormatException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">IOException</span></span><span class="hljs-class"></span>&#123;<span class="hljs-keyword">public</span> FileFormatExceptionO &#123;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">FileFormatException</span><span class="hljs-params">(String gripe)</span></span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">super</span>(gripe); <span class="hljs-comment">//原本的含参gripe为：</span>    <span class="hljs-string">"Content-length: "</span> + len + <span class="hljs-string">", Received: "</span> + n;&#125;&#125;</code></pre><p>补充，一些throwable的方法</p><p>e.getMessage();</p><p>e.getClass().getName();</p><h2 id="捕获异常"><a href="#捕获异常" class="headerlink" title="捕获异常"></a>捕获异常</h2><p>try<br>more code<br>}<br>catch (ExceptionType e)<br>{<br>handlerfor this type<br>}  </p><p>逻辑：</p><ul><li><p>如果try任何代码有e的错误，跳过try剩余代码，执行catch</p></li><li><p>如果没有e错误，则跳过catch</p></li></ul><h1 id="文件输入"><a href="#文件输入" class="headerlink" title="文件输入"></a>文件输入</h1><pre><code class="hljs java">LocalDateTime dNow = LocalDateTime.now();DateTimeFormatter ft = DateTimeFormatter.ofPattern(<span class="hljs-string">"yyyy-MM-dd-hh-mm-ss"</span>);UrlString = UrlString.replaceAll(<span class="hljs-string">"\\."</span>,<span class="hljs-string">"-"</span>);File f = <span class="hljs-keyword">new</span> File(UrlString+<span class="hljs-string">"-"</span>+ft.format(dNow)+<span class="hljs-string">".txt"</span>);f.createNewFile();FileOutputStream file1 = <span class="hljs-keyword">new</span> FileOutputStream(f);PrintStream print2 = <span class="hljs-keyword">new</span> PrintStream(file1);System.setOut(print2);System.out.println(UrlString+<span class="hljs-string">"-"</span>+ft.format(dNow)+<span class="hljs-string">".txt"</span>);System.out.println();System.out.println(<span class="hljs-string">"RTT(ms) histogram"</span>);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;  System.out.print(list.get(list.size()-<span class="hljs-number">1</span>)+<span class="hljs-number">3</span>*i+<span class="hljs-string">"-"</span>+(list.get(list.size()-<span class="hljs-number">1</span>)+<span class="hljs-number">3</span>*(i+<span class="hljs-number">1</span>))+<span class="hljs-string">":"</span>+list_hist.get(i));  System.out.println();  &#125;   scanner.close();</code></pre>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
      <tag>接口</tag>
      
      <tag>工具类</tag>
      
      <tag>异常，垃圾回收</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>终身成长(一)</title>
    <link href="/posts/214a1d7e.html"/>
    <url>/posts/214a1d7e.html</url>
    
    <content type="html"><![CDATA[<h1 id="终身成长"><a href="#终身成长" class="headerlink" title="终身成长"></a>终身成长</h1><p>2020-05-26</p><p>今日心情郁闷，因为可能对社团白努力了，只能评个一般的级别。</p><p>但好像又没那么在乎，大不了少一点德育分呗，有什么呢？处于这样的矛盾中，把在pad里积灰的《终声成长》翻了出来。</p><p>固定&amp;成长型思维之前就有了解，但令我感触最深的不是对他们的再认识，而是其中一个小观点：<strong>“固定型思维的人很喜欢用某件事情来给自己打标签。成长型思维的人对自己的评价准确度高于固定型思维的。”</strong>很矛盾的地方在于，我自认是个成长型思维的人，也喜欢<strong>短期</strong>挑战，也爱整整难题，但是很喜欢打标签，某件事因为xxx所以我yyy。上了大学之后，逐渐发现自己的各种生活学习理论存在矛盾。现在概括一下，大概就是固定和成长这两种思维在打架吧。心知想要提升必须要有成长型思维，但是身边环境又不住的让我往固定性思维靠。</p><h2 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h2><p>那既然理清了这些，其实就没必要矛盾了。比如数据库那个10分小测，花里胡哨考不对题，老师连用数学语言写NF都不敢，能反映出个p知识点？少那一点德育分，真的会很伤吗，不至于。</p><h2 id="对于自我评价"><a href="#对于自我评价" class="headerlink" title="对于自我评价"></a>对于自我评价</h2><p>虽然书中说的：研究表明，成长型思维的人对自己的评价准确度高于固定型思维的。研究表示存疑，但是也有点可信度，毕竟不从宏观来看，<strong>偷懒</strong>般的用一件事下定义，肯定准确度不高。</p><blockquote><p>总结：最近心态肯定会不稳定，但是记住一件事，下定义贴标签之前一定要先跳出已有框架。</p><p>考试都是小事，真正重要的是理清矛盾，寻找真我！</p></blockquote><p>下午16：48</p><p>又因为上学期的阴霾开始盗汗了。这不就是一个挑战吗？冲刺，打破这阴霾！</p>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>HEXO之禅</title>
    <link href="/posts/ad1a2ca7.html"/>
    <url>/posts/ad1a2ca7.html</url>
    
    <content type="html"><![CDATA[<h3 id="《HEXO之禅》"><a href="#《HEXO之禅》" class="headerlink" title="《HEXO之禅》"></a>《HEXO之禅》</h3><p class="note note-primary">- 折腾主题是使用HEXO的最大原罪。名家之博，不假于主题之花哨，而得知于内容。</p><p class="note note-info">- 折腾主题是使用HEXO的最大原罪。专注于创作，而不是令人眼花缭乱的效果。名家之博，不假于主题之花哨，而得知于内容。</p><p class="note note-success">- 样式千万种，花哨莫去求。主题若彩虹，遇上方知有。</p><p class="note note-warning">- 有问题记得首先查看[官方文档](https://hexo.io/zh-cn/)，善用搜索引擎。没有人有义务的无条件帮你。</p><p class="note note-danger">- 不忘初心，方得始终。</p>]]></content>
    
    
    
    <tags>
      
      <tag>置顶</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>龙与鹰的帝国 读书摘抄(一)</title>
    <link href="/posts/32a06c5c.html"/>
    <url>/posts/32a06c5c.html</url>
    
    <content type="html"><![CDATA[<h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><p>没有一个很好的办法将kindle的笔记转为markdown(只能暂时性的插入&lt; br &gt;,颜色标注替换为<font color=Orange>橙色</font>或<font color=Blue>蓝色</font>)，如有完美导出md的方法欢迎私信！</p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><p>Citation (APA): 欧阳莹之著. (2016). 龙与鹰的帝国（精） (中华书局出品) [Kindle Android version]. Retrieved from Amazon.com<br>知识的盛宴——《龙与鹰的帝国》介绍</p><p class="note note-warning"> - 位置 153 </p>作者在行文之际，毋宁常常接触到：何以这两大帝国有如此的发展？后来又如何走了不同的方向？我想，她会关心：为什么后来的中国，一直是“中国”？而罗马，却变成欧洲的列国？此处，我以为“中国”长期保持为“中国”，虽然经历了南北朝的外族入侵，和后来辽、金、元、清，不同时代的外族统治，但“中国”并没有分裂，而“中国”的本部，接受许多外来影响，还是以“中国”的本色，长期存在。<p class="note note-warning"> - 位置 157 </p>中国始终以“编户齐民”，作为国族结构的基础来看。中国在不同的时代都有贵族，然而，没有像欧洲历史上，长期实行封建制度，延续贵族与平民之间的差异。<p class="note note-warning"> - 位置 158 </p>罗马帝国幅员广阔，吞并了许多不同地区的国族。在帝国体制之下，各个不同的属地，和罗马的本部，都有各自特定的关系，以界定其在帝国的地位<p class="note note-primary"> - 位置 162 </p>罗马从来没有过，中国秦汉以后，那种中央和地方郡县之间，形态一致的行政体系。中国的扩张，不是没有军事征服，更多的却是移民的扩散，缓慢、逐渐、慢慢地从核心，渗透到一层层的边区，然后充满了全部的疆域。这种长期而缓慢的大规模移民扩散，带去的不只是制度，更多的是文化与认同。而且，早期边陲，可能转变成新的核心，而核心地区，因为经常地移转，最后凝聚为中国共同体内，最大的一个核体，足以维系中国为一体。<p>中文本自序</p><p class="note note-primary"> - 位置 181 </p>历史可以作为转治中国历史的踏脚石。时逢中国崛起、美国重振帝国主义，世局近乎二千年前秦汉皇朝、罗马帝国各自称雄东西。时势帮助了我选题。<p>导论：秦汉、罗马与中西历史演变分歧</p><p class="note note-primary"> - 位置 196 </p>公元前202年，文明世界的东西两端，各自发生一场划时代的大战。在非洲北沿的匝马，罗马败其夙敌迦太基，清除建立大帝国的障碍。在黄河南面的垓下，汉败楚，结束秦末群雄逐鹿，奠立一个规模历时、功绩文化都媲美罗马帝国的皇朝。<p class="note note-primary"> - 位置 201 </p>有学者形容东西两个世界性大帝国的历史为“一大凑集”[3]。其实它们虽然走势靠近，但离聚会仍差甚远。不同社会面临类似的问题，可能采取类似的对策。然则世上深固传统纷纭、时局变幻不测，无法产生一个适应所有国度的万能楷模。在一个环境中功勋彪炳的思想制度，在另一环境下可能徒然无效。<p class="note note-primary"> - 位置 205 </p>帝国的观念在第二次世界大战后一度黯然，但自从美国带领入侵阿富汗和伊拉克以来，东山再起。中国崛起，经济全球化，国际风云变色，更激发人们深思。<p class="note note-primary"> - 位置 207 </p>学者有的说它稳定世局、能长期奏效，有的说它旨在剥削、不能持久，但都认识到帝国有异于小国，不止在量，而且在质[4]。小国寡民，同文同种，容易获得内政和谐。可是它与邻国的分歧争执，也容易升级至兵戎相见。大帝国兼并诸小国，容纳多种民族，化解或抑压它们之间的冲突，收和平建树之益。<p class="note note-primary"> - 位置 215</p>能雄踞宏阔领域、维持长期繁荣、堪称世界性大帝国者，只得10来个。在这杰出的短名单中，差不多同时的秦汉皇朝和罗马帝国名列前茅。它们全盛时期，各自囊括地球四分之一人口，稳固国内升平逾200年[6]。前者夸一统天下，后者夸雄霸地球（imperium orbis terrae）[7]。两者皆认为自己的权柄来源超凡：一个称天命，另一个称神授（divinitus adjuncta fortuna）[8]。<p class="note note-primary"> - 位置 224</p>前221年秦始皇终结数百年征伐不休的春秋战国时代，奠立统一的中国。秦朝祚短，它亡后中国备受内战蹂躏，直至前202年垓下战后，高祖建立稳定的汉朝。类似的惨烈内讧，从扩张到太平，<p class="note note-primary"> - 位置 225</p><p>恺撒把罗马数世纪的征战带上巅峰，随即于前48年把矛头转向共和国，实行独裁。他遇刺后，罗马贵族的内战加剧，直至前31年亚克兴之战，赢家奥古斯都奠定罗马帝国。残酷的内战是罗马共和国的丧钟、皇朝中国的分娩阵痛。</p><p class="note note-primary"> - 位置 230</p>二者的经济都是以农为本、以田地为主要财产，但货币相当流通[9]。它们的社会一样保守、崇尚权威、等级森严，以父权家庭为基本单位[10]。它们的政府都是中央集权，皇帝下辖郡县或行省[11]。<p class="note note-primary"> - 位置 235</p>一个帝国的独特政治风格部分源自其决策者的世界观：他们用什么标准衡量价值，靠什么概念鉴定利害；怎样在资料不足的情形下判断形势，随机应变；如何把有限的国力资源分配给无限的内政外交需求；引什么理由解释他们的取舍。左右人们思想倾向的世界观，部分体现在社会和政治制度上。它就像是个“意识基因”，小节时常改变以适应环境，但大体世代遗传，根深蒂固，演化缓慢，源远流长。历史渊源掣肘社会结构，一如童年经验塑造成人的品质。<p class="note note-primary"> - 位置 240</p>在龙与鹰的性格上痕迹历然，至今依稀可见。<p class="note note-primary"> - 位置 243</p>中国犹在青铜时代。春秋的诸侯贵族掌权，家国一体，有刑无法，养尊处优，礼不下庶民。地中海一带早已经历技术革命，进入铁器时代。劳动人民掌握了价廉效高的生产工具、战争武器，权势大涨，以身为奉公守法的城邦公民为荣。古代中西并无交通，但把罗马共和国到帝国和战国到汉初500年的历史并列同观，可见一出中国迎头赶上的好戏。<p class="note note-primary"> - 位置 246</p>罗马共和国成立时，其经济基础是自耕小农，军事主力是农民兼任的步兵。拥有自己耕地的农民珍爱私有地产，认为保护私产权是国家最大职责之一。罗马人珍惜家庭，但他们的政治制度清晰地区分家与国<p class="note note-primary"> - 位置 249</p>。虽然社会等级森严，但是上下尊卑都敬奉法律，因为它象征和维护公共的国家，更帮助各方达成协议。<p class="note note-primary"> - 位置 254</p>它借以稳定内政的权力制衡成为一个灵感泉源，滋养现代政治学。美国宪法的构想，便受它影响[16]。<p class="note note-primary"> - 位置 255</p>春秋列国的经济组织是井田共耕，军事主力是贵族垄断的战车。诸侯数百，口头上尊周王为天下共主，实际上各自军政独立。诸侯国实行宗法封建，官卿世袭，国与国君的宗室家庭混沌未分。<p class="note note-primary"> - 位置 259</p>青铜时代末年，封建政体崩坏声中，诞生了一个崇尚先王之道的没落贵族，即孔子。他把王官之学推广到平民之间，并加强其私德基础[18]。家庭伦理即是政治纲纪、统治者的个人德行足以平治天下等宗法封建时代的人治意念，凝固在儒家经典中，成为历代皇朝的主导思想。<p class="note note-primary"> - 位置 264</p>领导发展经济、富国强兵。这些法家人物明颁法例，提倡法律下人人平等，一面教导人民奉公守法、培养公德，一面把国与国君的家分开，裁抑世袭，营建以功能定职位的制度。国家确认私有地产权，有系统地划地授田给家庭农户，并要他们缴税和服兵役。平民步兵取代贵族战车，称雄沙场。新兴的农民战士类似罗马共和国的公民，不过中国的王侯用土地和经济利益笼络人民，罗马贵族则用投票权和政治利益。笔记 - 位置 268值得思考<p class="note note-primary"> - 位置 271</p>但打赢仗并非大功告成。从击败敌人到建立能统治旧敌的稳固政权，这是个艰难危险的过程，曾经摧毁了不少刹时灿烂的帝国。亚历山大的辉煌战功，便转头成空。<p class="note note-primary"> - 位置 272罗马帝国和秦汉皇朝挺过残酷的内战，赢得长治久安，但亦不免损伤<p class="note note-primary"> - 位置 273</p>政府必须获得政治精英的合作才能顺利统治。为了拉拢满足权贵阶层，罗马帝国牺牲了共和国的民主，中国皇朝牺牲了新萌芽的法治。一个深邃的弱点，从此忧患鹰与龙。<p class="note note-primary"> - 位置 276</p>20]。本书指出公民概念只在侵略扩张期间奏效。笔记 - 位置 276公民的概念到底是什么<p class="note note-primary"> - 位置 277</p>赫赫太平的罗马帝国剥夺了公民的所有政治权，法许的社会权利亦渐消损。后期像农奴般的贫穷罗马公民，比中国的臣民更缺实际的尊严和自由<p class="note note-primary"> - 位置 279</p>罗马帝国取缔民主选举，但保持共和国的三大权力基柱：军、财、法。即使长期和平，帝国亦一直置强大的专业常备军，主旨在保护皇权。庞大的军费促进商业经济，一如现代西方的军队和工商勾结互利[<p class="note note-primary"> - 位置 281</p>共和国时，一个公民的投票权与他的资产成正比，富人投的票比穷人投的票重要得多；最有钱的公民才有资格竞选政府职位。罗马帝国大幅提高资产标准；非极大地主，不能出任元老、帝国官员或兵团将领。行省各地，土豪巨富盘踞大小城政会，受皇帝庇护，为皇帝向土著收税。团结天下地主！<p class="note note-primary"> - 位置 284</p>罗马法律排难解纷，积聚数百年经验，递建复杂的绝对私有财产权，凝固富有的统治阶层[23]。军国主义和法律支撑的富豪统治，在整个罗马历史中始终稳立。控制兵团和富豪贵族，使它们合作但彼此牵制、不密谋造反，是皇帝最吃力的工作。一旦制衡失效，帝国即日暮途穷[24]。<p class="note note-primary"> - 位置 290</p>儒家君君臣臣，系国政于个人品德、亲戚关系的人治理想，有利专制皇朝的整个统治阶层。<p class="note note-primary"> - 位置 292</p>儒生盘踞政府，一意复古，拘国为家，贬法为刑；繁文缛礼，粉饰太平<p class="note note-primary"> - 位置 293</p>儒家士大夫是皇朝中国的招牌特色之一，也是世界史上最悠久的政治权益集团之一。他们之能维持统治，实靠中国的另一基柱。法家设计的君主集权科层机构挺过秦末内乱、汉初分封，成为政府体制的结构骨架。不过儒家士大夫上台后，改变了它的运作风气，以人情关系掩盖了理性规律[26]。法骨儒气，难怪西方人觉得中国有双重性格。<p class="note note-primary"> - 位置 298</p>另一位学者发现其国家观念薄弱：“中国其实是个文明，假装做个国家。”[27]<p class="note note-primary"> - 位置 300</p>据社会学，权势有三种泉源：政治、经济、思想意识；政治泉源又可分为军力和行政组织[28]。任何政府，缺一不可。然则鹰式权威偏重结合军事和经济，比较刚强；龙式权威偏重行政和教条，比较温柔。<p class="note note-primary"> - 位置 304</p>吏治清明、民生富庶外，成功的统治者还得控制民心、操纵舆论，以道德支撑强权，教人民以服从为义务。<p class="note note-primary"> - 位置 305</p>仁义说教充斥儒臣奏章，铁腕豪情洋溢罗马赞颂。然而华言高论不能抵偿皇朝、帝国的牺牲品。皇朝中国沿用法家制度，却猛加诋毁以维护儒家权益。士大夫的虚伪教条阻碍理性改革，使政治思想无从发展。奥古斯都颠覆了共和国，却保留了它的门面以掩饰自己的专制。]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>龙与鹰的帝国</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>softmax以及交叉熵loss 笔记</title>
    <link href="/posts/ddd41a10.html"/>
    <url>/posts/ddd41a10.html</url>
    
    <content type="html"><![CDATA[<h1 id="softmax以及交叉熵loss-笔记"><a href="#softmax以及交叉熵loss-笔记" class="headerlink" title="softmax以及交叉熵loss 笔记"></a>softmax以及交叉熵loss 笔记</h1><p>这几天学习了一下 softmax 激活函数，以及它的梯度求导过程，整理一下便于分享和交流！</p><h2 id="一、softmax-函数"><a href="#一、softmax-函数" class="headerlink" title="一、softmax 函数"></a><strong>一、softmax 函数</strong></h2><p><strong>softmax 用于多分类过程中</strong>，它将多个神经元的输出，映射到（0,1）区间内，可以看成概率来理解，从而来进行多分类！</p><p>假设我们有一个数组，V，Vi 表示 V 中的第 i 个元素，那么这个元素的 softmax 值就是</p><p><img src="https://gitee.com/cher112/image/raw/master/img/v2-65035de6fdfd8b2f13b930191e9a548b_b.jpg" srcset="/img/loading.gif" alt=""></p><p>更形象的如下图表示：</p><p><img src="https://pic4.zhimg.com/v2-11758fbc2fc5bbbc60106926625b3a4f_r.jpg#align=left&display=inline&height=395&margin=%5Bobject%20Object%5D&originHeight=395&originWidth=678&status=done&style=none&width=678" srcset="/img/loading.gif" alt=""></p><p>s<strong>oftmax 直白来说就是将原来输出是 3,1,-3 通过 softmax 函数一作用，就映射成为 (0,1) 的值，而这些值的累和为 1（满足概率的性质），那么我们就可以将它理解成概率，在最后选取输出结点的时候，我们就可以选取概率最大（也就是值对应最大的）结点，作为我们的预测目标！</strong></p><p><strong>举一个我最近碰到利用 softmax 的例子：</strong>我现在要实现基于神经网络的句法分析器。用到是基于转移系统来做，那么神经网络的用途就是帮我预测我这一个状态将要进行的动作是什么？比如有 10 个输出神经元，那么就有 10 个动作，1 动作，2 动作，3 动作… 一直到 10 动作。（<strong>这里涉及到 nlp 的知识，大家不用管，只要知道我现在根据每个状态（输入），来预测动作（得到概率最大的输出），最终得到的一系列动作序列就可以完成我的任务即可</strong>）</p><p>原理图如下图所示：</p><p><img src="https://gitee.com/cher112/image/raw/master/img/v2-dfff71d5b1060ba8d762c0ff0579c443_b.jpg" srcset="/img/loading.gif" alt=""></p><p>那么比如在一次的输出过程中输出结点的值是如下：</p><p>[0.2,0.1,0.05,0.1,0.2,0.02,0.08,0.01,0.01,0.23]</p><p><strong>那么我们就知道这次我选取的动作是动作 10，因为 0.23 是这次概率最大的，那么怎么理解多分类呢？很容易，如果你想选取俩个动作，那么就找概率最大的俩个值即可~（这里只是简单的告诉大家 softmax 在实际问题中一般怎么应用）</strong></p><h2 id="二、softmax-相关求导"><a href="#二、softmax-相关求导" class="headerlink" title="二、softmax 相关求导"></a><strong>二、softmax 相关求导</strong></h2><p>当我们对分类的 Loss 进行改进的时候，我们要通过梯度下降，每次优化一个 step 大小的梯度，<strong>这个时候我们就要求 Loss 对每个权重矩阵的偏导，然后应用链式法则</strong>。那么这个过程的第一步，就是对 softmax 求导传回去，不用着急，我后面会举例子非常详细的说明。在这个过程中，你会发现用了 softmax 函数之后，<strong>梯度求导过程非常非常方便！</strong></p><p><strong>下面我们举出一个简单例子，原理一样，目的是为了帮助大家容易理解！</strong></p><p><img src="https://pic4.zhimg.com/v2-d958d4c9d262fdbf799a2010d2f2ee3b_r.jpg#align=left&display=inline&height=407&margin=%5Bobject%20Object%5D&originHeight=407&originWidth=653&status=done&style=none&width=653" srcset="/img/loading.gif" alt=""></p><p><strong>我们能得到下面公式：</strong></p><p>z4 = w41_o1+w42_o2+w43*o3</p><p>z5 = w51_o1+w52_o2+w53*o3</p><p>z6 = w61_o1+w62_o2+w63*o3</p><p>z4,z5,z6 分别代表结点 4,5,6 的输出，01,02,03 代表是结点 1,2,3 往后传的输入.</p><p>那么我们可以经过 softmax 函数得到</p><p><img src="https://www.zhihu.com/equation?tex=a_%7B4%7D%3D+%5Cfrac%7Be%5E%7Bz4%7D+%7D%7Bz%5E%7Bz4%7D%2Bz%5E%7Bz5%7D%2Bz%5E%7Bz6%7D%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=186&status=done&style=none&width=186" srcset="/img/loading.gif" alt=""></p><p><img src="https://www.zhihu.com/equation?tex=a_%7B5%7D+%3D%5Cfrac%7Be%5E%7Bz5%7D+%7D%7Bz%5E%7Bz4%7D%2Bz%5E%7Bz5%7D%2Bz%5E%7Bz6%7D%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=186&status=done&style=none&width=186" srcset="/img/loading.gif" alt="">)<img src="https://www.zhihu.com/equation?tex=a_%7B6%7D%3D+%5Cfrac%7Be%5E%7Bz6%7D+%7D%7Bz%5E%7Bz4%7D%2Bz%5E%7Bz5%7D%2Bz%5E%7Bz6%7D%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=186&status=done&style=none&width=186" srcset="/img/loading.gif" alt=""></p><p><strong>好了，我们的重头戏来了，怎么根据求梯度，然后利用梯度下降方法更新梯度！</strong></p><p>要使用梯度下降，肯定需要一个损失函数，<strong>这里我们使用交叉熵作为我们的损失函数，为什么使用交叉熵损失函数，不是这篇文章重点，</strong>后面有时间会单独写一下为什么要用到交叉熵函数（这里我们默认选取它作为损失函数）</p><p>交叉熵函数形式如下：</p><p><img src="https://www.zhihu.com/equation?tex=Loss+%3D+-%5Csum_%7Bi%7D%5E%7B%7D%7By_%7Bi%7Dlna_%7Bi%7D+%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=180&status=done&style=none&width=180" srcset="/img/loading.gif" alt=""></p><p>其中 y 代表我们的真实值，a 代表我们 softmax 求出的值。i 代表的是输出结点的标号！在上面例子，i 就可以取值为 4,5,6 三个结点（<strong>当然我这里只是为了简单，真实应用中可能有很多结点</strong>）</p><p><strong>现在看起来是不是感觉复杂了，居然还有累和，然后还要求导，每一个 a 都是 softmax 之后的形式！</strong></p><p><strong>但是实际上不是这样的，我们往往在真实中，如果只预测一个结果，那么在目标中只有一个结点的值为 1，比如我认为在该状态下，我想要输出的是第四个动作（第四个结点）, 那么训练数据的输出就是 a4 = 1,a5=0,a6=0，哎呀，这太好了，除了一个为 1，其它都是 0，那么所谓的求和符合，就是一个幌子，我可以去掉啦！</strong></p><p><strong>为了形式化说明，我这里认为训练数据的真实输出为第 j 个为 1，其它均为 0！</strong></p><p><strong>那么 Loss 就变成了<img src="https://www.zhihu.com/equation?tex=Loss+%3D+-y_%7Bj%7Dlna_%7Bj%7D+#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=145&status=done&style=none&width=145" srcset="/img/loading.gif" alt="">, 累和已经去掉了，太好了。现在我们要开始求导数了！</strong></p><p>我们在整理一下上面公式，为了更加明白的看出相关变量的关系：</p><p>其中<img src="https://www.zhihu.com/equation?tex=y_%7Bj%7D+%3D1#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=57&status=done&style=none&width=57" srcset="/img/loading.gif" alt="">, 那么形式变为<img src="https://www.zhihu.com/equation?tex=Loss+%3D+-lna_%7Bj%7D+#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=126&status=done&style=none&width=126" srcset="/img/loading.gif" alt=""></p><p>那么形式越来越简单了，求导分析如下：</p><p><strong>参数的形式在该例子中，总共分为 w41,w42,w43,w51,w52,w53,w61,w62,w63. 这些，那么比如我要求出 w41,w42,w43 的偏导，就需要将 Loss 函数求偏导传到结点 4，然后再利用链式法则继续求导即可，举个例子此时求 w41 的偏导为:</strong></p><p><img src="https://gitee.com/cher112/image/raw/master/img/v2-a1041435eb26ff6a38e82b355706ec37_b.jpg" srcset="/img/loading.gif" alt=""></p><p><strong>w51…..w63 等参数的偏导同理可以求出，那么我们的关键就在于 Loss 函数对于结点 4,5,6 的偏导怎么求，如下：</strong></p><p><strong>这里分为俩种情况：</strong></p><p><img src="https://gitee.com/cher112/image/raw/master/img/v2-d3a4e22a107052ee998823b24b49db71_b.jpg" srcset="/img/loading.gif" alt=""></p><p>j=i 对应例子里就是如下图所示：</p><p>比如我选定了 j 为 4，那么就是说我现在求导传到 4 结点这！</p><p><img src="https://pic3.zhimg.com/v2-acaf14aac554ab61ff6f32845fd5128e_b.jpg#alt=" srcset="/img/loading.gif" alt="">)<img src="https://pic3.zhimg.com/v2-acaf14aac554ab61ff6f32845fd5128e_r.jpg#align=left&display=inline&height=406&originHeight=406&originWidth=585&status=done&style=none&width=585" srcset="/img/loading.gif" alt=""></p><p>那么由上面求导结果再乘以交叉熵损失函数求导</p><p><img src="https://www.zhihu.com/equation?tex=Loss+%3D+-lna_%7Bj%7D+#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=126&status=done&style=none&width=126" srcset="/img/loading.gif" alt="">)，它的导数为<img src="https://www.zhihu.com/equation?tex=-%5Cfrac%7B1%7D%7Ba_%7Bj%7D+%7D+#align=left&display=inline&height=53&margin=%5Bobject%20Object%5D&originHeight=53&originWidth=43&status=done&style=none&width=43" srcset="/img/loading.gif" alt="">, 与上面<img src="https://www.zhihu.com/equation?tex=a_%7Bj%7D%281-a_%7Bj%7D+%29+#align=left&display=inline&height=27&margin=%5Bobject%20Object%5D&originHeight=27&originWidth=91&status=done&style=none&width=91" srcset="/img/loading.gif" alt="">)相乘为<img src="https://www.zhihu.com/equation?tex=a_%7Bj%7D-1+#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=55&status=done&style=none&width=55" srcset="/img/loading.gif" alt="">（<strong>形式非常简单，这说明我只要正向求一次得出结果，然后反向传梯度的时候，只需要将它结果减 1 即可，后面还会举例子！</strong>）那么我们可以得到 Loss 对于 4 结点的偏导就求出了了</p><p>关键：<strong>这里假定 4 是我们的预计输出</strong></p><p>第二种情况为：</p><p><img src="https://gitee.com/cher112/image/raw/master/img/v2-5eafb4c0a835bc90248766ac0c123dfe_b.jpg" srcset="/img/loading.gif" alt=""></p><p>这里对应我的例子图如下，我这时对的是 j 不等于 i，往前传：</p><p><img src="https://pic1.zhimg.com/v2-f09fb0c50194f6cc0828fc285eb9bc1c_r.jpg#align=left&display=inline&height=416&margin=%5Bobject%20Object%5D&originHeight=416&originWidth=599&status=done&style=none&width=599" srcset="/img/loading.gif" alt=""></p><p>那么由上面求导结果再乘以交叉熵损失函数求导</p><p><img src="https://www.zhihu.com/equation?tex=Loss+%3D+-lna_%7Bj%7D+#align=left&display=inline&height=26&margin=%5Bobject%20Object%5D&originHeight=26&originWidth=126&status=done&style=none&width=126" srcset="/img/loading.gif" alt="">)，它的导数为<img src="https://www.zhihu.com/equation?tex=-%5Cfrac%7B1%7D%7Ba_%7Bj%7D+%7D+#align=left&display=inline&height=53&margin=%5Bobject%20Object%5D&originHeight=53&originWidth=43&status=done&style=none&width=43" srcset="/img/loading.gif" alt="">, 与上面<img src="https://www.zhihu.com/equation?tex=-a_%7Bj%7Da_%7Bi%7D#align=left&display=inline&height=24&margin=%5Bobject%20Object%5D&originHeight=24&originWidth=54&status=done&style=none&width=54" srcset="/img/loading.gif" alt="">)相乘为<img src="https://www.zhihu.com/equation?tex=a_%7Bi%7D#align=left&display=inline&height=18&margin=%5Bobject%20Object%5D&originHeight=18&originWidth=18&status=done&style=none&width=18" srcset="/img/loading.gif" alt="">（<strong>形式非常简单，这说明我只要正向求一次得出结果，然后反向传梯度的时候，只需要将它结果保存即可，后续例子会讲到</strong>）<strong>这里就求出了除 4 之外的其它所有结点的偏导，然后利用链式法则继续传递过去即可！我们的问题也就解决了！</strong></p><h2 id="三、简化举例"><a href="#三、简化举例" class="headerlink" title="三、简化举例"></a><strong>三、简化举例</strong></h2><p>**举个例子，通过若干层的计算，最后得到的某个训练样本的向量的分数是 [2, 3, 4],</p><p>那么经过 softmax 函数作用后概率分别就是 =[<img src="https://www.zhihu.com/equation?tex=%5Cfrac%7Be%5E%7B2%7D+%7D%7Be%5E%7B2%7D%2Be%5E%7B3%7D%2Be%5E%7B4%7D%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=116&status=done&style=none&width=116" srcset="/img/loading.gif" alt=""></p><p>,<img src="https://www.zhihu.com/equation?tex=%5Cfrac%7Be%5E%7B3%7D+%7D%7Be%5E%7B2%7D%2Be%5E%7B3%7D%2Be%5E%7B4%7D%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=116&status=done&style=none&width=116" srcset="/img/loading.gif" alt="">),<img src="https://www.zhihu.com/equation?tex=%5Cfrac%7Be%5E%7B4%7D+%7D%7Be%5E%7B2%7D%2Be%5E%7B3%7D%2Be%5E%7B4%7D%7D+#align=left&display=inline&height=56&margin=%5Bobject%20Object%5D&originHeight=56&originWidth=116&status=done&style=none&width=116" srcset="/img/loading.gif" alt="">] = [0.0903,0.2447,0.665], 如果这个样本正确的分类是第二个的话，那么计算出来的偏导就是 [0.0903,0.2447-1,0.665]=[0.0903,-0.7553,0.665]，是不是非常简单！！然后再根据这个进行 back propagation 就可以了**</p><p><strong>到这里，这篇文章的内容就讲完了，我希望根据自己的理解，通过列出大量例子，直白的给大家讲解 softmax 的相关内容，让大家少走弯路，真心希望对大家的理解有帮助！欢迎交流指错！画图整理不易，觉得有帮助的给个赞呗，哈哈！</strong></p><p>参考：</p><p><a href="https://link.zhihu.com/?target=http%3A//m.blog.csdn.net/article/details%3Fid%3D51045303">softmax 的 log 似然代价函数（公式求导）</a></p><p><a href="https://link.zhihu.com/?target=http%3A//m.blog.csdn.net/article/details%3Fid%3D51043064">交叉熵代价函数（作用及公式推导）</a></p><p><a href="https://link.zhihu.com/?target=http%3A//deeplearning.stanford.edu/wiki/index.php/Softmax%25E5%259B%259E%25E5%25BD%2592">Softmax 回归 - Ufldl</a></p>]]></content>
    
    
    <categories>
      
      <category>神经网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据库设计和E-R模型</title>
    <link href="/posts/f18b1104.html"/>
    <url>/posts/f18b1104.html</url>
    
    <content type="html"><![CDATA[<h1 id="数据库设计和E-R模型"><a href="#数据库设计和E-R模型" class="headerlink" title="数据库设计和E-R模型"></a>数据库设计和E-R模型</h1><h1 id="设计过程概览"><a href="#设计过程概览" class="headerlink" title="设计过程概览"></a>设计过程概览</h1><ul><li>设计数据库模式</li><li>设计访问和更新数据的程序</li><li>设计控制数据访问的安全模式</li></ul><h1 id="实体-联系模型-E-R-model"><a href="#实体-联系模型-E-R-model" class="headerlink" title="实体 联系模型 E-R model"></a>实体 联系模型 E-R model</h1><p>三个基本概念</p><ul><li>实体集</li><li>联系集</li><li>属性</li></ul><h2 id="实体集"><a href="#实体集" class="headerlink" title="实体集"></a>实体集</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1586855087990-0a42b7e0-9cd0-4900-a240-9425a3734f4e.png" srcset="/img/loading.gif" alt="image.png"><br>每个实体有一组性质，其中的一些可以唯一标识一个实体。比如身份证号<br><img src="https://gitee.com/cher112/image/raw/master/img/1586855134970-85d3fd4d-8db6-4bc4-96b5-ed34de84b501.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1586855183334-5399834a-0821-419e-8139-de6ddb1f3ec0.png" srcset="/img/loading.gif" alt="image.png">值</p><h2 id="联系集"><a href="#联系集" class="headerlink" title="联系集"></a>联系集</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1586855290187-0ea95158-f6d4-4a01-a664-5c44552a7395.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1586855272904-0bd95a25-cc77-426a-b25d-186577148f86.png" srcset="/img/loading.gif" alt="image.png"><br>eg:<img src="https://gitee.com/cher112/image/raw/master/img/1586855317543-ff761c09-f03c-49b5-a2b0-6b8fc8732f63.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1586855357453-20a56257-a791-428e-b448-125a585a8f8f.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1586855383426-300ed27a-a51b-40c1-b536-38930c166b44.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1586855396249-5b63ab68-c0cb-4006-afd9-aa8d2eb613dd.png" srcset="/img/loading.gif" alt="image.png"></p><p>二元联系集：涉及两个实体集的联系集。<br><img src="https://gitee.com/cher112/image/raw/master/img/1586855499994-b771277d-449b-4c60-9edb-ade4b6a6a935.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p>实体集的属性是 将实体集映射到域的函数。每个实体可以用一组(属性，数据值)的key对来表示。<br><img src="https://gitee.com/cher112/image/raw/master/img/1586855947864-1fb7a25a-cb52-4818-b98c-79b34a2a3a8e.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="属性划分"><a href="#属性划分" class="headerlink" title="属性划分"></a>属性划分</h2><ul><li>简单 复合（composite）属性：简单指的是 该部分不能划分为更小的部分；复合则相反(举例：名字的属性可以化为姓和名) <strong>复合属性可以有层次</strong></li><li>单值-多值 属性。 单值：每个人有一个独特的身份证号；多值：从小到大的外号，</li><li>派生(derived) 属性： 数据集里有人的出生年月日，可以推断出他的年龄，那 age 属性就是 派生属性；dateofbirth为 <strong>基属性</strong></li></ul><p>**</p><h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><h2 id="映射基数-mapping-cardinality"><a href="#映射基数-mapping-cardinality" class="headerlink" title="映射基数 mapping cardinality"></a>映射基数 mapping cardinality</h2><p>一个实体通过联系集能关联到的实体个数</p><p>对于实体集 A和B 二元联系集来说，映射基数必然是以下情况<br><img src="https://gitee.com/cher112/image/raw/master/img/1587367182595-35b7c033-dfe8-49b4-8e79-4120ee6321be.png" srcset="/img/loading.gif" alt="image.png"></p><p><img src="https://gitee.com/cher112/image/raw/master/img/1587367194175-72589160-4b0b-4010-8b00-832c626fb88d.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="参与约束"><a href="#参与约束" class="headerlink" title="参与约束"></a>参与约束</h2><p>如果实体集的每个实体都参与到联系集R的至少一个联系中，则E的参与为 <strong>全部(Total)的， **反之则为</strong>部分的**(partial). 比如 a中B就是全部的，a是部分的，b的两个实体集都是全部的。</p><h2 id="码"><a href="#码" class="headerlink" title="码"></a>码</h2><p>区分实体集中的实体的方法。</p><blockquote><p>一个实体集中不允许两个实体对于所有属性都有一样的值</p></blockquote><p>关系模式的码概念适用于实体集 和 唯一<strong>标识联系，</strong>将联系互相区分。</p><h3 id="联系的码"><a href="#联系的码" class="headerlink" title="联系的码"></a>联系的码</h3><p><img src="https://gitee.com/cher112/image/raw/master/img/1587367827981-4e53535c-25a6-47d5-aab6-929379611b91.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="从实体集中删除冗余属性"><a href="#从实体集中删除冗余属性" class="headerlink" title="从实体集中删除冗余属性"></a>从实体集中删除冗余属性</h1><p>一旦选择好实体和相应属性，实体间的联系集就建立起来了，这些联系有可能会导致不同实体集中的属性冗余，需要将其从原始实体集中删除。</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1587368244947-c6c72e22-9d51-4262-b35e-15e0f4c3c376.png" srcset="/img/loading.gif" alt="image.png"><br>暂时理解：因为有联系，且部门名称是部门集的主码，数据库<strong>可以直接以联系来获值，而不需要额外建立一个属性。</strong><br>**</p><h1 id="实体-联系图"><a href="#实体-联系图" class="headerlink" title="实体-联系图"></a>实体-联系图</h1><p>E-R diagram</p><h2 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587368403037-942729de-7f63-4e14-b9d9-192afe083ef3.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1587368444760-00daa0a4-4e17-492a-9166-6788dc8f6525.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="映射基数"><a href="#映射基数" class="headerlink" title="映射基数"></a>映射基数</h2><p>就是上面的二元映射基数概念的图像表示<br><img src="https://gitee.com/cher112/image/raw/master/img/1587368681546-a0a670b8-c22d-4d7a-96fe-f15df7584105.png" srcset="/img/loading.gif" alt="image.png"></p><p>l..h形式  关联的最大和最小的映射基数<br>l为最小的映射基数，最小值为1表示这个实体集在联系集中全部参与<br>h为最大的映射基数，最大值为1为这个实体集(每一个元组)参与至多一个联系，为*则表示没有限制</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1587369108506-bda64b01-99d4-4bad-bacf-9b4aadac4608.png" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>1..1代表一个学生只能且必须有一个导师，0…*代表一个导师可以有0-多个学生。</p></blockquote><p>如果两边最大值都为1，则是1对1</p><h2 id="复杂属性"><a href="#复杂属性" class="headerlink" title="复杂属性"></a>复杂属性</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587370534717-fd5d0051-c566-4d5e-af45-9fb743d88e2f.png" srcset="/img/loading.gif" alt="image.png"><br>first/middle/last为name的<strong>子属性</strong>，而name为<strong>复合属性</strong>(同address)<br>{phone_number}为<strong>多值属性</strong><br>age() 表示<strong>派生属性</strong><br>**</p><h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587370674609-86b153bb-0a01-4268-868f-3322236ed029.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="非二元的联系集"><a href="#非二元的联系集" class="headerlink" title="非二元的联系集"></a>非二元的联系集</h2><blockquote><p>只允许在一个联系集外有一个箭头，如果有两个箭头指向A/B，可能有两种解释：第一个是A和BC是一对X，联系的主键是{B,C}的候选码； 第二个是A和B/C中的一个1对x。此时联系R的主键是A∪B/C</p></blockquote><p>因为有两种解释，所以规定在ER模型中，<strong>一个联系集外只有一个箭头</strong><br>**</p><h2 id="弱-强-实体集-weak-strong-entity-set"><a href="#弱-强-实体集-weak-strong-entity-set" class="headerlink" title="弱(强)实体集 weak(strong) entity set"></a>弱(强)实体集 weak(strong) entity set</h2><p>没有足够属性以形成<strong>主码</strong>的实体集，有主码的实体集称为强实体集。<br>举例：<br><img src="https://gitee.com/cher112/image/raw/master/img/1587469385485-2fa66ee2-a273-495e-86ae-34e3be2d0318.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1587469409481-61ec8e5b-cf75-4bb3-a902-baff57e18299.png" srcset="/img/loading.gif" alt="image.png"></p><p>弱实体集通过和强实体集建立 <strong>联系</strong>，联系给弱实体集提供<strong>额外信息</strong>(唯一标识)作为新主码。<br>主要目的：以联系为方法来 <strong>消除冗余</strong></p><p>和弱实体层关联的集称作  *<em>标识(identifying) *</em>或 *<em>属主实体集(owner entity set) *</em>才有意义<br>即 弱实体集存在依赖(existence dependent)<br>标识实体 own 它所标识的弱实体集。</p><p><strong>分辨符(discriminator)</strong>: 无主码时区分依赖特定强实体集的弱实体集中实体的方法——属性集合</p><p><strong><img src="https://gitee.com/cher112/image/raw/master/img/1587469991157-193cd1bd-0085-4b96-b3f3-15028b4a7e7f.png" srcset="/img/loading.gif" alt="image.png"></strong><br>**</p><h1 id="转换为关系模式"><a href="#转换为关系模式" class="headerlink" title="转换为关系模式"></a>转换为关系模式</h1><p>简单属性直接转；<br>复杂属性中， 复合属性拆开写(name: first+last); 派生属性在后文讨论； 多值属性把每个值都作为主码<br><img src="https://gitee.com/cher112/image/raw/master/img/1587470124161-1368408f-ebad-498b-80f2-95d17fb331ae.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="弱实体集的标识"><a href="#弱实体集的标识" class="headerlink" title="弱实体集的标识"></a>弱实体集的标识</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587470188135-46065fab-85f1-4956-aea1-bdf426beab7c.png" srcset="/img/loading.gif" alt="image.png"><br>分开标识广义的主码，并进行外码约束。</p><h1 id="实体联系设计问题"><a href="#实体联系设计问题" class="headerlink" title="实体联系设计问题"></a>实体联系设计问题</h1><blockquote><p>给教师信息构建数据库，”电话”作为属性还是实体集</p></blockquote><p><img src="https://gitee.com/cher112/image/raw/master/img/1587470285500-5ec53f95-d525-415a-9eef-65a852d4d67e.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1587470293984-99ef01de-bf75-4669-9e68-70696399a719.png" srcset="/img/loading.gif" alt="image.png"><br>具体问题具体分析…</p><h2 id="二元还是n元联系"><a href="#二元还是n元联系" class="headerlink" title="二元还是n元联系"></a>二元还是n元联系</h2><p>通常都是二元的，但非2元的也可以用2元来表示(每两个实体集建立一个联系)<br><img src="https://gitee.com/cher112/image/raw/master/img/1587470410184-2e8494a6-0e4c-4464-b5dd-5fe467d123e3.png" srcset="/img/loading.gif" alt="image.png"><br>但是这样会增加很多联系集标识属性，增加设计难度和储存要求</p><h1 id="EER-扩展E-R模型"><a href="#EER-扩展E-R模型" class="headerlink" title="EER 扩展E-R模型"></a>EER 扩展E-R模型</h1><h2 id="特化"><a href="#特化" class="headerlink" title="特化"></a>特化</h2><p>实体集中可能包含一些子集，其实体某些方面区别于实体集中的其他实体(不具备一般实体共享的属性)<br>eg: person实体集：employee &amp; student<br>都有一般人的属性表示，但employees可以用 salary来标识；而students可以用 tot_cre标识( 特化过程 )</p><p>在<strong>实体集内部分组</strong>的过程称为 <strong>特化 (specialization)</strong><br>employee和student是person的两个特化。</p><p><strong>重叠(overlapping)特化</strong>: 一个实体集可以属于多个特化实体集<br>eg:  employee可以特化为instructor、secretary，也可以特化为temporary_employee、permanent_employee，这样一个employee可能是一个instructor的同时也是一个permanent_employee</p><p><strong>不相交(disjoint)特化</strong>：实体集至多属于一个特化实体集</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1587480909470-49feb040-21c2-44ab-ab1a-ae42a88fd3c5.png" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>E-R图中，表示方法为 从特化实体指向另一方实体的空心箭头标识( is-a 关系)<br>重叠特化：分开使用两个箭头；不相交特化：使用一个箭头</p></blockquote><h2 id="概化-generalization"><a href="#概化-generalization" class="headerlink" title="概化 generalization"></a>概化 generalization</h2><p><strong>特化的逆过程</strong>； <strong>自底而上</strong>，将实体集的共性基础上(强调相似并隐藏差异——改属性)，综合为一个高层实体集(超集)</p><h2 id="属性继承-attribute-inheritance"><a href="#属性继承-attribute-inheritance" class="headerlink" title="属性继承 attribute inheritance"></a>属性继承 attribute inheritance</h2><p>高层实体集的属性被低层实体集继承 (student继承了person的属性： ID name address etc.)—单继承<br>同时低层实体集可能继承*<em>高层实体参与的联系集 *</em><br>(person+department， student的ID和per_dept分别从两个地方继承)   —— 多(mutiple)继承</p><h2 id="概化上的约束"><a href="#概化上的约束" class="headerlink" title="概化上的约束"></a>概化上的约束</h2><h2 id="聚集-aggregation"><a href="#聚集-aggregation" class="headerlink" title="聚集 aggregation"></a>聚集 aggregation</h2><p>E-R模型的局限性在于无法表达 <strong>联系之间的联系</strong><br>**<br>聚集：通过抽象过程，将联系视为高层实体<br>eg:<img src="https://gitee.com/cher112/image/raw/master/img/1587481640569-6e35f6e5-b38b-4d28-aa36-39ba2ce5b57c.png" srcset="/img/loading.gif" alt="image.png"><br>新建立了一个联系：项目评估——学校会抽查评估项目<br>proj_guige和eval_for实际上不能合并(虽然有类似的主码)，因为可能有些项目<strong>未被评估</strong><br>但是proj_guide和eval_for在关联实体集上有<strong>高度重合</strong>的部分！<br>故可以将含信息量多的 <strong>聚集</strong> 起来作为高层实体供eval_for来<strong>继承</strong></p><h2 id="转化为关系模式"><a href="#转化为关系模式" class="headerlink" title="转化为关系模式"></a>转化为关系模式</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587482088573-08356de2-6f73-46de-a20d-01a2d587b9e8.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1587482225960-c6e2d177-6abc-4a52-a9df-b84526c3dcb0.png" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>但是会出现无法定义的外码约束，所以还是需要创一个person关系</p></blockquote><p><strong>如果是重叠概化，很多值会被不必要的储存多次！</strong></p><p><img src="https://gitee.com/cher112/image/raw/master/img/1587482328753-df5c56de-9364-4d78-8817-b8722443883a.png" srcset="/img/loading.gif" alt="image.png"></p><p>只要不是全部概化特化，就会出现冗余储存….</p><h1 id="E-R图表示法总结"><a href="#E-R图表示法总结" class="headerlink" title="E-R图表示法总结"></a>E-R图表示法总结</h1><p><img src="https://gitee.com/cher112/image/raw/master/img/1587482387862-06c34f47-4771-47cb-b6a3-7afeeb10e1ea.png" srcset="/img/loading.gif" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>深度学习入门 -- 权重初始值的优化</title>
    <link href="/posts/5c96ef9b.html"/>
    <url>/posts/5c96ef9b.html</url>
    
    <content type="html"><![CDATA[<h1 id="深度学习入门-–-权重初始值的优化"><a href="#深度学习入门-–-权重初始值的优化" class="headerlink" title="深度学习入门 – 权重初始值的优化"></a>深度学习入门 – 权重初始值的优化</h1><p>在神经网络的学习中，权重的初始值特别重要，它经常关系到神经网络的学习能否成功。</p><p>权重初始值的优化有三个要点（结论）：</p><ul><li>权重初始值必须是随机生成的。</li><li>当激活函数使用<code>sigmoid</code>或<code>tanh函数(正切函数)</code>等 S 型曲线函数时，初始值使用<code>Xavier初始值</code>。</li><li>当激活函数使用<code>ReLU</code>时，权重初始值使用<code>He初始值</code>。</li></ul><p>随机生成的权重初始值就像这样：</p><pre><code class="hljs angelscript"><span class="hljs-number">0.01</span> * np.random.randn(<span class="hljs-number">10</span>, <span class="hljs-number">100</span>)  # 标准差为<span class="hljs-number">0.01</span> 的高斯分布</code></pre><p>为什么要随机生成权重初始值呢？因为只有这样，才能发挥多层神经网络的学习效果。</p><p>各层的激活值的分布都要求有适当的广度（分布均匀），因为在各层之间传递多样性的数据，神经网络就可以进行高效地学习。反过来，如果传递的都是有所偏向的数据（分布不均匀），就会出现梯度消失或者 “表现力受限” 的问题，导致学习可能无法顺利进行。</p><p>接下来看看各种初始值以及对应的激活函数的激活值的不同分布,</p><h3 id="权重初始值为标准差是-1-的高斯分布，激活函数为-sigmoid"><a href="#权重初始值为标准差是-1-的高斯分布，激活函数为-sigmoid" class="headerlink" title="权重初始值为标准差是 1 的高斯分布，激活函数为 sigmoid"></a>权重初始值为标准差是 1 的高斯分布，激活函数为 sigmoid</h3><p><img src="https://pic4.zhimg.com/v2-6cd0683a60adef92f2359bce30ddd3a3_b.jpg#align=left&display=inline&height=264&originHeight=264&originWidth=391&status=done&style=none&width=391" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-6cd0683a60adef92f2359bce30ddd3a3_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>如上图，各层激活值呈偏向 0 和 1 的分布，会出现梯度消失的问题</p><h3 id="权重初始值为标准差是-0-01-的高斯分布，激活函数为-sigmoid"><a href="#权重初始值为标准差是-0-01-的高斯分布，激活函数为-sigmoid" class="headerlink" title="权重初始值为标准差是 0.01 的高斯分布，激活函数为 sigmoid"></a>权重初始值为标准差是 0.01 的高斯分布，激活函数为 sigmoid</h3><p><img src="https://pic3.zhimg.com/v2-09152787f339844815730e503cc8f132_b.jpg#alt=" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-09152787f339844815730e503cc8f132_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>这次的激活值集中在 0.5 附近，会出现表现力受限的问题。</p><h3 id="权重初始值为-Xavier-初始值，激活函数为-sigmoid"><a href="#权重初始值为-Xavier-初始值，激活函数为-sigmoid" class="headerlink" title="权重初始值为 Xavier 初始值，激活函数为 sigmoid"></a>权重初始值为 Xavier 初始值，激活函数为 sigmoid</h3><p><code>Xavier初始值</code>即是标准差为<code>sqrt(1/n)</code>的高斯分布：</p><pre><code class="hljs maxima">w = <span class="hljs-built_in">np</span>.<span class="hljs-built_in">random</span>.randn(node_num, node_num) * <span class="hljs-built_in">np</span>.<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">1.0</span> / node_num)</code></pre><p>效果如下：</p><p><img src="https://pic2.zhimg.com/v2-4f12f6d53a174df9996690b3b144bc01_b.jpg#align=left&display=inline&height=264&originHeight=264&originWidth=384&status=done&style=none&width=384" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-4f12f6d53a174df9996690b3b144bc01_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>可以看出，各层激活值的分布更有广度，所以 sigmoid 函数的表现力不受限制，有望进行高效地学习。</p><h3 id="权重初始值为-He-初始值，激活函数为-sigmoid"><a href="#权重初始值为-He-初始值，激活函数为-sigmoid" class="headerlink" title="权重初始值为 He 初始值，激活函数为 sigmoid"></a>权重初始值为 He 初始值，激活函数为 sigmoid</h3><p><code>He初始值</code>即是标准差为<code>sqrt(2/n)</code>的高斯分布:</p><pre><code class="hljs maxima">w = <span class="hljs-built_in">np</span>.<span class="hljs-built_in">random</span>.randn(node_num, node_num) * <span class="hljs-built_in">np</span>.<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">2.0</span> / node_num)</code></pre><p>效果如下：</p><p><img src="https://pic1.zhimg.com/v2-c72e35396e346da90592d872c994ebb8_b.jpg#align=left&display=inline&height=264&originHeight=264&originWidth=384&status=done&style=none&width=384" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-c72e35396e346da90592d872c994ebb8_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>可以看出，当激活函数为<code>sigmoid</code>时，<code>He初始值</code>的效果仍然不错。</p><p>激活函数使用 ReLU 时，不同权重初始值的激活值分布的变化</p><hr><p><strong>权重初始值为标准差是 0.01 的高斯分布时：</strong></p><p><img src="https://pic2.zhimg.com/v2-9766756185696170792413fb5bee33bd_b.jpg#align=left&display=inline&height=264&originHeight=264&originWidth=389&status=done&style=none&width=389" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-9766756185696170792413fb5bee33bd_720w.jpg" srcset="/img/loading.gif" alt=""></p><p><strong>权重初始值为 Xavier 初始值时：</strong></p><p><img src="https://pic2.zhimg.com/v2-890060c8dd157505e7cddcafd976040d_b.jpg#align=left&display=inline&height=264&originHeight=264&originWidth=389&status=done&style=none&width=389" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-890060c8dd157505e7cddcafd976040d_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>**</p><p>权重初始值为 He 初始值时：**</p><p><img src="https://pic3.zhimg.com/v2-7970ab3fdde3c88e874069004e5250de_b.jpg#alt=" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-7970ab3fdde3c88e874069004e5250de_720w.jpg" srcset="/img/loading.gif" alt=""></p><p><strong>总结，当激活函数使用 ReLU, 权重初始值使用<code>He初始值</code>；当激活函数使用 sigmoid 时，权重初始值使用<code>Xavier初始值</code>。</strong></p><h3 id="基于-MNIST-数据集的权重初始值的比较："><a href="#基于-MNIST-数据集的权重初始值的比较：" class="headerlink" title="基于 MNIST 数据集的权重初始值的比较："></a>基于 MNIST 数据集的权重初始值的比较：</h3><p>这里以<code>标准差为0.01的高斯分布</code> 、<code>Xavier初始值</code>、<code>He初始值</code>三种初始值进行实验。</p><p>并且由上一篇文章的知识可知，权重偏置等参数的更新有四种方式：</p><ul><li>SGD</li><li>Momentum</li><li>AdaGrad</li><li>Adam</li></ul><p><strong>用 SGD 更新参数的条件下，基于 MNIST 数据集的三种权重初始值的比较如下图：</strong></p><p><img src="https://pic3.zhimg.com/v2-be397fbe79e39ce3c3b38a785da85206_b.jpg#alt=" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-be397fbe79e39ce3c3b38a785da85206_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>如上图，<code>std=0.01</code>时，完全无法进行学习，当权重初始值为<code>He初始值</code>时，学习效果最好，进度最快。</p><p><strong>用 Adam 更新参数的条件下，基于 MNIST 数据集的三种权重初始值的比较如下图：</strong></p><p><img src="https://pic1.zhimg.com/v2-d3d1f084fd4884745e31ef2eafff8ee8_b.jpg#align=left&display=inline&height=266&originHeight=266&originWidth=389&status=done&style=none&width=389" srcset="/img/loading.gif" alt="">)<img src="https://gitee.com/cher112/image/raw/master/img/v2-d3d1f084fd4884745e31ef2eafff8ee8_720w.jpg" srcset="/img/loading.gif" alt=""></p><p>如上图，三种权重初始值都能得到较好的学习效果，其中仍然是权重初始值为<code>He初始值</code>的学习效果最佳。<strong>说明一个好的更新参数的方法带来的优势可以抵消不良的权重初始值带来的劣势。</strong></p><blockquote><p>用一句话总结今天的文章：如果不知道使用什么权重初始值，那就使用<code>He初始值</code>；<code>Adam方法</code>带来的影响大于初始值带来的影响。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>调参侠</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>优化（ optimization）和泛化 （generalization）——减少过拟合和欠拟合</title>
    <link href="/posts/6103f647.html"/>
    <url>/posts/6103f647.html</url>
    
    <content type="html"><![CDATA[<h1 id="优化（-optimization）和泛化-（generalization）——减少过拟合和欠拟合"><a href="#优化（-optimization）和泛化-（generalization）——减少过拟合和欠拟合" class="headerlink" title="优化（ optimization）和泛化 （generalization）——减少过拟合和欠拟合"></a>优化（ optimization）和泛化 （generalization）——减少过拟合和欠拟合</h1><h1 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h1><blockquote><p>机器学习的根本问题是<strong>优化</strong>和<strong>泛化</strong>之间的对立。</p></blockquote><p> 优化（ optimization）是指调节模型以在<strong>训练数据</strong>上得到最佳性能（即机器学习中的学习）<br>而泛化（ generalization）是指训练好的模型在<strong>前所未见的数据</strong>上的性能好坏。<br>机器学习的目的当然是得到良好的泛化，但你无法控制泛化，只能基于训练数据调节模型。</p><h1 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h1><ul><li>增大训练数据量</li><li>调节模型存储信息量</li><li>对存储信息加以约束，使模型<strong>集中学习</strong>重要的模式——<strong>正则化（ regularization）</strong></li></ul><h2 id="调整储存信息量-记忆容量memorization-capacity）"><a href="#调整储存信息量-记忆容量memorization-capacity）" class="headerlink" title="调整储存信息量(记忆容量memorization capacity）"></a>调整储存信息量(记忆容量memorization capacity）</h2><p>在深度学习中，模型中可学习参数的<strong>个数</strong>通常被称为<strong>模型的容量（ capacity）</strong>。<br>直观上来看，参数更多的模型拥有更大的记忆容量（ memorization capacity），因此能够在训练样本和目标之间轻松地学会完美的字典式映射，但这种映射没有任何泛化能力。<br>但是 如果数据量过大, 模型无法学会这种映射，则需要学会他的*<em>压缩表示 *</em>，及减少输入的“个数”</p><p>但没有一个魔法公式能够确定最佳层数或每层的最佳大小。你必须评估一系列不<br>同的网络架构（当然是在验证集上评估，而不是在测试集上），以便为数据找到最佳的模型大小。<br>要找到合适的模型大小，<strong>一般的工作流程是开始时选择相对较少的层和参数，然后逐渐增加层<br>**<br>**的大小或增加新层，直到这种增加对验证损失的影响变得很小。</strong></p><h2 id="添加权重正则化-weight-regularization"><a href="#添加权重正则化-weight-regularization" class="headerlink" title="添加权重正则化(weight regularization)"></a>添加权重正则化(weight regularization)</h2><p>强制让模型权重只能取较小的值，从而限制模型的复杂度，这使得权重值的分布更加<strong>规则（ regular）</strong><br>**</p><ul><li>L1 正则化（ L1 regularization）：添加的成本与权重系数的绝对值［权重的 L1 范数（ norm）］<br>成正比。</li><li>L2 正则化（ L2 regularization）：添加的成本与权重系数的平方（权重的 L2 范数）成正比。<br>神经网络的 L2 正则化也叫权重衰减（ weight decay）</li></ul><pre><code class="hljs python"><span class="hljs-keyword">from</span> keras <span class="hljs-keyword">import</span> regularizersmodel = models.Sequential()model.add(layers.Dense(<span class="hljs-number">16</span>, kernel_regularizer=regularizers.l2(<span class="hljs-number">0.001</span>),activation=<span class="hljs-string">'relu'</span>, input_shape=(<span class="hljs-number">10000</span>,)))model.add(layers.Dense(<span class="hljs-number">16</span>, kernel_regularizer=regularizers.l2(<span class="hljs-number">0.001</span>),activation=<span class="hljs-string">'relu'</span>))model.add(layers.Dense(<span class="hljs-number">1</span>, activation=<span class="hljs-string">'sigmoid'</span>))</code></pre><blockquote><p>kernel_regularizer=regularizers.l2(0.001) ——该层权重矩阵的每个系数都会使网络总损失增加 0.001 * weight_<br>coefficient_value</p></blockquote><h2 id="dropout正则化"><a href="#dropout正则化" class="headerlink" title="dropout正则化"></a>dropout正则化</h2><p>dropout 是神经网络最有效也最常用的正则化方法之一<br>它是由多伦多大学的 Geoffrey Hinton和他的学生开发的。对某一层使用 dropout，就是在训<strong>练过程中随机将该层的一些输出特征舍弃（设置为 0）</strong>。</p><p>假设在训练过程中，某一层对给定输入样本的返回值应该是向量 [0.2, 0.5,1.3, 0.8, 1.1]。使用 dropout 后，这个向量会有几个随机的元素变成 0，比如 [0, 0.5,1.3, 0, 1.1]。 dropout 比率（ dropout rate）是<strong>被设为 0 的特征所占的比例</strong>，通常在 0.2~0.5范围内。测试时没有单元被舍弃，而<strong>该层的输出值需要按 dropout 比率缩小</strong>，因为这时比训练时有更多的单元被激活，需要加以平衡。</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585579849183-ee994f2a-83c6-4bd4-b100-18bcb7e6854f.png" srcset="/img/loading.gif" alt="image.png"></p><p>Hinton 说他的灵感之一来自于银行的防欺诈机制。用他自己的话来说：“我去银行办理业务。柜员不停地换人，于是我问其中一人这是为什么。他说他不知道，但他们经常换来换去。我猜想， 银行工作人员要想成<br>功欺诈银行，他们之间要互相合作才行。</p><p>这让我意识到，在每个样本中随机删除不同的部分神经元，可以阻止它们的阴谋，因此可以降低过拟合。”<br>其核心思想是<strong>在层的输出值中引入噪声，打破不显著的偶然模式</strong>（ Hinton 称之为<strong>阴谋</strong>）。</p><pre><code class="hljs python">model.add(layers.Dropout(<span class="hljs-number">0.5</span>))</code></pre><blockquote><p>一般在每个隐层结束后都加入dropout</p></blockquote><p>?</p><blockquote></blockquote>]]></content>
    
    
    <categories>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>优化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>神经网络-张量引擎</title>
    <link href="/posts/cb74317f.html"/>
    <url>/posts/cb74317f.html</url>
    
    <content type="html"><![CDATA[<p>基础步骤：</p><ul><li>加载数据集，预处理数据</li><li>搭建网络架构(models,layers)</li><li>编译(调参)</li><li>拟合，得分<h1 id="神经网络的数据表示"><a href="#神经网络的数据表示" class="headerlink" title="神经网络的数据表示"></a>神经网络的数据表示</h1><h2 id="张量"><a href="#张量" class="headerlink" title="张量"></a>张量</h2>数据存储在多维 Numpy 数组中，也叫张量（ tensor）。</li></ul><p><strong>一般来说，当前所有机器学习系统都使用张量作为基本数据结构。</strong><br>定义：<strong>张量是矩阵向任意维度的推广</strong><br>张量这一概念的核心在于，它是一个数据容器。它包含的数据几乎总是数值数据，因此它<br>是数字的容器。你可能对矩阵很熟悉，它是二维张量。［注意，<br>张量的维度（ dimension）通常叫作轴（ axis）］。</p><p>用ndim属性查看张量轴的个数。</p><blockquote><p>张量的维度是以 数据维度 为核心构造的。</p></blockquote><h3 id="0D张量"><a href="#0D张量" class="headerlink" title="0D张量"></a>0D张量</h3><p>又称标量，在 Numpy中，一个 float32 或 float64 的数字就是一个标量张量（或标量数组）。<br>eg：<br>array(12); ndim = 0;</p><h3 id="1D张量"><a href="#1D张量" class="headerlink" title="1D张量"></a>1D张量</h3><p>数字组成的数组叫作向量（ vector）或一维张量（ 1D 张量）。一维张量只有一个轴。下面是<br>一个 Numpy 向量<br>eg:<br>x = array([12, 3, 6, 14, 7]); x.ndim = 1<br><strong>是5D向量(5个元素)  1D张量</strong><br>**</p><h3 id="3-D张量"><a href="#3-D张量" class="headerlink" title="3+D张量"></a>3+D张量</h3><p>将多个矩阵组合成一个新的数组，可以得到一个 3D 张量，你可以将其直观地理解为数字<br>组成的立方体。下面是一个 Numpy 的 3D 张量。<br>eg:<img src="https://gitee.com/cher112/image/raw/master/img/1585137256173-2ae121f0-e513-4070-b7b5-bbb5d62d5bf0.png" srcset="/img/loading.gif" alt="image.png"><br>4D类似。</p><p>图解张量：</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585137499192-308c0ea3-2732-4787-8662-c68d910c8671.jpeg" srcset="/img/loading.gif" alt=""></p><h2 id="张量运算"><a href="#张量运算" class="headerlink" title="张量运算"></a>张量运算</h2><pre><code class="hljs python">keras.layers.Dense(<span class="hljs-number">512</span>, activation=<span class="hljs-string">'relu'</span>)output = relu(dot(W, input) + b)</code></pre><p>可以理解为 一个函数 输入input，操作后返回另一个2D张量<br>我们将上式拆开来看。这里有三个张量运算：输入张量和张量 W 之间的<strong>点积运算（ dot）</strong>、<br>得到的 2D 张量与向量 b 之间的<strong>加法运算（ +）</strong>、最后的 <strong>relu 运算</strong>。 relu(x) 是 max(x, 0)。<br><a href="https://zhuanlan.zhihu.com/p/46255482" target="_blank" rel="noopener">RELU详解</a></p><h3 id="逐元素运算"><a href="#逐元素运算" class="headerlink" title="逐元素运算"></a>逐元素运算</h3><p>该运算独立地应用于张量中的每个元素<br>方法：</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> npz = x + yz = np.maximum(z, <span class="hljs-number">0.</span>)//都是基于C或Fortran实现的</code></pre><h3 id="广播"><a href="#广播" class="headerlink" title="广播"></a>广播</h3><p>在Dense 层中，我们将一个 2D 张量 wx 与一个向量 b相加。如果将两个形状不同的张量相加，会发生<br>什么？—— <strong>较小的张量会被广播（ broadcast），以匹配较大张量的形状。</strong></p><p>具体步骤<br>(1) 向较小的张量添加轴（叫作广播轴），使其 ndim 与较大的张量相同。<br>(2) 将较小的张量沿着新轴重复，使其形状与较大的张量相同。</p><p>eg: maximum运算</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> npx = np.random.random((<span class="hljs-number">64</span>, <span class="hljs-number">3</span>, <span class="hljs-number">32</span>, <span class="hljs-number">10</span>))y = np.random.random((<span class="hljs-number">32</span>, <span class="hljs-number">10</span>))z = np.maximum(x, y) //输出形状为(<span class="hljs-number">64</span>,<span class="hljs-number">3</span>,<span class="hljs-number">32</span>,<span class="hljs-number">10</span>)</code></pre><h3 id="张量点积"><a href="#张量点积" class="headerlink" title="张量点积"></a>张量点积</h3><p><strong>点积运算，也叫张量积（ tensor product，不要与逐元素的乘积弄混）</strong>，是最常见也最有用的<br>张量运算。与逐元素的运算不同，它将输入张量的元素合并在一起。<br><img src="https://gitee.com/cher112/image/raw/master/img/1585138183116-a208c9ad-7798-4d6b-ae4d-65cd3776a975.png" srcset="/img/loading.gif" alt="image.png"><br>对于两个矩阵 x 和 y，当且仅当 x.shape[1] == y.shape[0] 时，你才可以对它们做点积（dot(x, y)）。<br>得到的结果是一个形状为 (x.shape[0], y.shape[1])   的矩阵，其元素为 x的行与 y 的列之间的点积。<br>图解<br><img src="https://gitee.com/cher112/image/raw/master/img/1585138236648-a13ee44b-5ca8-4134-808a-01b6ebcc89b5.png" srcset="/img/loading.gif" alt="image.png"><br>维度：(a,b) . (b,c) → (a,c)<br>高维拓展<br>(a, b, c, d) . (d,) -&gt; (a, b, c)<br>(a, b, c, d) . (d, e) -&gt; (a, b, c, e)</p><blockquote><p>不太清楚操作的意义</p></blockquote><h3 id="张量变形"><a href="#张量变形" class="headerlink" title="张量变形"></a>张量变形</h3><p><img src="https://gitee.com/cher112/image/raw/master/img/1585138445909-9c1d7847-14b8-4f42-aaa2-cd054ca05f48.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="引擎——基于梯度的优化"><a href="#引擎——基于梯度的优化" class="headerlink" title="引擎——基于梯度的优化"></a>引擎——基于梯度的优化</h2><h3 id="随机梯度下降"><a href="#随机梯度下降" class="headerlink" title="随机梯度下降"></a>随机梯度下降</h3><p>**</p><h4 id="小批量随机梯度下降——SGD"><a href="#小批量随机梯度下降——SGD" class="headerlink" title="小批量随机梯度下降——SGD"></a>小批量随机梯度下降——SGD</h4><p>基于当前在随机数据批量上的损失，一点一点地对参数进行调节。由于处理的是一个可微函数，你可以计算出它的梯度，从而有效地实现第四步。沿着梯度的反方向更新权重，损失每次都会变小一点。</p><ul><li>抽取训练样本 x 和对应目标 y 组成的数据批量。</li><li>在 x 上运行网络，得到预测值 y_pred。</li><li>计算网络在这批数据上的损失，用于衡量 y_pred 和 y 之间的距离。</li><li>计算损失相对于网络参数的梯度<strong>［一次反向传播（ backward pass）］</strong></li><li>将参数沿着梯度的反方向移动一点，比如 <strong>W -= step * gradient</strong>，从而使这批数据<br>上的损失减小一点。</li></ul><p><img src="https://gitee.com/cher112/image/raw/master/img/1585138711519-531b1154-b0b5-4f76-bfff-6c8a3418bc50.png" srcset="/img/loading.gif" alt="image.png"><br>小批量在：一次<strong>抽取一批数据</strong>，变种可以为 <strong>每次抽取一个样本</strong>；<strong>每次用全部数据</strong></p><p>注意点：为 step 因子选取合适的值是很重要的。如果取值太小，则沿着<br>曲线的下降需要很多次迭代，而且可能会陷入<strong>局部极小点</strong>。如果取值太大，则更新权重值之后<br>可能会出现在曲线上完全随机的位置。</p><p>基于注意点的变种：</p><h4 id="基于-优化器的梯度下降"><a href="#基于-优化器的梯度下降" class="headerlink" title="基于 优化器的梯度下降"></a>基于 优化器的梯度下降</h4><p>引入概念: 动量<br>关注** 收敛速度<strong>和</strong>局部极小点**<br>更新参数 w 不仅要考虑当前的梯度值，还要考虑上一次的参数更新</p><p>eg:</p><pre><code class="hljs python">past_velocity = <span class="hljs-number">0.</span>momentum = <span class="hljs-number">0.1</span><span class="hljs-keyword">while</span> loss &gt; <span class="hljs-number">0.01</span>:w, loss, gradient = get_current_parameters()velocity = past_velocity * momentum - learning_rate * gradientw = w + momentum * velocity - learning_rate * gradientpast_velocity = velocityupdate_parameter(w)</code></pre><p>Q:不太理解V的概念，学到优化器再补充</p>]]></content>
    
    
    <categories>
      
      <category>神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tensorflow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>神经网络——基于 relu 激活Dense 层堆叠</title>
    <link href="/posts/c461b821.html"/>
    <url>/posts/c461b821.html</url>
    
    <content type="html"><![CDATA[<h1 id="神经网络——基于-relu-激活Dense-层堆叠"><a href="#神经网络——基于-relu-激活Dense-层堆叠" class="headerlink" title="神经网络——基于 relu 激活Dense 层堆叠"></a>神经网络——基于 relu 激活Dense 层堆叠</h1><pre><code>参数 num_words=10000 的意思是仅保留训练数据中前 10 000 个最常出现的单词。低频单</code></pre><p>词将被舍弃。这样得到的向量数据不会太大，便于处理。</p><h1 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h1><h2 id="解码："><a href="#解码：" class="headerlink" title="解码："></a>解码：</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1585139525161-faf25c63-3e19-4eb4-89a4-19d2203ff3bb.png" srcset="/img/loading.gif" alt="image.png"><br>/？是什么意思….</p><h2 id="将列表转换为张量"><a href="#将列表转换为张量" class="headerlink" title="将列表转换为张量"></a>将列表转换为张量</h2><p>转化为2进制矩阵，(<strong>one-hot 编码)</strong><br>举个例子，序列 [3, 5] 将会<br>被转换为 10 000 维向量，只有索引为 3 和 5 的元素是 1，其余元素都是 0。然后网络第<br>一层可以用 Dense 层，它能够处理浮点数向量数据。</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585139618830-26919f62-6822-4e7d-95f2-877b543a9efc.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="构建网络"><a href="#构建网络" class="headerlink" title="构建网络"></a>构建网络</h1><p>输入数据是向量，而标签是标量（ 1 和 0），这是你会遇到的最简单的情况。有一类网络在这种问题上表现很好，就是<strong>带有 relu 激活的全连接层（ Dense）的简单堆叠，比如Dense(16, activation=’relu’)。</strong></p><p>其中：6 个隐藏单元对应的权重矩阵 W 的形状为 (input_dimension, 16)<br>w.x相当于投影到 16维的向量(表示空间)  再加上b 应用RELU；</p><p>对于这种 Dense 层的堆叠，你需要确定以下两个关键架构：</p><ul><li>网络有多少层；</li><li>每层有多少个隐藏单元。</li></ul><p>现在暂时规定 unit = 16， layer3 为输出标量(D = 1)</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585139826721-7d6e7f83-d50d-4a3a-a2ad-e5d03fc8830d.png" srcset="/img/loading.gif" alt="image.png"><br>其中，第三层因为输出 概率，可以把RELU换为sigmoid激活</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585139872928-2611e385-e7a3-4bab-b82e-defb446e2170.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="损失函数和优化器选择"><a href="#损失函数和优化器选择" class="headerlink" title="损失函数和优化器选择"></a>损失函数和优化器选择</h2><p>由于你面对的是一个二分类问题，网络输出是一个概率值（网络最后一层使用 sigmoid 激活函数，仅包含一个单元），那么最好使用 <strong>binary_crossentropy（二元交叉熵）损失</strong>。这并不是唯一可行的选择，比如你还可以使用 mean_squared_error（均方误差）。但对于<strong>输出概率值的模型， 交叉熵（ crossentropy）往往是最好<br>的选择。</strong>交叉熵是来自于信息论领域的概念，用于衡量概率分布之间的距离，在这个例子中就<br>是真实分布与预测值之间的距离。<br>下面的步骤是用 rmsprop 优化器和 binary_crossentropy 损失函数来配置模型。注意，<br>我们还在训练过程中监控精度。<br>Q：监控精度？ metrics参数学习</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585139995385-61696da1-00c6-4fbc-8bf8-7b1d362fbd6e.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="训练模型"><a href="#训练模型" class="headerlink" title="训练模型"></a>训练模型</h1><p><img src="https://gitee.com/cher112/image/raw/master/img/1585140017671-3ad3cee0-cc4c-48eb-a816-91f5f3df2eeb.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1585140058098-eea8a4cb-023b-4fd8-864f-4e801faa8217.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="损失和精度检验"><a href="#损失和精度检验" class="headerlink" title="损失和精度检验"></a>损失和精度检验</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1585140095015-dd2f09c0-edf5-4efc-bd2c-9e486f501843.png" srcset="/img/loading.gif" alt="image.png"></p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585140116706-d05e3654-3a47-44d7-9830-b0e1d5160245.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1585140128486-708da453-3c8b-4c31-bcd2-8deb4c856a7c.png" srcset="/img/loading.gif" alt="image.png"></p><p><strong>明显发现，出现过拟合现象</strong><br>**<br>可以提前设置停止训练(减少迭代)，也有其他方法(小记和后续会讲)<br>代码中将训练轮数改为 4，效果更好。</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585140225040-79e1b9fc-7401-41ed-8d85-48bfdc99a882.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="交叉熵理论"><a href="#交叉熵理论" class="headerlink" title="交叉熵理论"></a>交叉熵理论</h1><p>交叉熵与熵相对，如同协方差与方差。</p><p>熵考察的是单个的信息（分布）的期望，”信息熵” (information entropy)<br>是<strong>度量样本集合纯度</strong>最常用的一种指标. 假定当前样本集合 D 中第 k 类样本所占的比例为 Pk (k = 1,2,. . . , IYI)，则 D 的信息熵定义为 ：<br><img src="https://gitee.com/cher112/image/raw/master/img/1585206725136-70b9bb42-3513-46dd-abf8-0f1c48a15ddd.png" srcset="/img/loading.gif" alt="image.png"><br>交叉熵考察的是两个的信息（分布）的期望(两个分布之间的”距离”)：<br><img src="https://gitee.com/cher112/image/raw/master/img/1585206744973-aac6ec69-ff36-4a03-882f-f4e550efa4e0.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="交叉熵代价函数"><a href="#交叉熵代价函数" class="headerlink" title="交叉熵代价函数"></a>交叉熵代价函数</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1585207010581-ffeb4530-6bcc-4c75-978e-cda3ad73eacd.png" srcset="/img/loading.gif" alt="image.png"><br>为神经网络引入交叉熵代价函数，是为了弥补 sigmoid 型函数的导数形式易发生<strong>饱和（saturate，梯度更新的较慢）的缺陷(x越大曲线越平缓)。</strong><br><a href="https://zhuanlan.zhihu.com/p/70804197" target="_blank" rel="noopener">原因</a></p><p><img src="https://gitee.com/cher112/image/raw/master/img/1585208647485-db7f62c3-6998-478d-80ba-c856ad34362b.jpeg" srcset="/img/loading.gif" alt=""></p><p>softmax在下一节会讲到</p>]]></content>
    
    
    <categories>
      
      <category>神经网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA笔记 第五章 继承</title>
    <link href="/posts/a49b2de.html"/>
    <url>/posts/a49b2de.html</url>
    
    <content type="html"><![CDATA[<h1 id="第五章-继承"><a href="#第五章-继承" class="headerlink" title="第五章 继承"></a>第五章 继承</h1><h1 id="类-超类-子类"><a href="#类-超类-子类" class="headerlink" title="类 超类 子类"></a>类 超类 子类</h1><blockquote><p>对于第四章的 Employee类，经理的办公，工资形式不同，可以创建个新类 Manager，但可以重用Employee中的部分代码，将所有域保留下来。</p></blockquote><h2 id="子类"><a href="#子类" class="headerlink" title="子类"></a>子类</h2><p>由继承 E类来定义Manager 类的格式，关键字 extends 表<strong>继承，</strong>构造的新类派生于一个已存在的类。</p><h3 id="定义子类"><a href="#定义子类" class="headerlink" title="定义子类"></a>定义子类</h3><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Employee</span></span><span class="hljs-class"></span>&#123;方法&#125;</code></pre><p>其中：<br>已存在的类称为<strong>超类 ( superclass)、 基类（base class) 或父类（parent class)</strong>; 新类称为<strong>子类（subclass)</strong>、 <strong>派生类 (derivedclass) 或孩子类（child class)。 父子类并没有优劣性。</strong><br>**</p><pre><code class="hljs java">/构造一个新方法 setBonus，只给经理加奖金<span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> bonus;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setBonus</span><span class="hljs-params">(<span class="hljs-keyword">double</span> bonus)</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">this</span>.bonus = bonus    &#125;boss.setBonus(<span class="hljs-number">500</span>);效果：只能给Manager加奖金，给Employee加会报错。</code></pre><p>tip：Manager类就包括了 Employee的所有实例域和新实例域bonus。<br><strong>（但是调用超类的私有域，要依照超类的方法或者基于此新建子类方法）——见覆盖方法</strong></p><p>一般思路，将通用功能放到超类，特殊用途放到子类。</p><h3 id="覆盖方法"><a href="#覆盖方法" class="headerlink" title="覆盖方法"></a>覆盖方法</h3><p>修改/覆盖(override) 超类原有的方法</p><pre><code class="hljs java">思路一：直接调用E类实例域 <span class="hljs-comment">//错误</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getSalary</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">return</span> salary + bonus; <span class="hljs-comment">// won't work </span>&#125;</code></pre><p>原因：<strong>对于超类的私有域，只有超类的方法可以访问，</strong>子类的<strong>方法</strong>无法访问<br>但子类可以通过借助共有接口(超类方法) 来间接访问</p><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getSalary</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">double</span> baseSalary = getSalaryO；<span class="hljs-comment">// still won't work</span>    <span class="hljs-keyword">return</span> baseSalary + bonus;&#125;</code></pre><p>原因：程序认为你调用的是 M类的getSalary 而不是 超类的，就会无限调用自己。</p><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getSalary</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">double</span> baseSalary = <span class="hljs-keyword">super</span>.getSalary();<span class="hljs-comment">//work</span>    <span class="hljs-keyword">return</span> baseSalary + bonus; &#125; 添加超类方法的标识 关键字 <span class="hljs-keyword">super</span></code></pre><h3 id="子类构造器"><a href="#子类构造器" class="headerlink" title="子类构造器"></a>子类构造器</h3><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Manager</span><span class="hljs-params">(String name, <span class="hljs-keyword">double</span> salary, <span class="hljs-keyword">int</span> year, <span class="hljs-keyword">int</span> month, <span class="hljs-keyword">int</span> day)</span> </span><span class="hljs-function"></span>&#123;     <span class="hljs-keyword">super</span>(name, salary, year, month, day);     bonus = <span class="hljs-number">0</span>;&#125;</code></pre><p>super关键词：*<em>调用超类 含有name—day 参数的构造器 *</em>的简写形式<br>                    如果没有显式调用，会默认用超类的。</p><p>类似this关键字～</p><h3 id="继承层次"><a href="#继承层次" class="headerlink" title="继承层次"></a>继承层次</h3><p>继承并不仅限于一个层次。 例如， 可以由 Manager 类派生 Executive 类。由一个公共超类派生出来的所有类的集合被称为<strong>继承层次（inheritance hierarchy)</strong>, 如图 5-1 所示。在继承 层次中， 从某个特定的类到其祖先的路径被称为该类的继承链 (inheritance chain)0<br><img src="https://gitee.com/cher112/image/raw/master/img/1585035342026-f1aa6bbd-6743-44e0-8e1d-fba7d9ab0f6e.png" srcset="/img/loading.gif" alt="image.png"></p><h3 id="阻止继承"><a href="#阻止继承" class="headerlink" title="阻止继承"></a>阻止继承</h3><p>有时候，可能希望阻止人们利用某个类定义子类。不允许扩展的类被称为 final 类。</p><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> String getNameQ</code></pre><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span></span><span class="hljs-class"></span>&#123;<span class="hljs-keyword">private</span> String name;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">(St ring name)</span></span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">this</span>.name = name;&#125;&#125;</code></pre><p>表述为一个抽象的大类<br><img src="https://gitee.com/cher112/image/raw/master/img/1585056601086-c45f45f2-252e-4356-a78e-ff9eb22eb006.png" srcset="/img/loading.gif" alt="image.png"><br>Employee和student在逻辑上都是通过抽象类拓展出来的。</p><p>还是不太理解抽象方法(好像在接口中会阐述)</p><h1 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h1><p>object是所有java类的始祖，每个类都是由他扩展出来的</p><pre><code class="hljs java">Object obj =  <span class="hljs-keyword">new</span> Employee(xxx);#object只是作为各种值的 通用持有者。 要进行操作还需要类型转换<span class="hljs-comment">//这个是向上转型（自动类型转换）:小——&gt;大</span>Employee = (Employee) obj<span class="hljs-comment">//向下转型，以便进行更改器等具体操作</span></code></pre><h2 id="equals方法"><a href="#equals方法" class="headerlink" title="equals方法"></a>equals方法</h2><p>Object 类中的 equals 方法用于检测一个对象是否等于另外一个对象。在 Object 类中，这<br>个方法将判断两个对象是否具有相同的引用。引用相同，它们是相同</p><pre><code class="hljs java"><span class="hljs-keyword">return</span> Objects.equals(name, other.name)        <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Manager</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Employee</span></span><span class="hljs-class"><span class="hljs-title">public</span> <span class="hljs-title">boolean</span> <span class="hljs-title">equals</span>(<span class="hljs-title">Object</span> <span class="hljs-title">otherObject</span>)</span><span class="hljs-class"></span>&#123;<span class="hljs-keyword">if</span> (!<span class="hljs-function"><span class="hljs-keyword">super</span> <span class="hljs-title">equals</span><span class="hljs-params">(otherObject)</span>) return <span class="hljs-keyword">false</span></span>;<span class="hljs-comment">// super.equals checked that this and otherObject belong to the same class</span>Manager other = (Manager) otherObject;<span class="hljs-keyword">return</span> bonus == other.bonus;&#125;&#125;<span class="hljs-comment">//如果超类都不相同，就不需要比较子类，反之则需要再比较子类的实例域(manager比员工多了个bonus实例域)</span></code></pre><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span></span><span class="hljs-class"></span>&#123;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Employee other)</span></span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">return</span> other != <span class="hljs-keyword">null</span>&amp;&amp; getClassO == other.getClass0&amp;&amp; Objects.equals(name, other. name)&amp;&amp; salary == other.salary&amp;&amp; Objects.equals(hireDay ,other.hireDay) ;&#125;&#125;该方法错误原因：想覆盖一个新的equals方法(基于objects的)，但是并没有覆盖(格式不对)。应该改为<span class="hljs-function">Override <span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object other)</span>；</span></code></pre><pre><code class="hljs java">规范式写覆盖equals！！！<span class="hljs-meta">@Override</span>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object otherObject)</span></span><span class="hljs-function">   </span>&#123;      <span class="hljs-comment">// 如果引用的地址一样，肯定相等</span>      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span> == otherObject) <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;      <span class="hljs-comment">//没地址肯定不相等</span>      <span class="hljs-keyword">if</span> (otherObject == <span class="hljs-keyword">null</span>) <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;      <span class="hljs-comment">// 类名不一样，肯定错（既然已经区分不同类了，每个类一定有其不同的特质）</span>      <span class="hljs-keyword">if</span> (getClass() != otherObject.getClass()) <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;      <span class="hljs-comment">// now we know otherObject is a non-null Employee</span>      <span class="hljs-keyword">var</span> other = (Employee) otherObject;      <span class="hljs-comment">// test whether the fields have identical values</span>      <span class="hljs-keyword">return</span> Objects.equals(name, other.name)          &amp;&amp; 基本变量 == other.基本变量 &amp;&amp; Objects.equals(对象, 对象).....;   &#125;</code></pre><ul><li>== 对于引用类型，比较的是两个对象 引用地址的值；对于基本类型，比较的是值</li><li>equals(Object x) 比较的是引用的地址值</li><li>getClass()返回一个对象所属的类 不判断继承关系</li><li>instanceof比较一个对象是否是该类的实例</li></ul><h2 id="hashcode方法"><a href="#hashcode方法" class="headerlink" title="hashcode方法"></a>hashcode方法</h2><p>散列码（ hash code ) 是由对象导出的一个整型值。 散列码是没有规律的。如果 x 和 y 是<br>两个不同的对象， x.hashCode( ) 与 y.hashCode( ) 基本上不会相同。 </p><p>由于 hashCode 方法定义在 Object 类中， 因此每个对象都有一个默认的散列码，其<strong>值为对象的存储地址</strong>。</p><p>Equals 与 hashCode 的定义必须一致：如果 x.equals(y) 返回 true, 那么 x.hashCode( ) 就必须与 y.hashCode( ) 具有相同的值。 例如， 如果用定义的 Employee.equals 比较雇员的 ID， 那<br>么 hashCode 方法就需要散列 ID，而不是雇员的姓名或存储地址。</p><h2 id="tostring方法"><a href="#tostring方法" class="headerlink" title="tostring方法"></a>tostring方法</h2><p>在 Object 中还有一个重要的方法， 就是 toString 方法， 它用于返回表示对象值的字符<br>串。<br>绝大多数（但不是全部）的 toString方法都遵循这样的格式：类的名字，随后是一对方括<br>号括起来的域值。<br>eg:boss.toString(): equals.Manager[name=Carl Cracker,salary=80000.0,hireDay=1987-12-15][bonus=5000.0]</p><h1 id="泛型数组列表"><a href="#泛型数组列表" class="headerlink" title="泛型数组列表"></a>泛型数组列表</h1><p>一般java的数组是静态的，一旦确定大小就很难更改。在 Java 中， 解决这个问题最简单的方法是使用 Java 中另外一个被称为** ArrayList 的类<strong>。它使用起来有点像数组，但在添加或删除元素时， 具有</strong>自动调节数组容量**的<br>功能，而不需要为此编写任何代码。</p><p>下面声明和构造一个保存 *<em>Employee *</em>对象的数组列表：</p><p>ArrayList<Employee> staff = new ArrayList<Eniployee>0;</p><p>或 ArrayList<Employee> staff = new ArrayListoQ&lt;&gt;()；</p><p>菱形语法类似 var，自动检查这个变量是什么泛型类型填在&lt;&gt;中。<strong>(尖括号的类型参数不能是基本类型)</strong><br>常见方法<br><img src="https://gitee.com/cher112/image/raw/master/img/1588765552792-08f2e2d2-9a7c-494f-8be0-eda49fdab077.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="对象包装器与自动装箱"><a href="#对象包装器与自动装箱" class="headerlink" title="对象包装器与自动装箱"></a>对象包装器与自动装箱</h1><p>有时， 需要将 int 这样的基本类型转换为对象。 <strong>所有的基本类型都冇一个与之对应的类。</strong><br>这些类称为包装器 （ <strong>wrapper **)<br>这些对象包装器类<br>拥有很明显的名字：</strong>Integer<strong>、</strong>Long<strong>、</strong>Float<strong>、</strong>Double<strong>、</strong>Short<strong>、</strong>Byte<strong>、</strong>Character <strong>、</strong>Void <strong>和 **Boolean。 且为final类，无法定义子类</strong><br>**</p><h3 id="自动装箱-autoboxing-和自动拆箱-autowrapping"><a href="#自动装箱-autoboxing-和自动拆箱-autowrapping" class="headerlink" title="自动装箱(autoboxing)和自动拆箱(autowrapping)"></a>自动装箱(autoboxing)和自动拆箱(autowrapping)</h3><blockquote><p>细节内容在第八章泛型会讲到，现在先忽视罢</p></blockquote><p>如果想搭一个int的泛型数组，因为&lt;&gt;的限制，可以用Integer类来做<br>ArrayList<Integer> list = new ArrayList&lt;&gt;()；</p><p>且Integer支持自动装箱和拆包<br>装箱： list.add(3)；编译器自动认识为 list.add (Integer.value0f(3));</p><p>拆包：int n = list.get(i); → int n = list.get(i).intValue();</p><p>也支持在算术表达中进行这两种操作：<br>IInteger n = 3; n++;</p><p>补充：如果在一个条件表达式中混合使用 Integer 和 Double 类型，** Integer 值就会拆箱，<br>提升为 double基本类型**, 再装箱为 Double:</p><p>Integer n = 1;</p><p>Double<br>x = 2.0;</p><p>System.out.println(true ? n : x); // Prints 1.0</p><h1 id="参数数量可变的方法"><a href="#参数数量可变的方法" class="headerlink" title="参数数量可变的方法"></a>参数数量可变的方法</h1><p>public static double max (double… values)<br>{</p><p>double largest = Double.NECATIVEJNFINITY;</p><p>for (double v : values) if (v &gt; largest) largest = v;</p><p>return largest;<br>}</p><p>可以像下面这样调用这个方法：</p><p>double m = max(3.1, 40.4, -5);</p><p>编译器将 new double[ ] {3.1, 40.4,-5} 传递给 max 方法。</p><h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><p>能够分析类能力的程序称为反射（reflective )。反射机制的功能极其强大，在下面可以看</p><p>到， 反射机制可以用来：<br>•在运行时分析类的能力。<br>•在运行时查看对象， 例如， 编写一个 toString 方法供所有类使用。<br>•实现通用的数组操作代码。<br>•利用 Method 对象， 这个对象很像中的函数指针</p>]]></content>
    
    
    
    <tags>
      
      <tag>JAVA</tag>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《激荡的三十年：中国企业 1978—2008》(上) 读书摘要</title>
    <link href="/posts/7ee444a5.html"/>
    <url>/posts/7ee444a5.html</url>
    
    <content type="html"><![CDATA[<p>激荡三十年：中国企业 1978—2008（十年典藏版·上）</p><p>吴晓波</p><p>345个想法</p><h1 id="◆-题记"><a href="#◆-题记" class="headerlink" title="◆ 题记"></a>◆ 题记</h1><blockquote><blockquote><p>当这个时代到来的时候，锐不可当。万物肆意生长，尘埃与曙光升腾，江河汇聚成川，无名山丘崛起为峰，天地一时，无比开阔。</p></blockquote></blockquote><p>二</p><blockquote><blockquote><p>他们出身草莽，不无野蛮，性情漂移，坚忍而勇于博取。他们的浅薄使得他们处理任何商业问题都能够用最简洁的办法直指核心，他们的冷酷使得他们能够拨去一切道德的含情脉脉而回到利益关系的基本面，他们的不畏天命使得他们能够百无禁忌地去冲破一切的规则与准绳，他们的贪婪使得他们敢于采用一切的手法和编造最美丽的谎言。</p></blockquote></blockquote><blockquote><blockquote><p>我很庆幸能生活在这个充满了变化和激情的大时代，</p></blockquote></blockquote><p>◆ 三</p><blockquote><blockquote><p>中国的商业变革是一场由国家亲自下场参与的公司博弈，在规律上存在着它的必然性与先天的不公平性。也许只有进行了全景式的解读后，我们才可能透过奇迹般的光芒，发现历史深处存在着的那些迷雾</p></blockquote></blockquote><blockquote><blockquote><p>任何被视为奇迹的事物，往往都很难延续，因为它来自一个超越了常规的历程，身处其中的人们，因此而获得巨大利益的人们，每每不可能摆脱那些让他们终生难忘的际遇，他们相信那就是命运，他们总希望每次都能红运高照，每次都能侥幸胜出，最后，所有的光荣往往都枯萎在自己的光环中。</p></blockquote></blockquote><h1 id="◆-1978-中国，回来了"><a href="#◆-1978-中国，回来了" class="headerlink" title="◆ 1978 中国，回来了"></a>◆ 1978 中国，回来了</h1><blockquote><blockquote><p>它与“以经济建设为中心”以及“稳定压倒一切”等政治格言一脉相通，分别从方法论、战略目标和成长边界三个方面进行了清晰的表述，从而构成了中国的改革文化和三大思想基石。</p></blockquote></blockquote><blockquote><blockquote><p>说社会的进步是由于历史某个时期的社会思想条件自然而然发生的，这简直是无稽之谈。它实际只是在这个社会已经下定决心进行实验之后才一蹴而就的。</p></blockquote></blockquote><blockquote><blockquote><p>。1978年，除了主要领导人频频出访之外，中国政府还做了一些动作，它们在当时似乎并没有引发联想，然而在后来的研究者眼中却绝非巧合。这一年的7月3日，中国政府停止对越南的援助，13日又宣布停止对阿尔巴尼亚的一切技术和经济援助，10月23日，《中日和平友好条约》正式生效，12月16日，中美发布建交联合公报</p></blockquote></blockquote><blockquote><blockquote><p>其实却不难看出内在的某种抉择：摆脱意识形态的纠缠，以经济发展为主轴，悄悄向发达国家靠拢的发展主导型战略已经开始发酵。</p></blockquote></blockquote><blockquote><blockquote><p>荣毅仁鏖战内地。他提笔向邓小平建议：“从国外吸引资金，引进先进技术，似有必要设立国际信托投资公司，集中统一吸收国外投资，按照国家计划、投资人意愿，投入国家建设。”在荣毅仁的提案中，即将创办的公司名为中国国际信托投资公司，简称中信（CITIC</p></blockquote></blockquote><blockquote><blockquote><p>“大锅饭”的弊端毕现无疑，农业效率的低下到了让农民无法生存的地步。小岗村是远近闻名的“三靠村”——“吃粮靠返销，用钱靠救济，生产靠贷款”</p></blockquote></blockquote><blockquote><blockquote><p>早在1969年，他就抽调20人在村里偷偷办起了小五金厂。“当时可千万不能让外面知道，正是割资本主义尾巴的时候呢。”后来顶替吴仁宝担任华西村党委书记的他的第四个儿子吴协恩回忆说，“田里红旗飘飘、喇叭声声，检查的同志走了，我们转身也进了工厂。为什么冒险搞工业？因为种田实在挣不到钱。当时全村人拼死拼活，农业总产值24万元，而只用20个人办的小五金厂，三年后就达到了24万元的产值。”</p></blockquote></blockquote><blockquote><blockquote><p>的鲁冠球在很早就尝试着管理工厂的方法。在1969年建厂之际，他就实行了基本工资制，工人工资额固定，按月出勤结算发放。1971年，他提出了计件（时）工资制，根据工人的劳动量来分配他们的收入。</p></blockquote></blockquote><blockquote><blockquote><p>灰白的太阳终于费力地钻出薄雾，把它那毫无热气的光线投射到这个巨大城市的每一个角落——拥挤的楼房、狭窄的棋盘式街道和蠕动的密集人群中。</p></blockquote></blockquote><blockquote><blockquote><p>从1979年起，由中粮公司采用寄售的方式先行销售可口可乐饮料。合同是在外贸部大院（与北京饭店斜斜相望，仅隔着一条长安街）签订的。外贸部部长李强在批复中加了一条：“仅限于在涉外饭店、旅游商店出售。”尽管合作的姿态是审慎和小心翼翼的，但是可口可乐总部显然是非常满意的，因为几乎所有人都知道，水闸一经打开，就再也关不上了。</p></blockquote></blockquote><blockquote><blockquote><p>，国务院主管经济的副总理谷牧率中国代表团出访欧洲各国，所到之处，官员和商人都表现了愿意同中国发展经济合作的强烈意向。在和法国总统德斯坦会谈时，法国驻华大使对谷牧说：“听说你们要搞120个大项目，我们法国很愿意有所贡献，给我们10个行不行？”在联邦德国，巴符州州长说可以贷款50亿美元给中国，马上可以签字；北威州则表示100亿美元也问题不大。这些资讯都刺激着中国领导人对引进持积极态度，因而形成了加快扩大对外引进的思想。</p></blockquote></blockquote><blockquote><blockquote><p>合资经营就是把我们的钱包放在一起，合资共同办个企业，要赚一起赚，要赔一起赔，是一种互利的合作方式。若要再说得通俗一点，合资经营就好比‘结婚’，建立一个共同的‘家庭’。”听了这番介绍后，李岚清感到新鲜有趣，会后，李岚清当即将谈判做成简报，上报给国务院和中央政治局，邓小平批示：合资经营也可以谈。</p></blockquote></blockquote><blockquote><blockquote><p>有一位德国《明镜》周刊的记者，他在考察了手工作坊一般落后的中国厂房后，略带嘲讽地说：“大众汽车将在一个孤岛上生产，并且这里几乎没有任何配件供应商。中国车间里的葫芦吊、长板凳、橡皮榔头，都是我爷爷辈的生产方式。”</p></blockquote></blockquote><blockquote><blockquote><p>这种计划经济对效率的排斥和漠视却已经是一件不需要来论证的事情了。</p></blockquote></blockquote><blockquote><blockquote><p>20年间中国城镇居民人均收入增长不到4元，农民则不到2.6元，全社会的物资全面紧缺，企业活力荡然无存。</p></blockquote></blockquote><h1 id="◆-1979-新的转机和闪闪的星斗"><a href="#◆-1979-新的转机和闪闪的星斗" class="headerlink" title="◆ 1979 新的转机和闪闪的星斗"></a>◆ 1979 新的转机和闪闪的星斗</h1><blockquote><blockquote><p>中国的现代化不管走哪一条路，都会遇上一个极大的障碍。以其他国家的标准来衡量，整个中国也找不到几个45岁以下，称得上是受过良好教育的人。结果就出现了一群散漫的劳动人口和无知的官员。在这方面所造成的障碍，会较一般人所说的外资外汇问题，远为严重。”</p></blockquote></blockquote><blockquote><blockquote><p>一向严谨而不事声张的《经济学人》却已经在思考更深层面的事情了，它提出一个很有前瞻性的问题：中国的崛起会不会对现有的国际市场构成致命的冲击？</p></blockquote></blockquote><blockquote><blockquote><p>中国的现代化只跟在别人后面走是不行的。</p></blockquote></blockquote><blockquote><blockquote><p>“现在我国经济管理体制的一个严重缺点是权力过于集中，应该有领导地大胆下放，让地方和工农业企业在国家统一计划的指导下有更多的经营管理自主权。”</p></blockquote></blockquote><blockquote><blockquote><p>这里便直接触及国有企业管理者与资产所有者的权力调整</p></blockquote></blockquote><blockquote><blockquote><p>承包制，“包死基数，确保上缴，超包全留，歉收自负”，这16个字堂堂正正，掷地有声，日后成为国有企业改革的标准阐述。在1979年前后，它的先进性毋庸置疑，但是它所无法解决的难题却也是那么明显，那就在最后四个字——“歉收自负”，当企业真正出现“歉收”的时候，它的体制和功能是否真的能够“自负”？这个问题在商品短缺的年代不会出现，它如同一处险恶的伏笔埋在国企改革的前路上，不动声色却无比致命。</p></blockquote></blockquote><blockquote><blockquote><p>首钢的上缴利润承包基数一开始为5%，后来上升到6.2%，再又上升到7%。双方矛盾在1986年终于激化，这年12月，北京市财政局下达通知，要求首钢补缴1.0899亿元的利润。周冠五拒不执行，财政局于是通过银行强行扣掉首钢账上的2500万元资金。此时已是全国改革人物的周冠五当即给国务院和邓小平写信，信内称：“如果让我们缴出1亿元，正在施工的技术改造工程、住宅和福利设施工程只能立即停下来，职工按原包干和挂钩办法已拿到的工资奖金一部分要退回来，而且12月份职工的工资也无法支付。”</p></blockquote></blockquote><blockquote><blockquote><p>重庆钢铁厂的厂长王宇光也有同样的经历：1979年前后，产量很快上去，新生产出来的钢材没两个月就堆满了工厂的仓库，可是国家物资储备部门下给重钢的收购指标已经用光了，而另一方面，想要钢材但没有计划指标的单位却在重钢门口排成了长队。一个厂门内外，里面因为胀死要停产，外面大声要货却不能给，厂长王宇光一咬牙，开门出货，重钢的钢材顿时一泄而出。计划部门很快察觉到重钢的“违规行为”，1980年，国家计委、国家经委联合下文，认定“钢材自销违反国家有关规定，</p></blockquote></blockquote><blockquote><blockquote><p>被下放了权力的国有企业与管制了它们多年的政府之间的博弈，然后是这些企业背靠政府的政策支撑与“意外”兴起的民营公司的博弈，再到后来，跨国公司也进来“搅局”、“抢食”，于是，利益的格局变得越来越错综复杂。</p></blockquote></blockquote><blockquote><blockquote><p>清楚界定的产权是市场交易的前提。</p></blockquote></blockquote><blockquote><blockquote><p>《关于充分利用香港招商局问题的请示》，是1978年10月9日以交通部的名义上报中共中央、国务院的，报告第一次提出了“适应国际市场的特点，走出门去搞调查，做买卖”的</p></blockquote></blockquote><blockquote><blockquote><p>蛇口工业区仅方圆2.14平方公里，袁庚却在这个螺蛳壳里做出了一个大道场。工业区一经批复，他的第一项工程就是移山填海兴建码头，招商局花了近一年时间建成600米的码头泊位，可停靠5000吨以下的货船。这样，蛇口顿时具备起港运的功能，工业区与香港互通航班客轮，解决了货运交通的瓶颈。</p></blockquote></blockquote><blockquote><blockquote><p>在1979年的中国，蛇口和袁庚的出现，让铁幕般的计划经济被捅开了一个再也补不回去的大洞。在蛇口开发区筹建半年后，深圳特区开始建立。</p></blockquote></blockquote><blockquote><blockquote><p>10年前，由毛泽东发动的知青下乡运动风起云涌，中学生走出校门，打起背包到农村接受贫下中农的再教育，而今还是这些被称作“知青”的人群，经过整整10年上山下乡运动的洗礼，如同一群从梦中突然醒来的游走者，集体地逃回到城市来。</p></blockquote></blockquote><blockquote><blockquote><p>中国经济民营化的必然性，在此刻毕露无遗，顺之则存，逆之则亡。</p></blockquote></blockquote><blockquote><blockquote><p>在当时正统的政治经济学话语体系中，年广久的剥削性质是毋庸置疑的。马克思在《资本论》第一卷第三篇第九章《剩余价值率和剩余价值量》中，曾经明确地划分了“小业主”与“资本家”的界线，按他的计算，在当时（19世纪中叶），雇工8人以下，自己也和工人一样直接参加生产过程的，是“介于资本家和工人之间的中间人物，成了小业主”，而超过8人，则开始“占有工人的剩余价值”，是为资本家。在几乎所有的社会主义理论中，“七下八上”是一条铁定的界线。如今，年广久的瓜子工厂居然雇工12人，其性质几乎不言自明。</p></blockquote></blockquote><blockquote><blockquote><p>建立在个人开明基础上的威权体制，如同“沙上之高楼”，一旦那个威权人物退位或影响力消退，它所具备的进步性便自然而然地消失了。</p></blockquote></blockquote><h1 id="◆-1980-告别浪漫的年代"><a href="#◆-1980-告别浪漫的年代" class="headerlink" title="◆ 1980 告别浪漫的年代"></a>◆ 1980 告别浪漫的年代</h1><blockquote><blockquote><p>深圳的第一块土地出租协议，便签订于1980年的1月1日。第一个吃螃蟹的香港商人名叫刘天竹，跟他谈生意的就是那个在《列宁全集》中找到了恩格斯原话的骆锦星。据骆日后回忆，当时的谈判对话是这样的，刘说：“只要划出一块合适的地皮就行。由我组织设计，出钱盖房，在香港出售，赚得的钱中方得大头，我得小头。”骆说：“东湖公园附近，可以划出一块地方来，如何？”刘说：“那好，所得利润，你拿七，我拿三。”骆摇摇头：“你拿得太多了。”刘笑道：“你拿八，我拿二，如何？”骆说：“我拿八点五，余下的是你的！”刘说：“我们初次打交道，往后要做的事还很多，这次就依你的！”这样的对话果然已经是在谈生意了。</p></blockquote></blockquote><blockquote><blockquote><p>一个国家或一个人，最大的苦闷是，苦闷被压抑在心中而不得宣泄。在1980年，随着体制的松动和各种新事物的涌现，人们开始表达自己的情感，国家也在某种程度上默许这样的举动。</p></blockquote></blockquote><blockquote><blockquote><p>鲁冠球的胜利似乎预示着一种可能性，那就是体制外的民营企业有机会凭着机制的灵活和技术上的优势在某些冷门的行业获得成功。</p></blockquote></blockquote><blockquote><blockquote><p>就在珠江三角洲和温州等地的“地下工厂”如杂草般纷生的时候，在中心城市或次中心城市，具有个体色彩的经济活动还显得那么的小心翼翼和寥若晨星。长期的计划经济，让人们已经习惯在一种格式化的、有纪律和有组织的环境中生活，一旦要他脱离那种惯性，往往需要极其巨大的外力或勇气。</p></blockquote></blockquote><blockquote><blockquote><p>这也就是为什么在改革开放的初期，那些从事个体商业活动的人绝大多数来自社会底层，他们是失业者、返城人员、有刑事前科的人和低文化程度者，这些人被排挤在“温暖”的、有“保障”的体制之外，在无可奈何之际，被迫走上了经商和创业的道路。</p></blockquote></blockquote><blockquote><blockquote><p>科技人员走出研究院所，遵循科技转化规律、市场经济规律，不要国家拨款，不占国家编制，自筹资金、自负盈亏、自主经营、依法自主决策。</p></blockquote></blockquote><blockquote><blockquote><p>我觉得每一代人只能做他当时认为最重要的事。人活着总要做点事，做了这件，也许就要放弃那一件。我做事从不后悔，即使做了较为愚蠢的事，也不后悔，因为时间总是在往前走的。</p></blockquote></blockquote><h1 id="◆-1981-笼子与鸟"><a href="#◆-1981-笼子与鸟" class="headerlink" title="◆ 1981 笼子与鸟"></a>◆ 1981 笼子与鸟</h1><blockquote><blockquote><p>1979年赤字170余亿元，1980年120余亿元。到1980年物价稳不住了，商品价格上涨6%，其中城市上涨8.1%，农村上涨4.4%。</p></blockquote></blockquote><blockquote><blockquote><p>为了改善工人和农民的生活水平，在过去的三年里，中央出台了一系列的政策，包括职工提薪、奖金发放、安置就业、政策退赔、农产品提价以及扩大企业和地方财权等，使财政支出大幅增加。与此同时，经济的复苏势必带动基础建设的复兴，各地的基建规模不断扩大，渐渐到了预算无法控制的地步。而国有企业的放权让利改革一方面让中央财政的收入少了一大块</p></blockquote></blockquote><blockquote><blockquote><p>邓小平的思路非常清晰：一保中央财政，采取紧急刹车的措施，全面压缩计划外投资，借用地方财政存款、向企业和地方政府发行国库券、暂时冻结企业存在银行的自有资金、紧缩银行贷款。1981年的基建投资比上年减少126亿元，积累率回落到28.3%，让全年赤字控制在35亿元以内。这些措施直接造成的结果就是各地的投资热度大减，与国外谈判的项目一一搁浅</p></blockquote></blockquote><blockquote><blockquote><p>有人因而提出了“笼子与鸟”的理论，大意是说，企业是一只鸟，不能老是绑着它的翅膀，要让它自由地飞，但是，国有经济体系则是一个大笼子，鸟再怎么飞，也不应该飞出这个笼子。这些论述最终说服了中央决策层，“笼子与鸟”理论统治了未来整个80年代的企业改革思路，国有企业的改革成为一场“笼子里的变革”。</p></blockquote></blockquote><blockquote><blockquote><p>，都是控诉那些计划外的小工厂如何与规范的国营企业争夺原材料，如何扰乱市场秩序，如何让国有企业蒙受巨大损失的。总而言之，试点企业搞不好，都是笼子外的野鸟们惹的祸。</p></blockquote></blockquote><blockquote><blockquote><p>“主要为农业生产服务”指定了社队企业的产业方向和产品方向，而“不与先进的大工业企业争原料和动力”则限定了社队企业成长的半径。因而，当经过将近两年的发展，社队企业突然在笼子外蓬勃成长，并开始在某些领域与笼子内的国营企业争夺市场和原材料的时候，规定中的这些限定条款便被启动了。</p></blockquote></blockquote><blockquote><blockquote><p>对于像鲁冠球和禹作敏这些从乡土里冒出来的工厂，政府的态度已经十分清晰：请你们继续在当地发展，为方圆十几公里的农民提供必需的劳动农具，并解决农村闲置人口的就业问题，除此之外，千万不要到城里——或者说笼子里来抢食。</p></blockquote></blockquote><blockquote><blockquote><p>12月30日，国务院更是下达通知，“严格控制农村劳动力进城做工，控制农业人口转为非农业人口”。</p></blockquote></blockquote><blockquote><blockquote><p>“缓改革，抑需求，重调整，舍发展</p></blockquote></blockquote><blockquote><blockquote><p>什么叫‘缓改革’？这正是由于过去思想保守，不肯和不敢进行改革，改革的步子太慢，才在经济上出现了许多的问题。‘抑需求’？社会的需求、人民群众对物质、文化需求的不断增长是必然的和正常的，只能逐步地积极地去解决，逐步地去满足，特别在当时情况下，不应当再强调抑制群众的需求。对绝大多数群众来说，他们的生活已经够苦的了，对他们的需求，不能再去抑制了。调整是必要的，但‘舍发展’就不对了。中央对广东实行特殊政策、灵活措施，办特区，就是希望广东先走一步，发展得快一点。</p></blockquote></blockquote><blockquote><blockquote><p>国务院同意中信在日本发行100亿元的私募债券。荣毅仁在半年多时间里马不停蹄地完成了所有的前期工作，毫不夸张地说，他个人的信用和政治身份成了此次募资最重要的担保。在1982年1月，中信债券发行成功，日本30家金融机构认购了这个期限为12年、年利率为8.7%的债券。三年后，仪征化纤第一期工程建成投产。中信的做法被称为是“仪征模式”，而经此一役，荣毅仁和中信终于找到了感觉。“资本回来了。”荣毅仁后来对美国记者一言以蔽之。</p></blockquote></blockquote><blockquote><blockquote><p>1981年，中国报纸上出现频率最高的两个词是“三产”和“停薪留职”。</p></blockquote></blockquote><blockquote><blockquote><p>所谓“三产”，就是国营企业在主业受阻后，开展的自救式商业行动，譬如，把原来的工厂围墙敲掉，租给个体户开店，或者把闲置的卡车组织起来，搞一个运输公司</p></blockquote></blockquote><blockquote><blockquote><p>对“三产”的积极提倡，从日后的实践来看，无疑是一个后遗症很大的权宜之计。它不可能解决国有企业已有的效率低下难题，反而倒像是把最需要解决的困难（比如提高企业的劳动效率、增强产品的市场竞争力等）放到一边，国营企业因此逐渐失去它们在各自行业中的领先优势。</p></blockquote></blockquote><blockquote><blockquote><p>是从根本上造成了国有企业内部的人心涣散，没有人愿意再老老实实地专注于自己的工作岗位，企业的核心能力被轻易地放置在一边。</p></blockquote></blockquote><blockquote><blockquote><p>，1981年对中国来说的确不能算是一个很好的年份。无论是改革还是开放，都不像两年前人们想象的那么简单：只要打开国门，就是一片坦途。被寄予厚望的国有企业改革首战即遇胶着，中央财政吃紧，思想再度混乱，而老天似乎也不肯照顾，从年初开始中原地带就爆发旱涝</p></blockquote></blockquote><p>增加需求促进经济增长，扩大政府开支，赤字财政，刺激经济增长</p><blockquote><p>凯恩斯主义</p></blockquote><blockquote><blockquote><p>此时的中国经济也很像是一个魔方：出路明明是有的，但是，现实就是有点乱，让人理不出一个头绪。</p></blockquote></blockquote><blockquote><blockquote><p>由于整个政策面的收紧，1981年也自然成了外资进入中国的低潮年。只有一些零星的合资报道见诸报端。</p></blockquote></blockquote><blockquote><blockquote><p>坏人受到揭露处理，这很好。有些问题群众看得很清楚，干部也有很多议论，问题的性质已经非常明白，但是就是处理不下去，而且长期处理不下去。为什么？一是自己屁股有屎；二是派性作怪；三是软弱无能。你这个单位的问题长期处理不下去，算哪一条，不妨想一想。</p></blockquote></blockquote><h1 id="◆-1982-春天并不浪漫"><a href="#◆-1982-春天并不浪漫" class="headerlink" title="◆ 1982 春天并不浪漫"></a>◆ 1982 春天并不浪漫</h1><blockquote><blockquote><p>民营力量已经把手伸向国营企业内部的科技人员，开始与国营企业争抢技术和人才，这当然也是不被容忍的。</p></blockquote></blockquote><blockquote><blockquote><p>1985年前后，上海太平洋被单厂一个叫郑鸿坚的助理工程师还因为业余兼职而被判刑、关进大牢。直到1988年1月18日，国务院专门下达了文件，称“允许科技干部兼职”，至此，这个争论才总算尘埃落定，而事实上，在那时，民营企业聘用科技人员已是一个十分普遍和自然的现象。</p></blockquote></blockquote><blockquote><blockquote><p>“八大王事件”和“韩庆生事件”均在当年轰动一时，以后来者的角度来解读：国家是在动用政府机器对体制外的资本力量进行遏制，这样的制度性遏制将在今后的20年时间里持续发生，这不是某一个人的决策行为，而是整个中国企业变革的逻辑使然。</p></blockquote></blockquote><blockquote><blockquote><p>对前者的保护和对后者的遏制便成了一种本能性的政策反应。</p></blockquote></blockquote><blockquote><blockquote><p>原本以为，只要把在农村改革中一试就灵的“承包制”拿到企业改革中来就可以了，谁知道，后者的复杂程度远远大于以个体生产为主的农村经济，中国企业变革开始陷入经济学家高尚全所总结出的“一统就死，一死就叫，一叫就放，一放就乱，一乱就统”</p></blockquote></blockquote><blockquote><blockquote><p>在宏观经济日趋紧缩的大背景下，中方决定中止向日本公司购买成套设备的4个合同，并为此支付了相当于合同总金额11%左右的补偿费。到第二年的3月，宝钢向德国公司购买设备的巨额协议也被要求推迟三年“交货”，这些举措在国际舆论中溅起轩然大波，它被视为中国经济“紧急刹车”的重要标志事件。在邓小平的支持下，宝钢的建设终于没有“喊停”，到1982年8月，第一批两座巨型熔炉正式宣告投产，这个时间比原定计划延迟了大约10个月。</p></blockquote></blockquote><blockquote><blockquote><p>1982年宏观经济的紧缩，并没有造成意识形态上的全面回流，它所表现出的种种粗暴是一个习惯于用行政手段和思路解决经济波动问题的政府，在面对新环境时缺乏市场经济管理能力的体现。在中央决策层，改革依然是主流的力量，一些重大的变革在继续推进中。</p></blockquote></blockquote><blockquote><blockquote><p>9月，中国共产党第十二次代表大会开幕，会上最重要的政治议题是，确定了“建设有中国特色的社会主义”的国家战略。邓小平在中共十二大的开幕式上致辞，第一次提出“把马克思主义的普遍真理同我国的具体实际结合起来，走自己的路，建设有中国特色的社会主义，这就是我们总结长期历史经验得出来的基本结论”，换句话说是，中国已下决心放弃高度集中的“苏联计划经济模式”，开始以“计划经济为主、市场调节为辅”的经济体制改革。[插图]与这一战略相关的是，会上被选为中共中央总书记的胡耀邦明确提出了经济发展的目标，“到本世纪末，力争使全国工农业总产值翻两番”。与1978年全国科学大会上提出的那个浪漫蓝图相比，这个目标明显要务实和可执行得多，它在相当长的时期里激励着这个国家里的每一个人，它让全民看到了一个依稀可见的希望。日后发展的事实是，到1995年，全国GDP提前5年比1980年翻了两番。</p></blockquote></blockquote><h1 id="◆-1983-步鑫生年"><a href="#◆-1983-步鑫生年" class="headerlink" title="◆ 1983 步鑫生年"></a>◆ 1983 步鑫生年</h1><blockquote><blockquote><p>改革开放5年来，一切似乎没有按预定中的进行，在农村一试就灵的“承包制”在企业改革中成效不彰，在计划管理体制中运行多年的行政部门和国营企业似乎都不习惯用市场的方式来改变自己，跨国资本对中国的投资兴趣好像也不如想象中的那么大</p></blockquote></blockquote><blockquote><blockquote><p>体制外力量的纷涌而起，是意料外的事情，但到底它能长多大、会把中国引向何方，却还要边走边看。</p></blockquote></blockquote><blockquote><blockquote><p>一份关于如何处置私营业主超出规定多请帮工的请示报告上，邓小平用潦草的笔迹写下了自己的意见：“放两年再看。”根据他的这个指示，中共中央当即对此提出了三不原则：“不宜提倡，不要公开宣传，也不要急于取缔。”</p></blockquote></blockquote><blockquote><blockquote><p>直到1987年的中共中央“5号文件”中，对雇工数量的限制才被去掉了，“三不原则”改成了16字方针：“允许存在，加强管理，兴利抑弊，逐步引导。”而在那时，私营业主雇用大量劳动力的现象已经比比皆是，在舆论上也已经没有任何的争议了。</p></blockquote></blockquote><blockquote><blockquote><p>：摸着石头往前走，不争论，也不做政策上的明确界定，让最终发生的事实来定义前行的方向。</p></blockquote></blockquote><blockquote><blockquote><p>他通过关系找到了广东省海运局，双方一拍即合。王石当起了玉米中间商。从1983年4月到12月，短短不到一年的时候，他赚了300多万。然后，他拿着这300多万的玉米款成立了以主营进口专业视频器材的“现代科教仪器展销中心”，而这便是日后中国最著名的房地产公司万科的前身。</p></blockquote></blockquote><blockquote><blockquote><p>在80年代初，随着经济的日渐恢复和民众购买能力的复苏，物资（包括消费品和生产原料）全面短缺。与此同时，控制在国家手中的流通渠道则仍然低效而僵化，这在农村市场上直接诱发了沿海农村小商品及专业市场的发育</p></blockquote></blockquote><blockquote><blockquote><p>然而在客观上，这些“倒爷”如蚂蚁啃堤，最终把僵硬的计划流通体系摧毁得遍体鳞伤，从而以一种十分灰色而非法的方式协助重建了中国的市场流通和资源配置。他们是经济转轨期里必然出现的经济寄生物。</p></blockquote></blockquote><blockquote><blockquote><p>当初袁庚等人提出的四个深圳发展目标，到1983年都已经渐渐偏离：“产品以出口为主”，实际进口大于出口4.84亿美元；“引进以先进技术为主”，但引进的主要是中国香港、日本的被淘汰不用的设备；“投资以外资为主”，实际上外资只占投资的30%，而且绝大部分是港资；“结构以工业为主”，当年深圳工业生产总值为7.2亿元，而社会零售商品总额为12.5亿元，做生意赚的钱比工业多得多。一本描写深圳早期崛起的作品《深圳的斯芬克思之谜》中记录说：“贷款发财的热情高得惊人，贷了款挂出招牌成立这公司那公司，深圳街头每天炮竹响个不断，得不到控制的贷款如脱缰野马，已超出深圳存款余额20多亿元，弄得只好到中央和其他省市、自治区去借资金……”</p></blockquote></blockquote><blockquote><blockquote><p>一方面，“倒爷”和形形色色的民间贸易公司扰乱了商品流通的计划体系，造成乱涨价和通货膨胀。</p></blockquote></blockquote><blockquote><blockquote><p>10月，这两个机构又下发通知，要求“坚决制止农业生产资料供应中的违法乱纪活动”。</p></blockquote></blockquote><blockquote><blockquote><p>上海第五钢铁厂向镇江冶炼厂采购一批钼铁，后者要求价格比国家定价高28%，并称如果五厂不能接受，自有其他钢厂愿意按这个价格要货。五厂没有办法只好按此采购，而自己在销售钢材的时候也被迫“涨价”。被指“乱涨价”的镇江厂也自有难处，如果按国家定价，则必亏无疑</p></blockquote></blockquote><blockquote><blockquote><p>这一新闻透露出来的信息是，刚性的计划定价已经在日渐市场化的环境中陷入结构性困局。</p></blockquote></blockquote><blockquote><blockquote><p>到1982年年底，全县的《临时许可证》不知不觉已经发出了7000份，稠城镇上的商贩也超过了300摊，所交易的商品大大超出了“鸡毛什肥”的规定范畴。有人便开始给省里写信，惊报“义乌出现了资本主义的小温床”。</p></blockquote></blockquote><blockquote><blockquote><p>谢高华是个瘦削矮小的中年人，1.65米不到，顶多90来斤，走在马路上，像是一朵棉花在飘。但是，就是这朵“棉花”却做出了他一生中最倔强的决定，1982年11月，他宣布正式开放“稠城镇小商品市场”，并宣布“四个允许”：允许农民经商，允许从事长途贩运，允许开放城乡市场，允许多渠道竞争。</p></blockquote></blockquote><blockquote><blockquote><p>义乌的发展模式[插图]，几乎是80年代中国民营经济成长的标本：一个专业市场的出现，构筑出一张辐射农村及中小城镇的商品网络，在物流需求的诱发下，周边冒出数以千计的家庭工厂，最终形成“前店后厂”、“双轮驱动”的初级产业格局。</p></blockquote></blockquote><blockquote><blockquote><p>温州十大市场大多坐落在水陆交通都不是很便利的地方，唯一合理的解释只能是，在那些地方，‘左’的思潮相对薄弱，计划经济的束缚相对较弱，否则，这些市场很可能在兴旺之前就遭取缔。中国改革的经验证明，对旧体制的最初突破，往往发生在旧体制最疏于防范的地方。”</p></blockquote></blockquote><blockquote><blockquote><p>发生在流通领域的这些变革，在当时的中国大地上寥若晨星，尽管无比活跃，却还并没有显现出它对计划体制的革命性冲击</p></blockquote></blockquote><blockquote><blockquote><p>第一轮国营企业改革的现状表明，如果没有利益分配上的明确界定，即便企业的生产积极性被暂时地释放了出来，它与上级行政主管部门的矛盾也不会得到缓解，而且可能愈演愈烈，首钢与北京市财政局之间的那场纠纷事件在全国各地正不断地上演</p></blockquote></blockquote><blockquote><blockquote><p>由于缺乏预算的约束力，企业的投资冲动会盲目膨胀，在过去的几年里，基础建设和计划外的项目之所以会越来越大，到了难以控制的地步，就是因为没有人需要对投资的后果负责</p></blockquote></blockquote><blockquote><blockquote><p>利改税”是国营企业向现代公司治理制度改革的第一个重要举措。它把企业从“父爱式”的大包大揽中解放了出来，尽管这个“解放”才刚刚开始，而且“父亲”的所得仍然是“大头”</p></blockquote></blockquote><blockquote><blockquote><p>国营经济还是一个“大锅饭”，“利改税”只是部分地解决了企业与主管部门抢饭吃的问题。</p></blockquote></blockquote><blockquote><blockquote><p>从这一年起，凡是中央投资兴建的大中型企业收入，都归中央财政，中央与地方共同投资兴建的大中型企业收入，按比例分配。中小企业，特别是县办工业企业的亏损，由原来中央负担80%，地方财政负担20%，改为中央与地方各负担一半。这种收入划分和“亏损下放”，在主观上当然是中央政府“卸包袱”的做法，不过在客观上，倒为日后很多濒临亏损的中小国营企业的创新与改革意外地预留了空间。</p></blockquote></blockquote><blockquote><blockquote><p>《亚洲华尔街日报》透露的数据是，在1980年和1981年，中国分别兴建了20个合资企业，而1982年则只有8个。6月的《经济学人》不留情面地批评了中国的外资引进工作，</p></blockquote></blockquote><blockquote><blockquote><p>9月，久唤不出的《中外合资经营企业法实施条例》终于出台，它对外资公司在中国的合资及经营活动进行了明确的规定，这个开明而积极的姿态受到了国际社会的欢迎。美国的3M公司应该是最早感受到这种变化的外资公司之一，它的代表到中国来谈判，希望建立一个全资的生产绝缘体的制造工厂，他提出了一个“三不原则”：不搞合资，不转让技术，产品不出口。</p></blockquote></blockquote><blockquote><blockquote><p>这在一年前，在中国是根本行不通的。然而，这一次，进行谈判的上海投资信托公司却没有马上拒绝，中方委婉地提出，可否先搞一个试验项目，等到中央政府允许外国公司搞单一所有制的公司时，就把股权全部转让出来。</p></blockquote></blockquote><blockquote><blockquote><p>到1983年秋天之后，如何振奋全国人心，唤起改革的热情，让舆论的重心再次回到发展的主轴上成为主政者最大的课题。</p></blockquote></blockquote><p>体现党的最新政策精神的批注</p><blockquote><p>编者按</p></blockquote><blockquote><blockquote><p>“步鑫生热”在1983年年底到1984年年初的出现，让国内沉闷多时的改革氛围为之一振。中央的政策也从“调整、改革、整顿、提高”的八字方针悄然变成了“改革、开拓、创新”的新提法。</p></blockquote></blockquote><blockquote><blockquote><p>扩大企业自主权、推行厂长负责制、打破“铁饭碗”和“大锅饭”等被搁置起来的改革理念再次成了主旋律。</p></blockquote></blockquote><blockquote><blockquote><p>戴维·加文发表在9月号《哈佛商业评论》上的论文《处于危险中的质量》更是证实了这个判断，他在论文中披露了一个让人很吃惊的数据：根据他对所有美国和日本空调生产商的研究，日本公司的平均装配线差错率比美国公司低70倍，最差日本公司的故障率也要比最优的美国制造商故障率的一半还要低；在旷工率方面，美国公司平均为3.1%，而日本公司则为零。</p></blockquote></blockquote><blockquote><blockquote><p>他决定重新“定义”电子产业，在日后的回忆录中他说：“当全世界的电子业者都把电脑业称为新技术行业的时候，我则认为它的规模制造能力将体现在模具技术上。”就是靠着成熟的模具技术，鸿海迅速切入连接器领域，22年后，鸿海成为全球最大的电脑配件生产商，全世界每五台电脑就有一台在使用鸿海的产品，郭台铭也因此成为台湾首富。</p></blockquote></blockquote><blockquote><blockquote><p>让人稍稍有点不安的是，尽管几乎所有的人都已经清楚地明白改革是唯一出路，但是没有一个人知道未来的中国和我们的生活将变成一副怎样的模样。</p></blockquote></blockquote><h1 id="◆-1984-公司元年"><a href="#◆-1984-公司元年" class="headerlink" title="◆ 1984 公司元年"></a>◆ 1984 公司元年</h1><blockquote><blockquote><p>邓小平抵达深圳，特区的党委书记梁湘指着挂在墙上的深圳地图，介绍了特区开发建设的情况，称1983年的工农业总产值比上一年翻了一番，比办特区前的1979年增长了10倍。备受压力的梁湘很想得到邓小平明确的支持态度，便说：“办特区是您老人家倡议的，是党中央的决策，深圳人民早就盼望您来看看，好让您放心，希望得到您的指示和支持。”但邓小平没有发表意见。</p></blockquote></blockquote><blockquote><blockquote><p>邓小平在深圳的表现，可谓意味深长，他用行动表明了自己支持的态度，却又在言辞上留下空白。27日，他离开深圳前往另一个特区珠海，在这里他一反在深圳时的沉默态度，写下“珠海经济特区好”的题词，算是给特区经济下了结论。2月1日，已经回到广州的邓小平，在广东省和深圳特区领导的再三暗示和恳请下，写下“深圳的发展和经验证明，我们建立经济特区的政策是正确的</p></blockquote></blockquote><blockquote><blockquote><p>在山东青岛，35岁的张瑞敏被派到一家濒临倒闭的电器厂当厂长。他是所谓的“老三届”，中学毕业之后就进入工厂当工人，后来又调进青岛市家电公司工作。他当时对管理根本就没什么认识，在他的印象中，“所有干的事都可能是假的”，</p></blockquote></blockquote><blockquote><blockquote><p>由于当时上级要求“必须马上出成果”，结果贯彻没几天就开始统计“成果”了，后来还组成了一个锣鼓队到车间里去宣传有多少多少项成果。当时工人就感到像演戏、开玩笑一样。</p></blockquote></blockquote><blockquote><blockquote><p>张瑞敏上任后的第一个决策就是，退出洗衣机市场转而生产电冰箱。他是12月初报到的，当月工厂的牌子就被更换为“青岛电冰箱总厂”。他在家电公司当副经理的时候，曾经被派到德国去考察，当地一家冰箱公司利勃海尔（Liebherr）有意愿向中国输出制造技术和设备合同，张瑞敏抓住这件事不放，向青岛市和北京的轻工部再三要求，终于被允许引进利勃海尔的技术，成为轻工部确定的最后一个定点生产厂。</p></blockquote></blockquote><blockquote><blockquote><p>张瑞敏作为伟大企业家的魅力将在下一年散发出来，某日，有个朋友到张瑞敏那里买台冰箱，但挑了很多台都存在着这样那样的毛病。朋友走后，张瑞敏把库房里的400多台冰箱全部检查了一遍，结果发现有76台冰箱都不同程度地存在问题。面对这种情况，有人提议把这些冰箱以低价格处理给职工。把残次品低价格处理是很多生产厂家都采用的“好办法”，都认为这样既有益职工又有利企业。但张瑞敏不这么认为。他一声令下，76台冰箱被砸成了废铁。</p></blockquote></blockquote><blockquote><blockquote><p>它跟几年前鲁冠球把40多万元的次品当废品卖掉的故事如出一辙，表明了出现于商品短缺时期的第一代企业家的自我蜕变正是从质量意识的觉醒开始的。</p></blockquote></blockquote><blockquote><blockquote><p>1984年的中国科学院正处在膨胀和转型的边缘，在过去的几年里，各种名目的研究所层出不穷，已达到123个之多，而所开展的各项研究却似乎离国际水平越来越远。计算所举全所之力，花了8年时间研制的大型计算机“757工程”宣告完成了，并获得中科院“重大科技成果一等奖”，但是它拥有的每秒千万次的运算速度与国际水准相比已令人汗颜，而其以军事为目标的研究思路更是得不到市场的响应。它从诞生的第一天起就成了“弃儿”。</p></blockquote></blockquote><blockquote><blockquote><p>在当时的中关村，最出名的是陈春先，而最知名的公司是“两通两海”，信通、四通、京海、科海，它们的创办人无一例外都是中科院的科研人员。</p></blockquote></blockquote><blockquote><blockquote><p>如果说三年前陈春先办起中关村第一家公司时，还心怀打造“中国硅谷”的理想，那么，此时的柳传志满脑子在想的却是如何赚钱养活公司里的十几号人。</p></blockquote></blockquote><blockquote><blockquote><p>为IBM做销售代理成为日后联想公司最重要的利润来源，这一渊源可以一直延续到20年后联想以16亿美元收购IBM的PC事业部。</p></blockquote></blockquote><blockquote><blockquote><p>另一个最重要的成果是，他说服了中科院出名的计算机专家倪光南加盟他的公司，担任总工程师的职务，这是在1985年的春天。倪光南是中国汉字信息处理的开路者，跟热情外向的柳传志不同，他性情专注，不修边幅，拥有科学家的天赋。《联想为什么》[插图]的作者陈惠湘描述说，柳在和人聊天的时候总是海阔天空，而倪则喜欢用技术性很强的难题来考问对方</p></blockquote></blockquote><blockquote><blockquote><p>柳说服倪的理由只有一条：“我保证把你的一切研究成果都变成产品。”对于一位充满济世情怀的中国科学家来说，这大概是最直指内心的诱惑了。</p></blockquote></blockquote><blockquote><blockquote><p>李经纬这年45岁，他幼年丧父，少年亡母，打小在孤儿院里长大，成年后他当上了三水县体委的副主任，1973年，受人排挤被发配到县里的酒厂当厂长。那是一个只有几口米酒缸的作坊工厂，李经纬去后苦心经营，竟被他开发出一条啤酒生产线，生产出的强力啤酒在当地渐渐站住了脚跟。</p></blockquote></blockquote><blockquote><blockquote><p>体委干部出身的李经纬很“天才”地想到了运动饮料。一个偶然的机会，他听说广东体育科学研究所的研究员欧阳孝研发出一种“能让运动员迅速恢复体力，而普通人也能喝”的饮料，便找上门去要求合作。在欧阳孝的主持下，一种橙黄色的饮料水被开发了出来，它有一个很拗口的名称——“促超量恢复合剂运动饮料”，实际上，它是一种含碱电解质饮料。</p></blockquote></blockquote><blockquote><blockquote><p>—“健力宝”，听上去朗朗上口，还很有“保健”的暗示。为了设计商标，参与产品开发的陈新金医生自告奋勇，请自己喜爱书法的哥哥将“健力宝”三个字写在一张宣纸上</p></blockquote></blockquote><blockquote><blockquote><p>李经纬另一个大胆的举措是提出用易拉罐包装健力宝，在当时的消费者眼中，易拉罐无疑是高档饮料的代名词，那时国内尚无一家易拉罐生产企业，三水酒厂更不可能有这样的罐装线，李经纬四处奔波，最后竟说动深圳的百事可乐公司同意为他生产代工。</p></blockquote></blockquote><blockquote><blockquote><p>。在11日的《东京新闻》上，记者发表了一篇花边新闻稿《靠“魔水”快速进击？》</p></blockquote></blockquote><blockquote><blockquote><p>一位随团采访的《羊城晚报》记者看到了这篇新闻，他将之妙手改写成“中国魔水”风靡洛杉矶，当这条“出国转内销式”的新闻在晚报上刊出后，居然被迅速广泛转载，“中国魔水”与“东方魔女”（对中国女排的昵称）交相辉映，在早已沸腾的奥运热上再添一份充满了神秘气息的骄傲</p></blockquote></blockquote><blockquote><blockquote><p>李经纬就这样交上了好运。1984年，健力宝的年销售额为345万元，第二年就飞蹿到1650万元，再一年达到1.3亿元，此后15年间，它一直是“民族饮料第一品牌”</p></blockquote></blockquote><blockquote><blockquote><p>如果说，张瑞敏、柳传志们的困难是找不到项目和方向，而那些手拥资源的老牌国营企业却为不得自由而苦恼。这几乎是一种宿命，在体制逐渐市场化的过程中，那些老企业将被消耗得精疲力竭，它们的优势和积累日渐老化、消失，最终被时代所淘汰。年初，邓小平在南方的行动让举国上下感觉到了进一步扩大改革的决心，很快，在各个领域，突破性事件频频发生，停滞了两年多的变革列车再次快速启动</p></blockquote></blockquote><blockquote><blockquote><p>福建省的55位厂长、经理齐聚福州，参加“福建省厂长经理研究会”的成立大会，会议期间，厂长经理们的抱怨之声不断，“现行体制的条条框框捆住了我们手脚，企业只有压力，没有动力，更谈不上活力”，于是在黄文麟等人的带头下，厂长们以“请给我们松绑”为题联名向省委书记项南、省长胡平写了一封信。</p></blockquote></blockquote><blockquote><blockquote><p>“我们认为放权不能只限于上层部门之间的权力转移，更重要的是要把权力落实到基层企业。</p></blockquote></blockquote><blockquote><blockquote><p>厂长、经理具体要求“松绑”的权力被分成五点，主要有三条：一是人事权，企业干部管理除工厂正职由上级任命，副职由厂长提名、上级考核任命，其余干部通通由企业自行任免，上面不得干预。干部制度破除“终身制”和“铁交椅”，实行职务浮动，真正做到能上能下，能“干”能“工”。二是财权，企业提取的奖励基金由企业自己支配使用，有关部门不得干涉。奖金随着税利增减而浮动，不封顶，不保底。企业内部可根据自己的实际情况，实行诸如浮动工资、浮动升级、职务补贴、岗位补贴等多种形式的工资制度和奖惩办法。三是企业自营权，在完成国家计划指标的情况下，企业自己组织原材料所增产的产品，允许企业自销和开展</p></blockquote></blockquote><blockquote><blockquote><p>显示，这封“公开信”并不完全是厂长们的自发行为，信件的主要起草人黄文麟当时是福建省经济委员会的副主任，也就是主管该省企业改革的主要官员之一。在某种意义上，“公开信”其实是福建官员借厂长经理之口，唱出的一台“松绑双簧戏”。</p></blockquote></blockquote><blockquote><blockquote><p>松绑新闻”是国营企业改革史上的一个标志性事件，“公开信”发表的3月24日还一度被命名为“中国企业家活动日”。此后，国营企业家们还将为自主权的全面落实抗争十多年。2004年，在“松绑公开信”发表20年之际，有记者追访当年的55个企业，结果发现，其中1/3破产，1/3被民营或外资公司兼并，还有1/3处境艰难。公开信的参与者之一、福州阀门总厂的原厂长陈一正对来访者说：“我常常问自己，当时要的权用好了吗？”</p></blockquote></blockquote><blockquote><blockquote><p>这一年的1月24日，苹果电脑公司发布了麦金托什（Macintosh）家用电脑，这一天后来被《时代周刊》杂志评价为个人电脑大众化普及的第一日。在此前的1976年，苹果就推出了首台个人电脑，而IBM公司并未给予重视，觉得那不过是电脑业余爱好者的玩意儿。但在1981年夏天IBM突然以IBM PC重拳出击</p></blockquote></blockquote><blockquote><blockquote><p>19岁的一年级医学系学生迈克尔·戴尔看到了乔布斯的这则令人印象深刻的电脑广告，这直接刺激了他的创业欲望，在过去的一年多时间里，他常常逃课，躲在寝室里痴迷地组装电脑。</p></blockquote></blockquote><blockquote><blockquote><p>“我想跟IBM竞争。”戴尔的竞争办法当然不是去另外建一个IBM——他只有1000美元的创业资金，这位天才的商人将用一个简单的问题来开展事业，那就是：“如何改进购买电脑的过程？”他的答案是：把电脑直接销售到使用者手上，去除零售商的利润抽取环节，把这些省下来的钱返还给消费者</p></blockquote></blockquote><blockquote><blockquote><p>前者的思路是通过直销的方式全面颠覆已有的电脑销售模式，后者则成了电脑巨人在中国的一个渠道代理商。</p></blockquote></blockquote><blockquote><blockquote><p>比尔·盖茨也看到了乔布斯的广告，他兴奋地对《流行科学》的记者说：“如果乔布斯无法取得成功，市场将被PC占据。不过我们对苹果机非常狂热，如果它可以达到生产目标，我们预计1984年半数的微软零售收入将和麦金托什相关。”[插图]也就在此后不久，他为自己的公司设定了那个著名而伟大的理想：“让每一张办公桌，每一个家庭都摆上电脑。</p></blockquote></blockquote><blockquote><blockquote><p>戴尔和思科的出现，基本上代表了日后新技术公司的两种成长路径：独一无二的商业渠道模式，或高度垄断的核心技术优势</p></blockquote></blockquote><h1 id="◆-1985-无度的狂欢"><a href="#◆-1985-无度的狂欢" class="headerlink" title="◆ 1985 无度的狂欢"></a>◆ 1985 无度的狂欢</h1><blockquote><blockquote><p>汽车像潮水般涌进海南岛，全部停在海口市内外，密密层层，一望无际，在阳光下五彩缤纷，闪闪发亮，形成了一个蔚为壮观的场景。工商局积极为来自全国各地的买家办理“罚款放行”手续，只消罚款四五千元，盖上一枚公章，这辆汽车就可以堂而皇之地装船出岛了。在这中间，贪污、行贿、受贿、套汇，所有作奸犯科的活动均在阳光下公然进行。事后清查，在短短半年里，海南一共签了8.9万辆汽车进口的放行批文，对外订货7万多辆，已经开出信用证5万多辆。进口用汇总额高达3亿美元。</p></blockquote></blockquote><blockquote><blockquote><p>“中共海南区党委、海南区政府的一些主要领导干部在1984年1月1日至1985年3月5日的一年多时间里，采取炒卖外汇和滥借贷款等错误做法，先后批准进口8.9万多辆汽车，已到货7.9万多辆，还有电视机、录像机、摩托车等大量物资，并进行倒卖。这是我国实行对外开放以来的一个重大事件。海南行政区党委和某些负责人违背中央关于开发海南的方针，从局部利益出发，钻政策的空子，滥用中央给予的自主权。这一严重违法乱纪行为，冲击了国家计划，干扰了市场秩序，破坏了外汇管理条例和信贷政策，败坏了党风和社会风气，不仅给国家造成很大的损害，也给海南的开发建设增加了困难，延缓了海南岛开发建设的进程。”</p></blockquote></blockquote><blockquote><blockquote><p>一个地区为了发展经济，令制度的许多欠缺渐渐跟不上经济发展的需求</p></blockquote></blockquote><blockquote><blockquote><p>从上一年开始，大量的生产线便开始陆续涌了进来。中国沿海无疑正在成为国际产业转移的下游地带，对于跨国公司和中国来说，这似乎都是一种明智的选择。成百上千条彩电线、冰箱线、洗衣机线和录像机线正日以继夜地抓紧安装，很快，中国家电业的“战国年代”就要到来了。速度成了最重要的指标</p></blockquote></blockquote><blockquote><blockquote><p>“1985年前后，知情人士说很多不良贸易正在进行着。如果一个外国公司不能使政府接受合同购买它们的产品，它们可以下到省市级的单位完成未果的交易。就这样它们卖给了中国大量劣质设备和过时技术。由于对高技术的狂热，任何称为高技术的东西都能卖得很好，即使它根本没有任何技术含量或者中国本来就有了更好的技术。</p></blockquote></blockquote><blockquote><blockquote><p>发生在全国各地的设备引进热潮，对后来的中国公司发展产生了巨大的影响力。它让很多设备陈旧、缺乏产品竞争力的老企业迅速复活，得以用最快的速度进入正在爆炸中的消费品市场，我们将看到，那些日后驰骋一时的明星公司都是当年生产线引进的积极者。</p></blockquote></blockquote><blockquote><blockquote><p>与此同时，没有规划和秩序的引进热也造成了极大的浪费和行业管制上的失控。</p></blockquote></blockquote><blockquote><blockquote><p>其问题之一，是贪大求洋，不符合国情。武汉一家轧钢厂引进上千万美元的设备，因动力问题无法解决长期闲置；</p></blockquote></blockquote><blockquote><blockquote><p>其二，盲目引进，利用率低下。根据《光明日报》的报道，1987年，武汉市对引进工作进行普查，发现全市87家企业共有911台设备，价值5100万元，长时间空置，有的连包装箱都没有打开。</p></blockquote></blockquote><blockquote><blockquote><p>其三，成套设备偏多，技术性引进少。根据当时学者的统计，在引进热中，成套设备占80%，单项设备占17%，而被当作目标之首的技术引进则只占3%。很多设备引进后，其生产所需的零部件和设备维护等仍然全部依赖外国公司。</p></blockquote></blockquote><blockquote><blockquote><p>其四，重复引进，缺乏规划</p></blockquote></blockquote><blockquote><blockquote><p>1985年的引进热在日后遭到了批评。大规模的引进热浪，使得外汇消耗巨大，到年底，全国的贸易逆差达到创纪录的137.8亿美元，相当于出口总额的52%。</p></blockquote></blockquote><blockquote><blockquote><p>这次失控的引进热对中国轻工产业的更新换代及消费品市场的启动，产生了巨大的效应。这个时候的中国公司，就好像一个青春期的少年冲进一片正在疯长中的草地，你听得到他的骨骼与青草一起向上生长的声音，过度的精力和热情挥霍似乎是不可避免的。</p></blockquote></blockquote><blockquote><blockquote><p>从晋江假药案开始，在广袤的中国农村，有意识、有组织、大规模地制造假劣产品，在今后20年的时间里仍将持续地蔓延，从来没有根绝。它成为很多地方摆脱贫困的捷径，成为地方政府振兴当地经济的绝招，在晋江假药工厂中，相当一部分的创办人和经营者是当地的乡镇干部，这个特征在今后也将一再地呈现。中国基层社会那种流传千年的淳朴的商业道德，从这时开始正在可怕地逐步沦失。</p></blockquote></blockquote><blockquote><blockquote><p>跟那些无缝不钻的民营公司相比，国营企业争夺生产资料的主动性和能力显然要弱得多，于是，国务院的智囊们便创造性地想出了一个“价格双轨制”的办法来。1985年年初，国家宣布取消对企业计划外自销产品价格的限制，宣告生产资料的“价格双轨制”正式形成</p></blockquote></blockquote><blockquote><blockquote><p>一种生产资料存在两种价格，一种是国家掌控的“计划内价格”，一种是市场化的“计划外价格”，后者的成本要远远大于前者。这种扭曲的价格体制，其目的便是为了保护国营企业在原材料采购上的优势。</p></blockquote></blockquote><blockquote><blockquote><p>“双轨制”带有鲜明的计划经济特征，它在抑制价格暴涨、通货膨胀方面起到了一定的作用，却也在相当长的时间内，成为困扰民营企业成长的根本性难题。</p></blockquote></blockquote><blockquote><blockquote><p>1985年、1986年前后，纺织企业原料极其紧张，不少工厂都断餐了，我们企业做外贸没有棉纱，想到无锡市的部门去争取一些。回答当然是没有，因为你们是乡镇企业，不可能给一公斤棉纱。我讲，国营企业是老大哥，我们乡镇企业是小弟弟，小弟弟向老大哥学习，能不能让纺织公司给我们一点儿棉纱？部门的干部回答我说：你乡镇企业是小弟弟吗？称不上的。”这段对话让周耀庭铭骨难忘，20年后，在接受中央电视台《改革开放二十年》专题采访时，他对着镜头说：“国营企业是老大哥，乡镇企业不是小弟弟，乡镇企业是私生子。那个时候，我们乡镇企业得到的是私生子的待遇。”</p></blockquote></blockquote><blockquote><blockquote><p>重要生产资料和紧俏耐用消费品的批发业务，只能由国营单位经营，不准套购就地转手加价倒卖，不准倒卖计划供应票证，不准任意提价，不准以任何形式索取额外收入，对投机倒把者，要坚决制止严厉打击。</p></blockquote></blockquote><blockquote><blockquote><p>价格双轨制”直接滋养了“倒爷经济”的繁荣，那些有政府背景和资源的人或公司，按国家计划价格将紧俏生产资料买进，又按照市场价格将之卖出，赚取差价。</p></blockquote></blockquote><blockquote><blockquote><p>正是由于倒爷们的猖獗和“法眼通天”，使得各种国家统配物资以各种形式，通过各种渠道流向市场，国家指令性计划彻底失去了严肃性。在执行“价格双轨制”的年份里，国家统配物资从来没有完成向国家供货的合同，那些规规矩矩、遵守国家调控计划的国营企业反倒成为最大的受害者。在这个意义上，得益于这种畸形价格制度的“倒爷”阶层是压垮计划经济的最后一根稻草。</p></blockquote></blockquote><blockquote><blockquote><p>在一个国营企业里，到底是厂长说了算，还是党委书记说了算。在改革之前，这根本不是一个问题，书记是工厂毋庸置疑的领导者。但是在新的治理结构中，厂长成为企业经营的第一责任人，他是否应该继续接受书记的领导？这个问题涉及政治敏感，有关的争论一直在遮遮掩掩中进行了十多年，从“党委领导下的厂长负责制”，到“书记、厂长双核心制”，再到厂长全面负责制，拖泥带水，纠缠不清</p></blockquote></blockquote><blockquote><blockquote><p>对于绝大多数的国营企业厂长来说，如何加强企业管理，提高生产效率，是一个亟待破解的难题。</p></blockquote></blockquote><blockquote><blockquote><p>他们的实践最终都没有能够拯救中国的国营企业，这都是一些“围墙内的变革”，无法改变这些企业在竞争能力和产权自主性上的天然缺陷。</p></blockquote></blockquote><h1 id="◆-1986-一无所有的力量"><a href="#◆-1986-一无所有的力量" class="headerlink" title="◆ 1986 一无所有的力量"></a>◆ 1986 一无所有的力量</h1><blockquote><blockquote><p>德国《明镜周刊》在这一年的报道中说：“在中国，农民胆大而鲁莽……从而给企业带来活力。”《亚洲华尔街日报》的评论则说，“很多农民企业家几乎没有任何商业方面的经验”，在7月9日的一篇新闻中，记者说他们“不知道如何管理一家工厂，不知道如何做财务报表，也不知道怎样才能生产出质量合格的产品”。但是，这家报纸惊诧的是，他们的事业正欣欣向荣地成长起来，就好像作家余华在很多年后的一部小说《兄弟》中写到的，“他们像野草一样被脚步踩了又踩，被车轮辗了又辗，可是仍然生机勃勃地成长起来了”</p></blockquote></blockquote><blockquote><blockquote><p>在两年前的3月2日，国务院正式发出通知，将社队企业改称为“乡镇企业”。作为一个新的、独立的企业形态，乡镇企业第一次浮出了水面，据有关资料显示，当年中国的乡镇企业实际已发展到165万家，拥有劳动力3848万人。而到两年后的1986年年底，乡镇企业的总数已经发展到1515万家，劳动力近8000万，向国家缴纳税金170亿元，实现总产值3300亿元，占全国总值的20%，</p></blockquote></blockquote><blockquote><blockquote><p>刘庄和史来贺的存在，证明在中国的某些乡村，如果有一个无私而威权的领导者，他同时具备两种能力：其一，是极其善于利用一些优势和概念，为自己营造一个宽松而受扶持的执政氛围；其二，他有相当的市场敏感性，往往就能办起一家乃至若干家非常赚钱的工厂。</p></blockquote></blockquote><blockquote><blockquote><p>这位强人是以一种建立在人格魅力基础上的威权风格</p></blockquote></blockquote><blockquote><blockquote><p>鲁冠球是一个无私的共产党员，是共同致富的带头人。记者借用鲁冠球的嘴巴说：“这把火（指通过创办企业摆脱贫困）要烧到围墙外面去，让全乡人民逐步富裕起来。”</p></blockquote></blockquote><blockquote><blockquote><p>他还参与建设了乡里的中学教学大楼、农贸市场和饲料加工厂，他把乡里尚未安排的108名复员军人都招进厂里，全乡每十个人就有一个在他的工厂里工作。因为万向节厂的发达，所在乡还修起了四条贯穿全乡的大马路，有一半的家庭住上了“小洋楼”。</p></blockquote></blockquote><blockquote><blockquote><p>很显然，这样的描述是极其蛊惑人的，它传达出的信息和展示的景象是，政府鼓励有能力的人创办企业，同时希望他们除了自己富裕之外，还应当承担起让周围的人都富裕起来的责任与义务。在某种意义上，政府甚至天真地认为，当年他们交付给国营企业的那些社会责任这次可以由乡镇企业来承担了</p></blockquote></blockquote><blockquote><blockquote><p>《人民日报》记者孟晓云也在这时到了温州，她写了新闻报道《市场篇》。在新闻的一开篇，她就用了一个颇有寓意的场景：“傍晚，过了6点，国营商店关了门，个体户便活跃起来。”</p></blockquote></blockquote><blockquote><blockquote><p>乡镇企业最让人惊奇的地方是，它们是怎么从几乎空白的状态中突然发展起来的</p></blockquote></blockquote><blockquote><blockquote><p>这些一无所有的农民是怎么占有市场，并击败装备精良（至少有设备、有工人，还受到国家政策上的支持）的国营企业的？</p></blockquote></blockquote><blockquote><blockquote><p>唯一可能的答案便是，它们所有的生产要素都是从国营企业那里“借”来的，它们的很多设备是国营企业淘汰下来的，它们的技术是城市里的工程师在周末偷偷下乡传授的，它们的工人有不少在国营企业里受过最基础的培训，而它们的市场往往是国营企业不屑做的。这就是“创世纪”的状态</p></blockquote></blockquote><blockquote><blockquote><p>在河北、山东等很多地方出现了“经济联合体”，国营企业把自己的一些业务以承包或联营的方式转包给乡镇企业，以此形成联盟的格局。</p></blockquote></blockquote><blockquote><blockquote><p>联营被看成是国营企业获得活力的一个新药方，在这一年，政府对联营的热衷让人吃惊。辽宁省委书记全树仁在报纸上提出要“破思想阻力，促横向联合”，他批评某些国营企业“热衷于自成体系，在联营中存戒心，留后手；缺乏战略眼光，把联合当成权宜之计；争当龙头，不甘做配角；怕自己的权和利联小了”。</p></blockquote></blockquote><blockquote><blockquote><p>事后表明，这种支援和联营，是沿海一带乡镇企业获得迅猛发展的重要原因之一，国营企业在联营中所获得的效应最终被证明只是暂时有效的，而灵活的民间企业则从这个体量庞大而体制僵硬的“大笨象”身上汲取了无尽的“血液”。</p></blockquote></blockquote><blockquote><blockquote><p>乡镇企业在与国营企业的交手中，几乎每战必胜，不过这并不意味着它们的成长一帆风顺，相反，由于没有国家政策的任何扶持，它们将历经无穷的磨难。</p></blockquote></blockquote><blockquote><blockquote><p>“抬会”是浙江南部对民间融资活动的一种称呼。80年代初期，温州民间企业已经十分发达，对金融的需求迫在眉睫。1984年9月，在一家国营医院当收发室工人的方培林在苍南钱库镇办起了新中国的第一家私人银行——“方兴钱庄”</p></blockquote></blockquote><blockquote><blockquote><p>方培林在门上贴出一张比银行更为优惠也更为灵活的存贷表：长期存款月息1.2%，三个月以上结算；临时存款月息1%，随时存取；贷出款项月息2%，视情况而定。他的钱庄开到第二天，当地的农业银行就上门查封</p></blockquote></blockquote><blockquote><blockquote><p>根据当时的金融政策，国内银行均不得对私人企业发放任何性质的贷款，私人业主无法从合法的渠道获得资金支持，又不可开办民间钱庄，资金短缺成了一个十分尖锐的难题。</p></blockquote></blockquote><blockquote><blockquote><p>这种模棱两可的状态，是中国改革的一个很独特的现象。民间力量的崛起，使得原有的体制越来越无法适应，然而政策上的改变却迟迟不至，于是，对现行法律的违背与穿越变成改革者不得不为之的冒险行为。</p></blockquote></blockquote><blockquote><blockquote><p>1984年前后的温州，以这种方式进行流通的民间资金已超过了三亿元，成为当地私人企业发展最重要的资金动力。</p></blockquote></blockquote><blockquote><blockquote><p>这个疯狂的游戏在政府完全失效管理的情形下进行了一年多。到1986年春夏，资金链出现断裂的迹象，各地相继爆出会主潜逃的消息，很快，形势急转直下，极度的亢奋即刻转为极度的恐慌，抬会体系瞬间雪崩。</p></blockquote></blockquote><blockquote><blockquote><p>抬会风波以十分血腥而狰狞的方式留存了中国现代改革史上的一个片断。它表明，当一项公共需求无法通过合法的方式获得满足的时候，哪怕是最理智的人群也可能做出最疯狂的集体举动。</p></blockquote></blockquote><blockquote><blockquote><p>“仅仅隔几年重访中国的外国人简直不敢相信他们访问的是同一个国家，丰富多彩的食品自由市场，农村如雨后春笋般盖起来的整洁小屋和充满生机的乡村工业，这些都是他们以及他们的东道主所没有见到过的。”</p></blockquote></blockquote><blockquote><blockquote><p>邓小平被认定是“一位彻底的务实主义者，向来不太注重名称，他最著名的一句话是一个朴实的比喻：不管白猫、黑猫，抓住老鼠就是好猫”。周刊承认，中国已经解决了粮食问题，农民以承包制的方式被解放了出来，通过创办特区和优惠政策，越来越多的外资公司也正在源源不断地进入中国，城市改革和国营企业的改革已经被提到了议事日程上。</p></blockquote></blockquote><blockquote><blockquote><p>面对咄咄逼人的日本公司，美国人除了在高科技产业上寻找对策之外，还在货币政策上发起了凌厉的反击，他们联合西方七国财政部长，强行要求日元升值，这个行动从1985年开始，第一次宣布美元对日元贬值25%，在1986年年初的几个月里又让日元升值40%，到1988年，升值达86%，最终形成了“超级日元”泡沫。骄傲自满的日本人不明就里，因货币的升值而雀跃不已，在未来的数年内，日本政府和公司大量购买美国国债和房地产，收购美国公司。从这一年起到1992年，日本人认购了一半以上的美国国债，还购买了价值720亿美元的美国房地产。正当他们雄心勃勃地炫示要“购买整个美国”的同时，泡沫日渐生大，危机如幽灵般地蹑足而至。</p></blockquote></blockquote><p>放在现在对比看看，很有意思。</p><blockquote><p>这一转变给发展中国家追赶发达国家增加了巨大的，甚至是难以克服的困难。他指出，第一，知识和资本正在加速取代体力劳动者，发展中国家所依赖的一个主要优势——劳动力丰富和价格便宜将会逐步丧失；第二，工业生产从基本上属于劳动密集型转向一开始就是知识密集型，譬如在半导体芯片和药品制造中，劳动力的成本分别只占到12%和少于10%；第三，信息和知识为基础的产业，正在取代以物质为基础的产业，成为现代经济增长的中心，这就要求一国的国民普遍具有很高的知识水平。</p></blockquote><blockquote><blockquote><p>这一转变给发展中国家追赶发达国家增加了巨大的，甚至是难以克服的困难。他指出，第一，知识和资本正在加速取代体力劳动者，发展中国家所依赖的一个主要优势——劳动力丰富和价格便宜将会逐步丧失；第二，工业生产从基本上属于劳动密集型转向一开始就是知识密集型，譬如在半导体芯片和药品制造中，劳动力的成本分别只占到12%和少于10%；第三，信息和知识为基础的产业，正在取代以物质为基础的产业，成为现代经济增长的中心，这就要求一国的国民普遍具有很高的知识水平。</p></blockquote></blockquote><h1 id="◆-1987-企业家年代"><a href="#◆-1987-企业家年代" class="headerlink" title="◆ 1987 企业家年代"></a>◆ 1987 企业家年代</h1><blockquote><blockquote><p>马胜利在两年前因承包而出名。1984年，石家庄造纸厂跟当地的很多老牌国营企业一样难以为继，800多人的工厂已经连续三年亏损，年初上级下达了实现17万元的利润指标，上任不久的厂长却迟迟不敢承诺下来。马胜利是厂里的业务科长，3月28日，他在厂门口贴出了一张“大字报”《向新领导班子表决心》，提出由他来承包造纸厂，年底上缴利润70万元，工人工资翻番，“达不到目标，甘愿受法律制裁”。这个戏剧性的大胆举动轰动了石家庄，半个月后，市长王葆华组织了160人的“答辩会”，在听了马胜利的承包演讲后，王当场做主让他承包造纸厂。</p></blockquote></blockquote><blockquote><blockquote><p>胜利根据市场需求，把原来的一种“大卷子”规格变成了6种不同的规格，颜色也由一种变成三种，还研制出“带香味儿的香水纸巾”。为了鼓励业务员开拓市场，马胜利设立了“开辟新客户有奖”，规定，开辟一个大客户，奖励10元，招揽一个小客户，奖励5元</p></blockquote></blockquote><blockquote><blockquote><p>这些措施让死水一潭的工厂顿时有了活力。承包第一个月，造纸厂就实现利润21万元，比最初整年的指标17万元还多，第一年承包期满，马胜利完成了140万元的利润。</p></blockquote></blockquote><blockquote><blockquote><p>1987年，如日中天的马胜利向社会宣布了一个让人兴奋的决定：他将创办“中国马胜利造纸企业集团”，从现在开始，在全国20个省市陆续承包100家造纸企业。</p></blockquote></blockquote><blockquote><blockquote><p>马胜利似乎成了一根神奇的救命稻草。一次次地演讲，一个个地承包，一场场地签约，到1989年年初，归到他旗下的企业已达数十家，它们都是一些规模不大、效益亏损的中小造纸厂，马胜利在没有做任何调研和评估的情况下将之统统收入帐下</p></blockquote></blockquote><blockquote><blockquote><p>没有人去深思这种旋风式承包的可行性以及所蕴含的经营风险，没有严谨的实地调研，充满随意性的承包基数，没有资源整合，没有管理、人才和技术输出，没有集团化经营的战略构想，马胜利的承包是一种“归大堆”式的简单归并，在一些时候，他的承包甚至带着一种莫名的理想主义色彩。</p></blockquote></blockquote><blockquote><blockquote><p>马胜利所考察的绝大多数是亏损企业，他对这些企业的处境十分同情和关心，他说，改革应该体现社会主义优越性，越是困难，越是亏损，越是日子难过的企业，我们越要帮助和支持。</p></blockquote></blockquote><blockquote><blockquote><p>《人民日报》发表评论《由马胜利失利想到的》，首次将“马胜利失利”与“步鑫生沉浮”相提并论。可怕的多米诺骨牌效应发生了，到年底，马胜利宣布停止吸收新企业，今后不再跨省经营，此时，已有16家造纸厂先后退出了集团。</p></blockquote></blockquote><blockquote><blockquote><p>马胜利的承包旋风和集团化梦想，便是在这样的宏观背景下出现的，这是那个时期国营企业经营者最富想象力的实验，它试图通过承包，也就是市场化的手段，以一人之力拯救百家亏损企业。</p></blockquote></blockquote><blockquote><blockquote><p>后来的评论者认为，马胜利的失利，对那种“一改就灵”、“一包就活”的改革理念是一次意外而重大的打击。</p></blockquote></blockquote><blockquote><blockquote><p>任正非有着一个十分卑微的开始。十多年的荒芜岁月，让一代人不再风华正茂，他们被岁月嘲弄，被苦难打磨，在底层社会的滚打历练和理想幻灭，让他们对生活有着近乎残酷的清醒，他们具备起了“狼”一样的素质，如果命运给了一次翻身的机遇，他们会把所有一切都用上，豪情一搏。</p></blockquote></blockquote><blockquote><blockquote><p>到1991年，华为公司还只有20多个职员，任正非常常为了贷款四处奔波。他后来说：“很多年来我天天思考的都是失败，对成功视而不见，也没有什么荣誉感、自豪感，而是危机感，也许是这样才存活了下来。”直到1992年，他研制的大型数字程控交换机面世，命运才开始对他露出第一缕迟到的微笑。</p></blockquote></blockquote><blockquote><blockquote><p>在任正非办公司后不久，11月26日，他所在的深圳市政府划出一块面积为8588平方米的土地，进行50年使用年限的有偿出让拍卖。</p></blockquote></blockquote><blockquote><blockquote><p>广东省人大通过《深圳经济特区土地管理条例》，规定土地使用权可以有偿出让、转让。又过了4个月，北京通过《宪法修正草案》，把禁止出租土地的“出租”两字删去，规定“土地的使用权可以照法律的规定转让”。</p></blockquote></blockquote><blockquote><blockquote><p>“联想未来的方向，不是我们定出来的，而是人家需要什么。因而，市场需求的导向是联想成长的前提”</p></blockquote></blockquote><blockquote><blockquote><p>在这一年，柳传志做出的另一个重要决定是，离开IBM——与这个蓝色巨人的分分合合，将是柳传志职业生涯的一条主线。</p></blockquote></blockquote><blockquote><blockquote><p>最早进入微机市场的IBM正处巅峰时刻，它的股价在8月20日超过170美元，创下公司的历史纪录，世界上所有的电脑公司都打出“与IBM兼容”的口号，并以此为荣。也许是烦透了同行们的“搭车”， IBM决定独吞整个市场，它强势推出新的“P/S”系列微机，此款机器完全基于自己的操作系统和自制芯片，其他用户的软件系统均无法兼容，IBM试图通过这种垄断性的策略，独霸微机市场。</p></blockquote></blockquote><blockquote><blockquote><p>一个巨人的错误，将催生出另外的一群巨人，IBM在1987年犯下的错误让英特尔和微软成就大业，在中国，联想把AST推销成最成功的微机产品，三年后，柳传志顺势推出了自己的联想微机。</p></blockquote></blockquote><blockquote><blockquote><p>1987年，彼得·德鲁克出版了他著名的《创新与企业家精神》[插图]一书。在这本划时代的著作中，他第一次将创新（innovation）和企业家精神（entrepreneurship）视为企业成长的基因</p></blockquote></blockquote><blockquote><blockquote><p>正是在这种充满着动荡、求变的氛围中，中国的观察家显得非常的焦急，在《中国改革的历史方位——时代的挑战与中青年理论工作者的思考（上）》一文中，三位青年记者急切地呼喊，“中华睡醒的巨龙该惊起了”、“加快改革！我们的时间已经不多了”。他们同时观察到，中国社会正从温饱型向小康型转轨，人均GDP进入400～1000美元的区间，而这正是一个社会不稳定期，当时32岁的复旦大学副教授王沪宁称之为“发展中国家的政治不稳态”。在这期间，民众的改革期望上升，消费欲望膨胀，而社会体制则相对落后，国家的宏观治理能力跟不上迅速衍变的产业形势。</p></blockquote></blockquote><blockquote><blockquote><p>“改革是一项特别复杂的社会系统工程，不可能在事先设计得天衣无缝的情况下进行，改革过程中不同利益群体的摩擦和碰撞是不可避免的。”</p></blockquote></blockquote><blockquote><blockquote><p>他们还没有完全意识到这场经济变革对中国社会可能造成的制度冲击、观念颠覆和阶层分野。</p></blockquote></blockquote><h1 id="◆-1988-资本的苏醒"><a href="#◆-1988-资本的苏醒" class="headerlink" title="◆ 1988 资本的苏醒"></a>◆ 1988 资本的苏醒</h1><blockquote><blockquote><p>在企业登记处，办事员热情地问他：“你想注册成国有性质的还是集体性质的？”王文京说：“我想办自己的企业。”办事员说：“那你走错门了。”在当时要注册高新技术企业，除了国有和集体，没有别的选择，有不少人为了图便利，便顺便挂靠一些国营或集体企业，日后引发的很多产权纠纷便因此而生。</p></blockquote></blockquote><blockquote><blockquote><p>1988年可以被看成是这样的一个年份：在此之前，中国民间公司的出现和发展是无意识的，它们更多的是为了让自己免于饥饿，而在此之后，对资产的追求成了新的主题。</p></blockquote></blockquote><blockquote><blockquote><p>产权意识的苏醒，意味着从计划体制中成长起来的第一代中国企业家开始了资本人格上的独立</p></blockquote></blockquote><blockquote><blockquote><p>柳传志决定去香港办一家贸易公司，他觉得这是联想业务发展的必要一步。他选中替代IBM微机的AST微机便是由一家香港电脑公司生产的，新创办的香港联想公司将代理北京联想的所有进口业务，在某种意义上，它既是一个代理中间商，又是一个重要的利益变压器。</p></blockquote></blockquote><blockquote><blockquote><p>北京联想、中技转和导远各出资30万港币，均分股份，总经理由吕谭平出任，公司所需要的流动资金由中技转解决。一年后，香港联想代理的微机营业额达到2亿元，利润将近2000万元，投资者的当年回报率超过20倍。</p></blockquote></blockquote><blockquote><blockquote><p>1996年，柳传志将吕从香港联想劝退，后者以当时市值将所有股份兑换成现金，因而成为第一个因联想而成为亿万富翁的自然人。</p></blockquote></blockquote><blockquote><blockquote><p>1988年的柳传志显然已经开始直面这个问题。联想是中科院计算所的全资国有企业，柳传志尚没有变动资本性质的胆量和方式，不过在新办子公司的时候，他想到了引进私人合资者的办法。在后来的十多年里，这一直是很多国有企业在悄悄尝试的办法：通过引进私人投资者的方式，组建一个产权清晰的子公司，以此形成一个新的资本操作平台，来推动乃至完成母公司的资本改造。</p></blockquote></blockquote><blockquote><blockquote><p>跟其他改革典型不同的是，面对鲜花、荣誉，这个修车匠出身的中年人从来没有头脑发热过。</p></blockquote></blockquote><blockquote><blockquote><p>在工作之余，他把很多时间花在读书和学习上，在大学教授的辅导下，他提出了“企业利益共同体”的新概念，在一篇发表在《求是》上的文章中，他直言：“国营企业的整体素质比乡镇企业高，技术力量比乡镇企业强，为什么有些国营企业经济效益反而低于乡镇企业？我认为，主要是因为相当一部分国营企业在推行承包责任制的实践中，并没有真正解决两权分离的问题，在分配形式上没有彻底打破‘大锅饭’，还没有确立职工在企业中的主人翁地位。而乡镇企业在这些方面有明显的优势。”</p></blockquote></blockquote><blockquote><blockquote><p>鲁冠球发言：“承包应该是全权承包，应该将自主权充分地交给企业，如果没有人事权、投资权，企业就无法到市场上去竞争，无法打入国际市场。”</p></blockquote></blockquote><blockquote><blockquote><p>鲁冠球进而提出了“花钱买不管”。他将万向节厂的净资产评估为1500万元，然后与镇政府谈判，提出将其中的750万元归乡政府，其余归“厂集体”所有，乡政府的利益以基数定额、逐年递增的上缴利润来体现。</p></blockquote></blockquote><blockquote><blockquote><p>尤其高明的是，这个产权设计外部边界清晰，内部边界模糊，鲁冠球没有为自己争取个人股份，他聪明地绕开了最敏感的地带，却为日后的渐变留下无限的可能性。</p></blockquote></blockquote><blockquote><blockquote><p>承包制无法解决经营者与政府的矛盾关系，作为企业的主管和产权所有者，政府对之的直接指挥仍然非常严重，经营者的权利随时可能被轻易地剥夺。</p></blockquote></blockquote><blockquote><blockquote><p>与此同时，企业内部的争斗日渐激烈，上级指派下来的党委书记与邓韶深不和，两人对企业的发展战略各持己见，前者无条件听令主管部门的指挥，而邓则有自己的一盘棋。他后来也承认，“当时万宝的很多规划及具体的经营决策，直接来自中央办公厅和国家体改委，这给地方政府的感觉就是邓韶深已经尾大不掉”。</p></blockquote></blockquote><blockquote><blockquote><p>当上面也发现情况有点不妙的时候，他们又认定这是邓韶深销售不力造成的。在党委书记的决策下，企业改变原来的销售方式，由之前的销售公司统一经营，改为集团内部的冰箱制造厂“分级销售”，于是，销售体系和批零价格大乱</p></blockquote></blockquote><blockquote><blockquote><p>1986年前后，深圳市政府要在国营公司系统推行股份制试点，当时国营企业的日子还比较好过，很多人认为搞股份制设置董事会，又增加一个“婆婆”，所以没有企业响应。只有王石自告奋勇，他意识到，“万科正处在十字路口，股份制改造是一个让万科能独立自主经营的机会”。</p></blockquote></blockquote><blockquote><blockquote><p>在李灏的暗中支持下，万科的股改方案在被搁置一个月后终获通过。12月，万科发行股票2800万股，每股一元</p></blockquote></blockquote><blockquote><blockquote><p>一年多后深圳股市开张，万科以0002号正式上市。商业作家王安在《股爷，您上座》一书中感慨说：“第一个吃螃蟹的人，要么死去，要么免费。”[插图]事实是，倒霉的万宝“死去”，幸运的万科“免费”。</p></blockquote></blockquote><blockquote><blockquote><p>吹嘘得很厉害的上海股票市场实际上是一个不确切的错误名词。大约有140家本地企业已发行了股票，然而只有两家企业被中国人民银行批准上市出售。”</p></blockquote></blockquote><blockquote><blockquote><p>很显然，如果没有一个规范化的资本市场，那些发行了股票和债券的企业无非是向一群陌生人借到了一笔钱而已。</p></blockquote></blockquote><blockquote><blockquote><p>高西庆们写出了一份《中国证券市场创办与管理的设想》，这是第一份系统阐述中国股票市场的建设性文本。</p></blockquote></blockquote><blockquote><blockquote><p>张透露说，今年的中国改革到了一个关口，出现了通货膨胀、经济过热和抢购风，农业、工业和商业，都面临一系列的困难。中央决定，花三年时间搞治理整顿，怎么改，可以归纳为四个方面的改革，两个是宏观调控方面的，一个是企业制度，到底该怎么看股份制，以及该不该推广股份制，还有一个就是建立资本市场这件事。</p></blockquote></blockquote><blockquote><blockquote><p>“公有制为基础的企业与私有制为基础的企业，股票上市有何区别？”另一些领导则关心：“公有制企业上市后，它的所有制性质会不会改变？”在当时，“姓‘资’还是姓‘社’”是所有经济改革要回答的第一个是非题。</p></blockquote></blockquote><blockquote><blockquote><p>跟“触霉头”的小赵相比，半年后的杨怀定就要幸运得多了。他在看到报上的新闻后，第二天就凑了10万元直奔安徽合肥。他的算盘是，当时各地的国库券价格都不同，只要有价差就能赚到钱。</p></blockquote></blockquote><blockquote><blockquote><p>2005年，汉口火车站站长刘志祥被判刑，他把持“计划配票权”，把大量紧俏车票指令分配给自己的合作者，然后加收“手续费”再投放市场，“一般是座位票最低加5元，春运期间加30元”。刘靠倒票及受贿，9年非法得4745万元</p></blockquote></blockquote><blockquote><blockquote><p>北京大学的经济学家周其仁在分析此案时说：“价格管制是天下最事与愿违的政策。”</p></blockquote></blockquote><blockquote><blockquote><p>弗里德曼是当时国际最知名的价格理论和货币理论大师，在会谈中，一向坚持自由市场的他极力主张中央政府应该放开价格管制，他认为中国的改革到了“最后的时刻”，香港《信报》引用他的观点说，“不应该把放开价格与通货膨胀混为一体，如果放开价格，仅是部分商品会涨价，在最初几天，人们可能会感到痛苦，但很快会发现价格并不一定会轮番上涨”。</p></blockquote></blockquote><blockquote><blockquote><p>弗里德曼对四川省长说：“如果你想把老鼠的尾巴砍断的话，不要慢慢地一截截地砍，一下砍掉就行了，长痛不如短痛。”省长请教说：“教授先生，你知道我们中国的老鼠是不同的，它们有很多不同的尾巴互相纠缠在一起，您先砍哪一根？”</p></blockquote></blockquote><blockquote><blockquote><p>我的答案是，把所有的尾巴都一同砍掉。”2001年4月，这位经济学家在中山大学演讲时承认：“弗里德曼一向主张放开价格管制，1988年我们向中国的领导人推荐这一点，结果一团糟。”</p></blockquote></blockquote><blockquote><blockquote><p>当前物价的不正常波动是计划体制和价格双轨制所造成的，要摆脱体制怪兽的缠绕，就要用非常的霹雳手段，让物价迅速地进入到市场调节的轨道之中。</p></blockquote></blockquote><blockquote><blockquote><p>当月，上海调整280个种类商品的零售价，这些商品大都属于小商品或日常生活必需品，涨价幅度在20%～30%之间。4月，国务院推出主要副食品零售价格变动给职工适当补贴的方案。5月19日，新华社发表通电：“中国的物价改革是一个大胆行动，要冒一定的风险，但是中央有信心把这件事办好……”</p></blockquote></blockquote><blockquote><blockquote><p>“今天，中国的改革正在失控。为了应对危机，物价改革在上个月被冻结。突如其来的政策转向给中外投资者带来了一段前景不明的困惑期。中国目前正在进入紧急控制状态，澳大利亚使馆的一位经济学家说：我们正在见证一场旨在恢复消费者信心的地毯式运动……”</p></blockquote></blockquote><blockquote><blockquote><p>在通货膨胀中利益受到损害的民众对“价格双轨制”下大发横财的“官倒”更为痛恨，并由此产生了“改革造成社会不公”的印象。</p></blockquote></blockquote><h1 id="◆-1989-“倒春寒”"><a href="#◆-1989-“倒春寒”" class="headerlink" title="◆ 1989 “倒春寒”"></a>◆ 1989 “倒春寒”</h1><blockquote><blockquote><p>在经济上，日本的经济扩张走到了巅峰时刻。9月10日，一则令人震惊的消息在纽约和东京同时宣布，日本索尼公司以34亿美元收购美国哥伦比亚影片公司。10月30日，又一个新闻轰动全球，日本三菱房地产公司以8.46亿美元收购美国洛克菲勒公司51%的股份</p></blockquote></blockquote><blockquote><blockquote><p>日本右翼政治家石原慎太郎和索尼公司创始人盛田昭夫合著出版了轰动一时的政论书籍《日本可以说不》[插图]，全书洋溢着不可一世的信心。日本经济从20世纪70年代开始复兴，在过去的18年里，国民生产总值增长了450%，民族自信心更是空前膨胀。</p></blockquote></blockquote><blockquote><blockquote><p>：“我们所考察的历史在其演进的过程中充满了崩溃和重构、革命和进化、征服和发展的循环交替。”</p></blockquote></blockquote><blockquote><blockquote><p>我们遇到了前所未有的严重问题。最突出的就是经济生活中明显的通货膨胀、物价上涨幅度过大，党政机关和社会上的某些消极腐败现象也使人触目惊心。”尽管中央政府开始采取强硬的宏观紧缩政策，过热的经济开始降温，然而因通货膨胀和闯关失利而造成的社会心态失衡并没有很快地消退。</p></blockquote></blockquote><blockquote><blockquote><p>经济局势的动荡，加上苏联和东欧地区的政局持续“恶化”，使意识形态的争论变得非常敏感，一些人士担心私营企业的膨胀发展最终将造成社会主义中国的“变色”，那些针对改革政策的质疑从四面八方射来。</p></blockquote></blockquote><blockquote><blockquote><p>便是在这种思潮的影响下，自1981年以来规模和力度最大的、针对私营企业的整顿运动开始了。</p></blockquote></blockquote><blockquote><blockquote><p>整治首先是从对私营企业的偷漏税打击开始的。民营经济发达的江苏省从5月开始重点普查私营企业的税收，得出的结论是“当前个体户偷漏税情况非常严重，占到企业总数的80%”</p></blockquote></blockquote><blockquote><blockquote><p>整治的第二步，是开始清理整顿国营体系外的新兴企业。它们被认为是与国营企业争夺原材料、造成通货膨胀和市场失控的罪魁祸首。</p></blockquote></blockquote><blockquote><blockquote><p>于是在各部门的协作配合下，更大力度的整顿开始了。其主要的手法有两种，一种是直接宣布它们为“劣质产品”，然后强行停产关厂；另一种是以违反中央文件为由，要求其停止生产，</p></blockquote></blockquote><blockquote><blockquote><p>在严厉的税收和行业整顿之外，另一个措施就是对流通环节开始清理。当时，全国已经出现了数千个专业市场，它们成为城乡消费品的集散地，也成为乡镇企业倾销和采购的枢纽，于是对之的整顿便成“蛇打三寸”之举。</p></blockquote></blockquote><blockquote><blockquote><p>作为早期改革的标本人物，年广久在1989年的遭遇并非偶然事件。这一年，中国的企业改革陷入了“倒春寒”。</p></blockquote></blockquote><blockquote><blockquote><p>宏观调控所造成的经济骤冷，对通货膨胀下的投资过热确是起到了遏制的效应，不过却也让所有的商业活动变成一局乱棋。</p></blockquote></blockquote><blockquote><blockquote><p>首先，匆忙恢复计划性调控，造成商品从过热陡然变成滞销。</p></blockquote></blockquote><blockquote><blockquote><p>更为严重的是，因为政策的紧缩变动，企业之间原本正常的货物和资金往来瞬间紊乱，资金的循环拖欠构成了一个无始无终的怪圈，</p></blockquote></blockquote><blockquote><blockquote><p>这其中，受到冲击最大的是那些原本就反应不太灵敏的国营大型企业。</p></blockquote></blockquote><blockquote><blockquote><p>“改革虽然已经10年了，但从企业现状看，眼下还不能没有‘婆婆’。企业不但要找市场，还得找市长，政府不帮助解决，光靠企业，没有那么大的本事。”国营企业家“既要找市场，又要找市长”——这句妙论就是从这里出来的，它后来成了所有国有企业经营者的不二法门。</p></blockquote></blockquote><blockquote><blockquote><p>1月13日，邓小平在人民大会堂会见日中经济协会访华团，并借这个机会，正式向政治生涯告别。邓公侃侃而谈。这位已经85岁高龄的老人亲手发动了中国的经济变革，在过去的11年里，他遭遇险滩无数，始终信心满满，他告别政治生涯前的最后一次讲话，仍然坚定于改革的继续，这无疑给全国的改革者以无限的信心。更让大家始料未及的是，三年后，他还将以一种十分新奇而意外的方式，再次启动中国经济快车的引擎。</p></blockquote></blockquote><blockquote><blockquote><p>，在当年度《财富》评选出的世界500强排行榜中，中国银行成为第一个上榜的中国公司。这意味着在全球的商业观察家眼中，中国企业已经成为一个不容忽视的群体。在当时国内，这条新闻几乎没有被人关注到，直到1996年前后，“进入世界500强”才突然间成为中国公司的共同梦想。</p></blockquote></blockquote><blockquote><blockquote><p>从一开始，史玉柱的豪赌天性以及他在营销上的超级天才就毕现无遗。在公司刚刚成立不久，他就做出了一个所有部下都反对的决定：全国各地的电脑销售商只要订购10块巨人汉卡就可以免费来珠海参加巨人的销售会。一时间200多位经销商从天南地北齐聚珠海，史玉柱以数十万元的代价，闹腾腾地编织起了一张当时中国电脑行业最大的连锁销售网络。</p></blockquote></blockquote><blockquote><blockquote><p>。从产品特征可以发现，所有的巨人产品都是针对中国市场的“汉化”产物，它在技术上并不复杂，却比中关村里那些只知道一味引进、专事倒卖的电脑公司有竞争力得多。巨人很快成为中国知名度最高、成长性最好的高科技企业。</p></blockquote></blockquote><h1 id="◆-1990-乍热骤冷"><a href="#◆-1990-乍热骤冷" class="headerlink" title="◆ 1990 乍热骤冷"></a>◆ 1990 乍热骤冷</h1><blockquote><blockquote><p>它可能标志着旧时代的结束，也可能标志着新时代的开始。我们相信，人类已经决定要抓住积极的一面。人类的心灵深处有一种对生命、对理想世界的承诺</p></blockquote></blockquote><blockquote><blockquote><p>在中国的改革史上，温州是一个很容易让人产生“误读”的地方。这里是中国私营企业最早萌芽的地方。在一些人士的眼中，它是“资本主义的温床”，是一颗必须被割除的毒瘤。而在另一些人的心目中，它却好像是市场经济的“麦加”，是民间力量突破旧体制的急先锋。</p></blockquote></blockquote><blockquote><blockquote><p>早期温州商人在商业上所表现出来的智慧和狡黠，与硬骗强取截然不同，却将原始积累过程中的那种没有道德底线的狡黠与血腥，展现得淋漓尽致。</p></blockquote></blockquote><blockquote><blockquote><p>温州商品的质量低劣，在很早的时候就为人诟病。此地与福建晋江、福建石狮被并列为全国“三大制假中心”（还有人将充斥了低劣电脑产品的中关村也列入其中，并称“四大假”）</p></blockquote></blockquote><blockquote><blockquote><p>对柳市的整顿是1990年治理整顿的一个缩影。当时，在广东、浙江等沿海各地，以打击假冒伪劣为主题的整顿活动此起彼伏。</p></blockquote></blockquote><blockquote><blockquote><p>这个新闻用最生动的方式，让全国读者都看到了假冒伪劣产品对人们日常生活的侵扰，也因此可以团聚起全民的讨伐气焰。不过，另一个正在发生的事实是，对假冒伪劣的整治，在有些时间，也会成为各级政府保护国营企业既得利益的某种手段和理由。</p></blockquote></blockquote><blockquote><blockquote><p>这些私人小厂“没有经过行业主管部门审查批准或立项，没有完备的质量检测手段，没有完善的防射线污染设施，没有完整的技术文件、产品图纸、工艺要求”。就在这种赤手空拳的情况下，它们开始与大厂抢食</p></blockquote></blockquote><blockquote><blockquote><p>《经济日报》对此评论说，对许多国家骨干企业的厂长来说，本身既受到种种体制上的束缚，动弹不得，外部又受到那些精灵般的、不按牌理出牌的私人工厂的骚扰，唯一能做的就只有苦笑了。</p></blockquote></blockquote><blockquote><blockquote><p>在此次治理整顿中，这些小厂受到了严厉的整治，其理由是“盲目发展、重复布点、重复建设，严重影响国家行业规划”。</p></blockquote></blockquote><blockquote><blockquote><p>这种专门指向体制外企业的针对性整顿，在客观上，让一些行业秩序得到了恢复，也的确打击了日渐蔓延的假冒伪劣之风，但不可否认的是，同时造成了民营公司很大的困扰。</p></blockquote></blockquote><blockquote><blockquote><p>私营企业正在受到严格的控制，虽然它们得到允许可以与较大的国营企业并存，但是，国营企业被放在优先位置上，绝不允许被取消</p></blockquote></blockquote><blockquote><blockquote><p>乡镇企业被戏称为“气候经济”，也就是随着政策的松与紧而波动性成长。</p></blockquote></blockquote><blockquote><blockquote><p>在浙南和珠三角地区开始流行一种全新的企业模式：股份合作制企业。</p></blockquote></blockquote><blockquote><blockquote><p>股份合作制企业又是精于变通、擅长“绕着红灯走”的温州人发明的。据记载，第一家股份合作制企业是温州市城郊的瓯海登山鞋厂，它是1985年5月由26个农民集股7.2万元创办的，这些农民既是工厂的股东，又是员工，所以被称为“股份合作”，是一种“新型的集体经济”。不过，这种合作制一旦规模大起来，就经不起推敲了，因为不可能让后来招用的工人都一一地成为股东。</p></blockquote></blockquote><blockquote><blockquote><p>苍南县在一家名叫桥墩门啤酒厂的小企业搞试点，设计出“股份合作企业章程”，此章程的微妙之处在于，它规定“企业财产中有15%是企业全体劳动者集体所有的不可分割的公共积累资金”，“它的独立存在，是股份合作制企业区别于合伙私营企业和作为集体经济组成部分的重要标志之一”</p></blockquote></blockquote><blockquote><blockquote><p>一家私营企业要“改造”成股份合作制企业也可谓非常之便捷：只要宣布本企业15%的资产为“全体劳动者的公共积累”即可。</p></blockquote></blockquote><blockquote><blockquote><p>当私营企业备受一些思潮侵扰之际，股份合作制成了一个理想的过渡模式和“避风港”。</p></blockquote></blockquote><blockquote><blockquote><p>江浙及珠三角一带的很多私营公司，以股份合作制的面目发展了相当长的时间，在政策日渐宽松后，它们又以各种手段剪掉了那条仅仅在名义上存在的“尾巴”，恢复其本来的产权性质。</p></blockquote></blockquote><blockquote><blockquote><p>在通货膨胀被强行控制住之后，消费的持续低迷立即成为一个新的全国性苦恼。老百姓开始持币惜购，银行存款猛增，所有消费品和物资市场一片萧条</p></blockquote></blockquote><blockquote><blockquote><p>浦东开发是上海起飞的战略一翼，那么，证券交易所的建立则无疑是另外一翼。早在3月，朱镕基出访美国、新加坡等地，在抵达最后一站香港时，他在记者招待会上不动声色地说，上海证券交易所将在年内成立。</p></blockquote></blockquote><blockquote><blockquote><p>尉文渊当时面临的状况是，全上海可作为会员的证券公司只有3家：万国、申银和海通，比较成型的股份制企业也只有11家，够上市资格的则只有6家。就这么“三把蔬菜”“六块肉”，尉文渊硬是把它炒成了一桌菜。</p></blockquote></blockquote><blockquote><blockquote><p>当日，有30种证券上市，国债5种，企业债券8种，金融债券9种，公司股票8种。毕竟有40年没有搞资本游戏了，所有人都手忙脚乱</p></blockquote></blockquote><blockquote><blockquote><p>上海即将开市的消息，在南方的深圳引起了连锁反应。在过去的一年多时间里，深圳一直在向中央申请开办证券交易所，然而迟迟未得回复。尉文渊在上海一阵紧锣密鼓，让深圳人不再坐等。11月22日，深圳市委书记李灏约见深交所筹备组负责人禹国刚，问：“什么时候可以开市？”禹答：“如果你们今天拍板，我们明天就开业。”</p></blockquote></blockquote><blockquote><blockquote><p>中国的资本市场在1990年年底总算形成了自己的“双市格局”。以这两个交易所为中心，中国公司将演出一轮又一轮的商业大戏。</p></blockquote></blockquote><blockquote><blockquote><p>无论是海尔、联想还是长虹，1988年之前的国营企业序列中都是寂寂无名之辈，也没有得到国家政策的特殊倾斜，然而它们都因为有一位杰出的领导者，并且在各自的行业中率先完成了技术改造和管理提升</p></blockquote></blockquote><blockquote><blockquote><p>那些早早来到中国的外国品牌都尝到了甜头。最早来到中国的法国服装品牌皮尔·卡丹开在北京的一家专卖店每天就有2.3万元的销售额，一件不起眼的服装标价就高达1500元。9月，皮尔·卡丹本人又来了一次北京，他被特许在以前的皇宫紫禁城里举办了一场热闹的时装秀，在过去的几百年里，这是破天荒的第一次。这位很有商业头脑的时装大师还同时代理了迪奥、瓦伦蒂诺等意大利品牌在中国的销售权。</p></blockquote></blockquote><blockquote><blockquote><p>作者惊呼：“任凭洋货长驱直入，充斥市场，其严重后果令人不寒而栗。”在这样的言论背后，人们似乎已经看到，在不久的将来，必定会有一次国货振兴的运动。</p></blockquote></blockquote><blockquote><blockquote><p>在中国，曾经让人们无限憧憬的1990年，就这样出乎预料地展露出全民商业化的面貌，它跟1978年刚刚开始改革时的向往实在有太大的出入。人们变得越来越实际，如何尽快地改变自己的生活状态，如何发财致富享受生活，成为一个公开而荣耀的话题</p></blockquote></blockquote><h1 id="◆-1991-沧海一声笑"><a href="#◆-1991-沧海一声笑" class="headerlink" title="◆ 1991 沧海一声笑"></a>◆ 1991 沧海一声笑</h1><blockquote><blockquote><p>1991年的中国弥漫着“改革是姓‘社’还是姓‘资’”的硝烟。而事实却是，争论如江面上迷眼的乱风，实质性的经济变革却如水底之群鱼，仍在坚定地向前游行。</p></blockquote></blockquote><blockquote><blockquote><p>三年多来的宏观调控，让过热的经济趋于平稳，各项经济指标大大降了下来，人们在改革上变得缩手缩脚，尽管中央提出了浦东开放，并重申海南特区政策不变，但是，在总体的发展思路上，各级官员仍然摸不透未来的方向。</p></blockquote></blockquote><blockquote><blockquote><p>，邓小平都是在上海过的春节，2月15日至3月22日，上海《解放日报》根据他在上海期间的讲话，先后发表三篇署名“皇甫平”[插图]的评论，提出要继续坚持解放思想，敢冒风险，大胆改革，不要再囿于姓“社”姓“资”的诘难。</p></blockquote></blockquote><blockquote><blockquote><p>，因为它并未标注出思想的来源，便引起一些人士的指责和围攻。某杂志在4月20日发表《改革开放可以不问姓“社”姓“资”吗？》一文，说：“不问姓‘社’姓‘资’，必然把改革开放引向资本主义道路而葬送社会主义事业。”[插图]另一本杂志推出《重提姓“社”与姓“资”》一文，说：“一切不愿做双重奴隶的中国人，在改革大道上前进时，有责任也有权利问一问姓‘社’姓‘资’，时刻提防不要偏离改革的方向。”[插图]8月和9月，北京报纸相继发表《问一问姓“社”还是姓“资”》和《当前改革的三个问题》，认为：“实行改革开放必须区分姓‘社’还是姓‘资’。原因很简单，因为现实生活中确实存在着姓‘社’和姓‘资’两种不同的改革观。”</p></blockquote></blockquote><blockquote><blockquote><p>中国改革史的一个特点便是，人民的实践有时候会走在中央政策的前面，一切的改革和突破尽管会阶段性地受到意识形态争论的影响和干扰，但是并不能真正地阻挡它前行的脚步。</p></blockquote></blockquote><blockquote><blockquote><p>“姓资姓社”的争论，在经济领域便体现为公有制经济与私营经济的比例问题，有些人士担忧的正是后者的迅速增长将改变社会主义国家的性质。[插图]</p></blockquote></blockquote><blockquote><blockquote><p>记者在北京最大的和平里综合集贸市场上看到的景象是，“国营、个体的摊位泾渭分明，前者的守摊人缩着脖子，躲在柜台后面，一副十足官商作风，个体练摊的则又是叫卖，又是拿着样品比画，热热闹闹地吸引绝大部分的顾客。</p></blockquote></blockquote><blockquote><blockquote><p>一位北京代表说：“我们心头像是压上了一块大石头，这石头就是国营的大中型企业。”从1984年起，各项改革措施年年创新，从利改税、承包制、政企分开，到优化组合、股份制、租赁制，药方开出了一帖又一帖，却罕有成效。近年来，即便是在诸多“倾斜”、“保护”以及创纪录的大批信贷资源源源注入之后，国营企业的表现依旧让人们无法轻松起来</p></blockquote></blockquote><blockquote><blockquote><p>种种迹象表明，传统意义上的国营企业已经在日渐激烈的市场环境中日薄西山了，两年来的治理整顿和市场萧条，让那点仅有的进取心也被消磨殆尽</p></blockquote></blockquote><blockquote><blockquote><p>但此言一出，举国学界竟没有人与之讨论。国家开始重新思考国营企业的振兴战略，让每一家国营企业都获得生机看来是不可能了，因此，除了继续千方百计在政府扶持、体制松绑上下功夫外，一个更为明智的做法似乎是：收缩战线，让那些实在扶不起来的“阿斗们”自行了断。</p></blockquote></blockquote><blockquote><blockquote><p>《少数企业“死”不了，多数企业“活”不好》，文章称：“产业结构调整之所以困难，症结就在于我们的少数企业（尤其是国营企业）死不了——风浪来了，大家匍匐在地，风浪过了，全都站起身来，产业还是那个产业，结构还是那样的结构。不是我们不想让一些企业活，而是客观环境不允许这些企业活。”</p></blockquote></blockquote><blockquote><blockquote><p>事实上，让那些实在活不下去的国营企业死掉，不仅仅是一个观念解放的问题，还有很多实际上的困难，最主要的便是下岗工人的善后问题。</p></blockquote></blockquote><blockquote><blockquote><p>身为工人阶级为荣，从来没有下岗的思想准备和再就业的能力，在很多老牌企业里，更是全家上下都在一厂工作，其“工人身份”甚至是可以传代世袭的。要让这些企业一死了之，必定会引发强烈的社会动荡。</p></blockquote></blockquote><blockquote><blockquote><p>四川让特困企业“安乐死”的主要办法，是让活得还不错的国营企业，兼并那些亏损的同行，同时，政府给予前者更多的优惠政策和扶持</p></blockquote></blockquote><blockquote><blockquote><p>像钢管厂那么“强势”的企业似乎不多，绝大多数的兼并都是政府意志的体现，“归大堆”带来的后遗症又将引发新一轮的企业兴衰。</p></blockquote></blockquote><blockquote><blockquote><p>对陷入困境或处于市场边缘的国营资产的分割、重组与出售，将成为财富积累和改革成果分配的重要方式。如果说，在1988年，“资本”这个曾经被视为洪水猛兽的万恶名词已经重新归来，那么在今年，它已经散发出越来越迷人的金色光彩，那些最早认识到它的人们将一一成为新的财富宠儿。而</p></blockquote></blockquote><blockquote><blockquote><p>计划体制已经在内外交困中走到了逐渐瓦解的边缘，缺乏市场开拓能力而造成货物积压仍然是困扰很多国营企业的最大难题，这无疑给很多像牟其中这样的大小“倒爷”提供了巨大的运营空间。</p></blockquote></blockquote><blockquote><blockquote><p>仰融曾经向人背诵过莎士比亚的一段名言：“世事的起伏本来就是波浪式的，人们要是能够趁着高潮一往直前，一定可以功成名就，要是不能把握时机，就要终身蹭蹬，一事无成。”</p></blockquote></blockquote><blockquote><blockquote><p>仰融在1991年前后的这一系列资本操作，已经表现得非常娴熟——以少量资金控股资本质量良好却暂时陷入困境的国有企业、在免税天堂设立“壳公司”、以“中国股”概念在海外上市套现。</p></blockquote></blockquote><blockquote><blockquote><p>“十年改革，改来改去企业还是躺在政府的怀抱里。从今天开始，咱两家的关系变了，变成你注册我登记，你赚钱我收税，你发财我高兴，你违法我查处，你破产我同情。</p></blockquote></blockquote><blockquote><blockquote><p>陈光通过股份制、股份合作制、无偿转让产权、破产等7种形式，将全市272家乡镇办以上国营或集体企业都出售给了个人，陈光因此得下一个绰号——“陈卖光”。</p></blockquote></blockquote><blockquote><blockquote><p>安德鲁·S·瑞普波特和S·哈利维在《哈佛商业评论》上发表了《不生产计算机的计算机公司》，瑞普波特和哈利维在一开始就断言，“这种竞争力的减弱是不确定的，但是这种恐惧却是不应该有的”。而随后他们做出的预言在10年后看来几乎就是事实本身：“到2000年，最成功的计算机公司将不再是那些生产计算机的公司，而是那些购买计算机的公司，这些领导者将会充分利用价格低、性能高的硬件来创造和提供新的应用。”</p></blockquote></blockquote><blockquote><blockquote><p>对于众多顶级的计算机公司来说是个好消息——假如它们忘记过去，并对技术、生产和营销战略进行重新定位来迎接新的现实。美国计算机公司的战略目标不应该是制造计算机，而应该是在计算中创造永恒的价值”。瑞普波特和哈利维所提出的观念，影响了美国IT产业的走向，他们所提出的三个新的投资点最终造就了三家最成功的美国电脑公司：软件开发——微软；系统整合——IBM；营销——戴尔。</p></blockquote></blockquote><blockquote><blockquote><p>然而，到1991年春天，情形突然大变，国际计算机大公司集体降价，全球微机芯片价格一日三变，以进口组装为核心力的联想自然受到最大的冲击，公司仓库里的芯片存货价格竟跌去70%。</p></blockquote></blockquote><blockquote><blockquote><p>45岁的柳传志看上去似乎显得很疲倦”。而到这时，他已经急如热汤中的青蛙，在短短三个月里，香港联想亏损5000多万元，柳传志飞到香港亲自督战，他断然决定，不顾任何公众影响，把组装生产线从香港撤回深圳，将香港联想的100名工人全部裁掉，同时，大规模缩减公司的行政和市场开支。另外，重拾代理业务，替跨国品牌在国内销售打印机、绘图仪和扫描仪等，多管齐下，总算到年底熬过难关。连</p></blockquote></blockquote><blockquote><blockquote><p>联想在这次黑色风暴中的表现，可以被看作是中国新型公司冲击全球市场的第一次挫败。此后将近10年的时间里，柳传志一再宣称“中国市场是最大的国际市场”，直到2005年，已非昔日可比的联想在争议声中收购了IBM的PC事业部。</p></blockquote></blockquote><blockquote><blockquote><p>中国对美国的贸易顺差已经攀升至90亿美元，仅次于日本，成为第二大贸易顺差国。《商业周刊》披露说，美国海关组织了300名报关代理人、贸易专家正在进行一项涉及面空前广泛的调查，牵涉到了20多家与美国进行贸易的中国公司。纽约的美国检察办公室正在准备对这些中国公司提出多达100项的指控，包括贸易欺诈和洗钱</p></blockquote></blockquote><blockquote><blockquote><p>跨国公司在中国的倾销性行动则加快了步伐。</p></blockquote></blockquote><blockquote><blockquote><p>在其他行业如新兴建材、洗涤用品、食品饮料等，国内企业都因跨国公司的低价竞争而逐渐丧失了市场。</p></blockquote></blockquote><h1 id="◆-1992-春天的故事"><a href="#◆-1992-春天的故事" class="headerlink" title="◆ 1992 春天的故事"></a>◆ 1992 春天的故事</h1><blockquote><blockquote><p>“基本路线要管一百年，动摇不得。”“判断各方面工作的是非标准，应该主要看是否有利于发展社会主义社会的生产力，是否有利于增强社会主义国家的综合国力，是否有利于提高人民的生活水平。”“社会主义的本质，是解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕。”“计划多一点还是市场多一点，不是社会主义与资本主义的本质区别。”“改革开放胆子要大一些，抓住时机，发展自己，关键是发展经济。发展才是硬道理。”“中国要警惕右，但主要是防止‘左’。”“要坚持两手抓，两手都要硬。两个文明建设都搞上去，这才是有中国特色的社会主义。”</p></blockquote></blockquote><blockquote><blockquote><p>中共十一届三中全会提出“把全党工作重点转移到社会主义现代化建设上来”。15年后，又是在他的一力主导下，十四大确立了市场经济体制的目标。[插图]之后的中国经济进入一个加速发展的阶段，各项投资明显加大，在主要的经济指标上竟与宏观过热的1988年有得一比，国民生产总值增长12%，工业增长20%，全社会固定资产投资增长36%，1988年的这三个指标分别是11.2%、17.7%和25.2%。[插图]</p></blockquote></blockquote><blockquote><blockquote><p>“92派”说，他们是中国现代企业制度的试水者，和之前的中国企业家相比，他们应该是中国最早具有清晰、明确的股东意识的企业家的代表，这些人往往在政府部门待过，有深厚的政府关系，同时又有一定的知识基础，具有前瞻性的预测能力</p></blockquote></blockquote><blockquote><blockquote><p>中策现象”由此而生。南方谈话后，发展意识复苏，举国期盼开放而不得其法，黄鸿年高举“为改造国企服务”的大旗，自然一呼百应。通过前两年的改革，各地对于通过引进外资来改造国营企业已渐成共识</p></blockquote></blockquote><blockquote><blockquote><p>从以上三地情节来看，中策购并基本上都是“市长工程”，黄鸿年的做法如出一辙：与政府一把手直接沟通，借南方视察东风，用好政治牌，高举高打，以气造势。泉</p></blockquote></blockquote><blockquote><blockquote><p>而黄专选资本质量好、有赢利前景的国家骨干企业；马收进企业后，没有将之改造的能力，而黄从一开始就做好了打包出售的计划。</p></blockquote></blockquote><blockquote><blockquote><p>黄鸿年的购并终于让国营企业实现了多年未有突破的产权多元化，这将使得国营企业改革彻底地走出笼子里改革的老路子。中国社会科学院副院长、经济学家刘国光更评论说，可以利用中策熟悉国外企业上市的原则和渠道把一些国营企业经过重整后，转换成为具国际性的企业，陆续在国外上市，更多地吸引国外资金来投入国内企业发展。</p></blockquote></blockquote><blockquote><blockquote><p>突然间冒出来的黄鸿年提供了一种搞活国营企业的“另类办法”，那么，除此之外，确乎是看不到有什么新的奇特招数。国务院颁布的各项通知，仍然是“继续转换企业经营机制”，“继续限产压库”，“继续抓好品种质量效益”，“继续清理三角债”</p></blockquote></blockquote><blockquote><blockquote><p>“三铁”，分别为“铁饭碗”、“铁交椅”和“铁工资”，实指国营企业的劳动用工、人事和分配制度，它们被认为是国营企业的传统优越性所在，也是其内部机制僵化累赘的症结。</p></blockquote></blockquote><blockquote><blockquote><p>《经济日报》在不到一个月的时间里发稿36篇，它坚决地认为，“破三铁”是国营企业改革的一次“攻坚战”。新华社也发表述评，称“破除三铁，是今年企业改革的主旋律”。到3月底，全国“破三铁”试点企业已逾千家。</p></blockquote></blockquote><blockquote><blockquote><p>在某种意义上，大张旗鼓的“破三铁”是一次无可奈何的观念运动，它让人们意识到，他们一直以此为家的国营企业不再是永远的保姆和不沉的大船。在媒体的热烈鼓噪和“徐州经验”的启发下，本溪钢铁厂宣布10.6万名职工全部实行全员合同制，它被认为是中国大型企业第一次打破“铁饭碗”，上海、四川和北京等地的老牌国营企业也纷纷以深化改革为名义大幅度裁员，大批工人下岗回家。有些地方政府官员更直接提出，以三铁精神（铁面孔、铁手腕、铁心肠）来破三铁。</p></blockquote></blockquote><blockquote><blockquote><p>三铁既破，然而社会保障体制却没有健全，成千上万的工人下岗，一下子变成了无依无靠的社会弃儿，严重的失业迅速演变成一场社会危机，一些地方相继发生被裁员工人跳楼自杀和行凶报复的事件。</p></blockquote></blockquote><blockquote><blockquote><p>新华社旗下的《半月谈》刊发权威人士言论，称“破三铁，要谨慎”。一位叫贺中天的经济学家批评说：“徐州搞破三铁，市委规定亏损企业工人扣多少，厂长扣多少，政府职能不转变，光扣厂长工人的工资，企业转换不了机制。”北京大学校长吴树青更论证说：“试图用皮鞭加饥饿的办法搞活国营企业是行不通的，每个公民都有宪法赋予的劳动权利，砸铁饭碗是违法的。”</p></blockquote></blockquote><blockquote><blockquote><p>于是，到年中，这场轰轰烈烈的运动就戛然而止了。7月，改革策略重新回到原来的放权主题上，国务院发布《全民所有制工业企业转换经营机制条例》，宣布赋予企业14项经营自主权，其中包括产品销售权、物资采购权、资金支配权等</p></blockquote></blockquote><blockquote><blockquote><p>90%的厂长承认“即使有拒绝权也不敢用”。作为国有资产所有者的国家，到底该如何管理和控制国营企业，始终在“收与放”的悖论间徘徊，进退维艰。</p></blockquote></blockquote><blockquote><blockquote><p>中国股市从一开始就把股民在制度上分成了散户和大户——后来又有了“庄家”，成为富者越富、穷者越穷的游戏场。</p></blockquote></blockquote><blockquote><blockquote><p>发行新股只好实行抽签的办法。8月7日，深交所发布1992年度《新股认购抽签表发售公告》，宣布发行国内公众股5亿股，发售抽签表500万张，中签率为10%，每张抽签表可认购1000股。</p></blockquote></blockquote><blockquote><blockquote><p>事后的调查表明，抽签表的发售工作出现了集体舞弊的事件，涉及金融系统4180人，各发售点平均私分私购达44.6%——很多知情者认为，事实应该远远高于这个比例。舞弊事件对股民信心造成沉重打击，</p></blockquote></blockquote><blockquote><blockquote><p>百万股民的空前热情、股市的暴涨狂跌，乃至发生在深圳的舞弊事件，让决策层以最直观的方式看到股票市场这个金融工具的可利用性。当时，全国民众的银行储蓄已经超过1.3万亿元，成为一只随时可能诱发通货膨胀的可怕的“笼中虎”，而中央政府的财政则十分拮据，几无可能对国营企业的资金需求提供帮助，而股市的火爆让决策者们突然发现，这可能是拯救已经陷入泥潭，而政府无计可施、无血可输的国营企业的最佳手段。</p></blockquote></blockquote><blockquote><blockquote><p>原野公司11次变更股权，屡屡发布诱人的投资预期，导致股价节节上升，彭建东则多次乘机抛股套现，</p></blockquote></blockquote><blockquote><blockquote><p>原野问题的基本线索是：注入资本（或他人代垫）成立公司——获取贷款搞基建——转换股权转走资金——评估资产将升值收益分配汇出境外，并扩大账面投资额——转让法人股获利，增大年度经营实绩。这是一个投机取巧钻管理上、政策上空子的案例。</p></blockquote></blockquote><blockquote><blockquote><p>中国在加快改革和开放上的姿态，让美国人和欧洲人大大地松了一口气。自1989年以来，弥漫在中国与西方世界之间的不信任的迷雾逐渐散去。跨国公司迫不及待地纷纷加大对中国的投入</p></blockquote></blockquote><blockquote><blockquote><p>，根据对中国GNP的购买力平价估计，中国到2014年时可以在总产出上超过美国。这自然引起不小的震动。这一年，在西方的主流媒体上，还出现了一个新的经济名词——大中华区（Greater China）。《财富》高级编辑路易斯·克拉拉在一篇题为《没有疆界的崭新中国》中指出，来自中国台湾和香港的金钱和管理经验正在把中国大陆的南方变成整个亚洲的产业发动机。</p></blockquote></blockquote><blockquote><blockquote><p>这真是一个矛盾重重的年代。人们常常困顿于眼前，而对未来充满期望。正如发现了“创新”奥秘的美国经济学家熊彼特所言：“发展是一个突出的现象，它在流动的渠道中自发地、非连续地变化，是均衡的扰动，它永远地改变和取代着先前存在的均衡状态。</p></blockquote></blockquote><blockquote><blockquote><p>我们即将看到，中国开始从观念驱动向利益驱动的时代转型，政府将表现出热烈的参与欲望和强悍的行政调控力，国营、民间和国际三大商业资本将展开更为壮观和激烈的竞争、博弈与交融。</p></blockquote></blockquote>]]></content>
    
    
    <categories>
      
      <category>读书笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>激荡的三十年</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL基础(一)</title>
    <link href="/posts/bc85e8d9.html"/>
    <url>/posts/bc85e8d9.html</url>
    
    <content type="html"><![CDATA[<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><h1 id="SQL数据定义"><a href="#SQL数据定义" class="headerlink" title="SQL数据定义"></a>SQL数据定义</h1><h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587471474608-067e87fc-6ba0-4618-b9a7-d54db5ec496f.png" srcset="/img/loading.gif" alt="image.png"><br>如果对char(10)属性存入Avi，则空的七个字符会被空格填入，varchar(10)则不会有空格</p><blockquote><p>用var和char对比，var 不一定 会自动填入空格来使长度一致，取决于数据库系统<br>两个char则会自动添加空格使长度一致</p></blockquote><h2 id="基本模式定义"><a href="#基本模式定义" class="headerlink" title="基本模式定义"></a>基本模式定义</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587471823562-c50e815f-174b-4c88-9515-db9ba11125e3.png" srcset="/img/loading.gif" alt="image.png"><br><img src="https://gitee.com/cher112/image/raw/master/img/1587471845214-00aad91d-5bb7-4d92-97fd-1da608479dc7.png" srcset="/img/loading.gif" alt="image.png"><br><strong>完整性约束</strong><br><img src="https://gitee.com/cher112/image/raw/master/img/1587471869996-67c7603c-030d-405c-b6f9-58a32ac94bf2.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="查询的基本结构"><a href="#查询的基本结构" class="headerlink" title="查询的基本结构"></a>查询的基本结构</h1><pre><code class="hljs sql">单关系查询<span class="hljs-keyword">select</span> dept_name <span class="hljs-keyword">from</span> instructor <span class="hljs-keyword">where</span> <span class="hljs-keyword">name</span> = <span class="hljs-string">'jack'</span>多关系查询<span class="hljs-keyword">select</span> A1, A2 <span class="hljs-keyword">from</span> r1, r2 <span class="hljs-keyword">where</span> P;自然连接course(cid,title,deptname,credits); insturctor+teacher(id name deptname salary cid sid)<span class="hljs-keyword">select</span> <span class="hljs-keyword">name</span>，course_id<span class="hljs-keyword">from</span> insturctor <span class="hljs-keyword">natural</span> <span class="hljs-keyword">join</span> teaches;from(instructor natural join teaches) join course using（course_id）//指定哪些相等列作为拼接(如果不指定，可能有跨系授课的元组被删除,因为join的时候有两个相同属性列，都作为join的依据)</code></pre><p><img src="https://gitee.com/cher112/image/raw/master/img/1587472713568-fd339c6a-fe79-4025-8d95-dce39bdeaf54.png" srcset="/img/loading.gif" alt="image.png"></p><blockquote><p>实际过程中，查询会尽可能只产生满足where子句谓词的笛卡尔积元素来优化执行</p></blockquote><h2 id="附加的基本运算"><a href="#附加的基本运算" class="headerlink" title="附加的基本运算"></a>附加的基本运算</h2><h2 id="更名运算"><a href="#更名运算" class="headerlink" title="更名运算"></a>更名运算</h2><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">as</span> instructor_name ,course_id <span class="hljs-keyword">from</span> instructor <span class="hljs-keyword">as</span> T, teaches<span class="hljs-keyword">where</span> instructor.ID = teaches.ID</code></pre><h2 id="字符串运算"><a href="#字符串运算" class="headerlink" title="字符串运算"></a>字符串运算</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587542539899-d01905d7-d035-4889-8151-8fe6a5f4dac2.png" srcset="/img/loading.gif" alt="image.png"><br>eg: where building like ‘%Watson%’  /全文包含W-word就可以筛选出来</p><p>转义字符 escape‘’<br>eg:<img src="https://gitee.com/cher112/image/raw/master/img/1587542641211-20af9314-18fc-49b0-8f24-6d305464f1fd.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="select子句的属性说明"><a href="#select子句的属性说明" class="headerlink" title="select子句的属性说明"></a>select子句的属性说明</h2><p>select xx.*                  所有的属性</p><h2 id="排列元组的显示次序"><a href="#排列元组的显示次序" class="headerlink" title="排列元组的显示次序"></a>排列元组的显示次序</h2><p>order by、desc降序、asc升序<br><img src="https://gitee.com/cher112/image/raw/master/img/1587542716555-12bbb3ae-2606-4c3a-ae41-36572f9a2018.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="where子句谓词"><a href="#where子句谓词" class="headerlink" title="where子句谓词"></a>where子句谓词</h2><p><img src="https://gitee.com/cher112/image/raw/master/img/1587542765188-2eb07883-d3fa-4048-9468-05d3f1634587.png" srcset="/img/loading.gif" alt="image.png"></p><h1 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h1><h1 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h1><h1 id="嵌套子查询"><a href="#嵌套子查询" class="headerlink" title="嵌套子查询"></a>嵌套子查询</h1><h1 id="数据库修改"><a href="#数据库修改" class="headerlink" title="数据库修改"></a>数据库修改</h1><h1 id="sqlzoo总结"><a href="#sqlzoo总结" class="headerlink" title="sqlzoo总结"></a>sqlzoo总结</h1><p><img src="https://gitee.com/cher112/image/raw/master/img/1588145834975-4835ade7-c2a3-43ab-85c8-68e52f15baa5.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="CASE"><a href="#CASE" class="headerlink" title="CASE"></a>CASE</h2><p>替换某个值为某个值<br>简单case：<br>CASE WHEN X THEN Y<br>else ‘其他’end,<br>把x换为Y，其他的不管<br>eg：select u.id,u.name,<br>  <strong>2</strong>    (case u.sex<br>  <strong>3</strong>      when <strong>1</strong> then ‘男’<br>  <strong>4</strong>      when <strong>2</strong> then ‘女’<br>  <strong>5</strong>      else ‘空的’<br>  <strong>6</strong>      end<br>  <strong>7</strong>     )性别<br>  <strong>8</strong>  from users u;</p><p>将case命名为 性别</p><p>其他用法<br>将sum和case结合，分段统计<br>eg：<img src="https://gitee.com/cher112/image/raw/master/img/1588146255044-f76945b8-27fb-41c9-843f-6b23552b7e78.png" srcset="/img/loading.gif" alt="image.png"><br>在这里case when是作为搜索函数使用。</p><h2 id="Group-by"><a href="#Group-by" class="headerlink" title="Group by"></a>Group by</h2><p>GROUP BY 语句用于结合合计函数，根据一个或多个<strong>列对结果集进行分组</strong>。</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1588146492983-f7293223-8a60-489b-9b43-397bc8891893.png" srcset="/img/loading.gif" alt="image.png"></p><p>eg:<br><img src="https://gitee.com/cher112/image/raw/master/img/1588146567763-56f2f008-0aad-4aaf-bed7-c93ab7efd0c8.png" srcset="/img/loading.gif" alt="image.png"></p><p>SELECT Customer,SUM(OrderPrice) FROM Orders<br>GROUP BY Customer</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1588146586849-0a2946c9-73be-4901-af0a-972581de73b8.png" srcset="/img/loading.gif" alt="image.png"></p><p>SELECT Customer,SUM(OrderPrice) FROM Orders<br><img src="https://gitee.com/cher112/image/raw/master/img/1588146598817-ad50c03c-aa3c-4506-97a3-35df0bfad3e1.png" srcset="/img/loading.gif" alt="image.png"></p><p>解释：groupby通过customer给price先分组，再处理sum聚集函数。</p><h3 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h3><p>在 SQL 中增加 HAVING 子句原因是，WHERE 关键字无法与合计函数一起使用。(<strong>需要有一个能操作聚集函数的语句</strong>)<br><img src="https://gitee.com/cher112/image/raw/master/img/1588146706299-1e084ac6-53a8-4e36-b38f-aaecd5009f41.png" srcset="/img/loading.gif" alt="image.png"><br>eg：<br>SELECT Customer,SUM(OrderPrice) FROM Orders<br>GROUP BY Customer<br>HAVING SUM(OrderPrice)&lt;2000</p><p><img src="https://gitee.com/cher112/image/raw/master/img/1588146745631-56f87ecb-68bf-44d0-b085-e3ee6efd5d5a.png" srcset="/img/loading.gif" alt="image.png"></p><h2 id="between-and"><a href="#between-and" class="headerlink" title="between and"></a>between and</h2><p>包括首尾的区间<br><img src="https://gitee.com/cher112/image/raw/master/img/1588147556775-3f151e64-62db-418f-99b2-25d6b6d61388.png" srcset="/img/loading.gif" alt="image.png"></p><p>order by 有个顺序，补全笔记的时候写上。</p>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
